<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Machine Controller Manager on Gardener</title><link>https://gardener.cloud/docs/other-components/machine-controller-manager/</link><description>Recent content in Machine Controller Manager on Gardener</description><generator>Hugo</generator><language>en-US</language><atom:link href="https://gardener.cloud/docs/other-components/machine-controller-manager/index.xml" rel="self" type="application/rss+xml"/><item><title>Adding Support for a Cloud Provider</title><link>https://gardener.cloud/docs/other-components/machine-controller-manager/cp_support_new/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/machine-controller-manager/cp_support_new/</guid><description>&lt;h1 id="adding-support-for-a-new-provider">Adding support for a new provider&lt;a class="td-heading-self-link" href="#adding-support-for-a-new-provider" aria-label="Heading self-link">&lt;/a>&lt;/h1>&lt;p>Steps to be followed while implementing a new (hyperscale) provider are mentioned below. This is the easiest way to add new provider support using a blueprint code.&lt;/p>
&lt;p>However, you may also develop your machine controller from scratch, which would provide you with more flexibility. First, however, make sure that your custom machine controller adheres to the &lt;code>Machine.Status&lt;/code> struct defined in the &lt;a href="https://github.com/gardener/machine-controller-manager/blob/master/pkg/apis/machine/types.go">MachineAPIs&lt;/a>. This will make sure the MCM can act with higher-level controllers like MachineSet and MachineDeployment controller. The key is the &lt;code>Machine.Status.CurrentStatus.Phase&lt;/code> key that indicates the status of the machine object.&lt;/p></description></item><item><title>Apis</title><link>https://gardener.cloud/docs/other-components/machine-controller-manager/documents/apis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/machine-controller-manager/documents/apis/</guid><description>&lt;h2 id="specification">Specification&lt;a class="td-heading-self-link" href="#specification" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;h3 id="providerspec-schema">ProviderSpec Schema&lt;a class="td-heading-self-link" href="#providerspec-schema" aria-label="Heading self-link">&lt;/a>&lt;/h3>&lt;br>
&lt;h3 id="machine.sapcloud.io/v1alpha1.Machine">
&lt;b>Machine&lt;/b>
&lt;/h3>
&lt;p>
&lt;p>Machine is the representation of a physical or virtual machine.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>apiVersion&lt;/code>
&lt;/td>
&lt;td>
string
&lt;/td>
&lt;td>
&lt;code>
machine.sapcloud.io/v1alpha1
&lt;/code>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>
&lt;/td>
&lt;td>
string
&lt;/td>
&lt;td>
&lt;code>Machine&lt;/code>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>
&lt;/td>
&lt;td>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.29/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>ObjectMeta for machine object&lt;/p>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>spec&lt;/code>
&lt;/td>
&lt;td>
&lt;em>
&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/documents/apis/#machine.sapcloud.io/v1alpha1.MachineSpec">
MachineSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Spec contains the specification of the machine&lt;/p>
&lt;br/>
&lt;br/>
&lt;table>
&lt;tr>
&lt;td>
&lt;code>class&lt;/code>
&lt;/td>
&lt;td>
&lt;em>
&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/documents/apis/#machine.sapcloud.io/v1alpha1.ClassSpec">
ClassSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Class contains the machineclass attributes of a machine&lt;/p></description></item><item><title>Deployment</title><link>https://gardener.cloud/docs/other-components/machine-controller-manager/deployment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/machine-controller-manager/deployment/</guid><description>&lt;h1 id="deploying-the-machine-controller-manager-into-a-kubernetes-cluster">Deploying the Machine Controller Manager into a Kubernetes cluster&lt;a class="td-heading-self-link" href="#deploying-the-machine-controller-manager-into-a-kubernetes-cluster" aria-label="Heading self-link">&lt;/a>&lt;/h1>&lt;!-- TOC -->
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/deployment/#deploying-the-machine-controller-manager-into-a-kubernetes-cluster">Deploying the Machine Controller Manager into a Kubernetes cluster&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/deployment/#prepare-the-cluster">Prepare the cluster&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/deployment/#build-the-docker-image">Build the Docker image&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/deployment/#configuring-optional-parameters-while-deploying">Configuring optional parameters while deploying&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/deployment/#usage">Usage&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;!-- /TOC -->
&lt;p>As already mentioned, the Machine Controller Manager is designed to run as controller in a Kubernetes cluster. The existing source code can be compiled and tested on a local machine as described in &lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/local_setup/">Setting up a local development environment&lt;/a>. You can deploy the Machine Controller Manager using the steps described below.&lt;/p></description></item><item><title>Excess Reserve Capacity</title><link>https://gardener.cloud/docs/other-components/machine-controller-manager/proposals/excess_reserve_capacity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/machine-controller-manager/proposals/excess_reserve_capacity/</guid><description>&lt;h1 id="excess-reserve-capacity">Excess Reserve Capacity&lt;a class="td-heading-self-link" href="#excess-reserve-capacity" aria-label="Heading self-link">&lt;/a>&lt;/h1>&lt;!-- TOC -->
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/proposals/excess_reserve_capacity/#excess-reserve-capacity">Excess Reserve Capacity&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/proposals/excess_reserve_capacity/#goal">Goal&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/proposals/excess_reserve_capacity/#note">Note&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/proposals/excess_reserve_capacity/#possible-approaches">Possible Approaches&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/proposals/excess_reserve_capacity/#approach-1-enhance-machine-controller-manager-to-also-entertain-the-excess-machines">Approach 1: Enhance Machine-controller-manager to also entertain the excess machines&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/proposals/excess_reserve_capacity/#approach-2-enhance-cluster-autoscaler-by-simulating-fake-pods-in-it">Approach 2: Enhance Cluster-autoscaler by simulating fake pods in it&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/proposals/excess_reserve_capacity/#approach-3-enhance-cluster-autoscaler-to-support-pluggable-scaling-events">Approach 3: Enhance cluster-autoscaler to support pluggable scaling-events&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/proposals/excess_reserve_capacity/#approach-4-make-intelligent-use-of-low-priority-pods">Approach 4: Make intelligent use of Low-priority pods&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;!-- /TOC -->
&lt;h2 id="goal">Goal&lt;a class="td-heading-self-link" href="#goal" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;p>Currently, autoscaler optimizes the number of machines for a given application-workload. Along with effective resource utilization, this feature brings concern where, many times, when new application instances are created - they don&amp;rsquo;t find space in existing cluster. This leads the cluster-autoscaler to create new machines via MachineDeployment, which can take from 3-4 minutes to ~10 minutes, for the machine to really come-up and join the cluster. In turn, application-instances have to wait till new machines join the cluster.&lt;/p></description></item><item><title>GRPC Based Implementation of Cloud Providers</title><link>https://gardener.cloud/docs/other-components/machine-controller-manager/proposals/external_providers_grpc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/machine-controller-manager/proposals/external_providers_grpc/</guid><description>&lt;h1 id="grpc-based-implementation-of-cloud-providers---wip">GRPC based implementation of Cloud Providers - WIP&lt;a class="td-heading-self-link" href="#grpc-based-implementation-of-cloud-providers---wip" aria-label="Heading self-link">&lt;/a>&lt;/h1>&lt;h2 id="goal">Goal:&lt;a class="td-heading-self-link" href="#goal" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;p>Currently the Cloud Providers&amp;rsquo; (CP) functionalities ( Create(), Delete(), List() ) are part of the Machine Controller Manager&amp;rsquo;s (MCM)repository. Because of this, adding support for new CPs into MCM requires merging code into MCM which may not be required for core functionalities of MCM itself. Also, for various reasons it may not be feasible for all CPs to merge their code with MCM which is an Open Source project.&lt;/p></description></item><item><title>Hotupdate Instances</title><link>https://gardener.cloud/docs/other-components/machine-controller-manager/proposals/hotupdate-instances/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/machine-controller-manager/proposals/hotupdate-instances/</guid><description>&lt;h1 id="hot-update-virtualmachine-tags-without-triggering-a-rolling-update">Hot-Update VirtualMachine tags without triggering a rolling-update&lt;a class="td-heading-self-link" href="#hot-update-virtualmachine-tags-without-triggering-a-rolling-update" aria-label="Heading self-link">&lt;/a>&lt;/h1>&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/proposals/hotupdate-instances/#hot-update-virtualmachine-tags-without-triggering-a-rolling-update">Hot-Update VirtualMachine tags without triggering a rolling-update&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/proposals/hotupdate-instances/#motivation">Motivation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/proposals/hotupdate-instances/#boundary-condition">Boundary Condition&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/proposals/hotupdate-instances/#what-is-available-today">What is available today?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/proposals/hotupdate-instances/#what-are-the-problems-with-the-current-approach">What are the problems with the current approach?&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/proposals/hotupdate-instances/#machineclass-update-and-its-impact">MachineClass Update and its impact&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/proposals/hotupdate-instances/#proposal">Proposal&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/proposals/hotupdate-instances/#shoot-yaml-changes">Shoot YAML changes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/proposals/hotupdate-instances/#provider-specific-workerconfig-api-changes">Provider specific WorkerConfig API changes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/proposals/hotupdate-instances/#gardener-provider-extension-changes">Gardener provider extension changes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/proposals/hotupdate-instances/#driver-interface-changes">Driver interface changes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/proposals/hotupdate-instances/#machine-class-reconciliation">Machine Class reconciliation&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/proposals/hotupdate-instances/#reconciliation-changes">Reconciliation Changes&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="motivation">Motivation&lt;a class="td-heading-self-link" href="#motivation" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/gardener/machine-controller-manager/issues/750">MCM Issue#750&lt;/a> There is a requirement to provide a way for consumers to add tags which can be hot-updated onto VMs. This requirement can be generalized to also offer a convenient way to specify tags which can be applied to VMs, NICs, Devices etc.&lt;/p></description></item><item><title>Initialize Machine</title><link>https://gardener.cloud/docs/other-components/machine-controller-manager/proposals/initialize-machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/machine-controller-manager/proposals/initialize-machine/</guid><description>&lt;h1 id="post-create-initialization-of-machine-instance">Post-Create Initialization of Machine Instance&lt;a class="td-heading-self-link" href="#post-create-initialization-of-machine-instance" aria-label="Heading self-link">&lt;/a>&lt;/h1>&lt;h2 id="background">Background&lt;a class="td-heading-self-link" href="#background" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;p>Today the &lt;a href="https://github.com/gardener/machine-controller-manager/blob/rel-v0.49/pkg/util/provider/driver/driver.go#L28">driver.Driver&lt;/a> facade represents the boundary between the the &lt;code>machine-controller&lt;/code> and its various provider specific implementations.&lt;/p>
&lt;p>We have abstract operations for creation/deletion and listing of machines (actually compute instances) but we do not correctly handle post-creation initialization logic. Nor do we provide an abstract operation to represent the hot update of an instance after creation.&lt;/p>
&lt;p>We have found this to be necessary for several use cases. Today in the MCM AWS Provider, we already misuse &lt;code>driver.GetMachineStatus&lt;/code> which is supposed to be a read-only operation obtaining the status of an instance.&lt;/p></description></item><item><title>Integration Tests</title><link>https://gardener.cloud/docs/other-components/machine-controller-manager/integration_tests/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/machine-controller-manager/integration_tests/</guid><description>&lt;h1 id="integration-tests">Integration tests&lt;a class="td-heading-self-link" href="#integration-tests" aria-label="Heading self-link">&lt;/a>&lt;/h1>&lt;h2 id="usage">Usage&lt;a class="td-heading-self-link" href="#usage" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;h2 id="general-setup--configurations">General setup &amp;amp; configurations&lt;a class="td-heading-self-link" href="#general-setup--configurations" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;p>Integration tests for &lt;code>machine-controller-manager-provider-{provider-name}&lt;/code> can be executed manually by following below steps.&lt;/p>
&lt;ol>
&lt;li>Clone the repository &lt;code>machine-controller-manager-provider-{provider-name}&lt;/code> on the local system.&lt;/li>
&lt;li>Navigate to &lt;code>machine-controller-manager-provider-{provider-name}&lt;/code> directory and create a &lt;code>dev&lt;/code> sub-directory in it.&lt;/li>
&lt;li>If the tags on instances &amp;amp; associated resources on the provider are of &lt;code>String&lt;/code> type (for example, GCP tags on its instances are of type &lt;code>String&lt;/code> and not key-value pair) then add &lt;code>TAGS_ARE_STRINGS := true&lt;/code> in the &lt;code>Makefile&lt;/code> and export it. For GCP this has already been hard coded in the &lt;code>Makefile&lt;/code>.&lt;/li>
&lt;/ol>
&lt;h2 id="running-the-tests">Running the tests&lt;a class="td-heading-self-link" href="#running-the-tests" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>There is a rule &lt;code>test-integration&lt;/code> in the &lt;code>Makefile&lt;/code> of the provider repository, which can be used to start the integration test:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ make test-integration 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>This will ask for additional inputs. Most of them are self explanatory except:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>The script assumes that both the control and target clusters are already being created.&lt;/li>
&lt;li>In case of non-gardener setup (control cluster is not a gardener seed), the name of the machineclass must be &lt;code>test-mc-v1&lt;/code> and the value of &lt;code>providerSpec.secretRef.name&lt;/code> should be &lt;code>test-mc-secret&lt;/code>.&lt;/li>
&lt;li>In case of azure, &lt;code>TARGET_CLUSTER_NAME&lt;/code> must be same as the name of the Azure ResourceGroup for the cluster.&lt;/li>
&lt;li>If you are deploying the secret manually, a &lt;code>Secret&lt;/code> named &lt;code>test-mc-secret&lt;/code> (that contains the provider secret and cloud-config) in the &lt;code>default&lt;/code> namespace of the Control Cluster should be created.&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>The controllers log files (&lt;code>mcm_process.log&lt;/code> and &lt;code>mc_process.log&lt;/code>) are stored in &lt;code>.ci/controllers-test/logs&lt;/code> repo and can be used later.&lt;/li>
&lt;/ol>
&lt;h2 id="adding-integration-tests-for-new-providers">Adding Integration Tests for new providers&lt;a class="td-heading-self-link" href="#adding-integration-tests-for-new-providers" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;p>For a new provider, Running Integration tests works with no changes. But for the orphan resource test cases to work correctly, the provider-specific API calls and the Resource Tracker Interface (RTI) should be implemented. Please check &lt;a href="https://github.com/gardener/machine-controller-manager-provider-aws/blob/master/test/integration/provider/">&lt;code>machine-controller-manager-provider-aws&lt;/code>&lt;/a> for reference.&lt;/p></description></item><item><title>Local Setup</title><link>https://gardener.cloud/docs/other-components/machine-controller-manager/local_setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/machine-controller-manager/local_setup/</guid><description>&lt;h1 id="preparing-the-local-development-setup-mac-os-x">Preparing the Local Development Setup (Mac OS X)&lt;a class="td-heading-self-link" href="#preparing-the-local-development-setup-mac-os-x" aria-label="Heading self-link">&lt;/a>&lt;/h1>&lt;!-- TOC -->
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/local_setup/#preparing-the-local-development-setup-mac-os-x">Preparing the Local Development Setup (Mac OS X)&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/local_setup/#installing-golang-environment">Installing Golang environment&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/local_setup/#installing-docker-optional">Installing &lt;code>Docker&lt;/code> (Optional)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/local_setup/#setup-docker-hub-account-optional">Setup &lt;code>Docker Hub&lt;/code> account (Optional)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/local_setup/#local-development">Local development&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/local_setup/#installing-the-machine-controller-manager-locally">Installing the Machine Controller Manager locally&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/local_setup/#prepare-the-cluster">Prepare the cluster&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/local_setup/#getting-started">Getting started&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/local_setup/#testing-machine-classes">Testing Machine Classes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/local_setup/#usage">Usage&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;!-- /TOC -->
&lt;p>Conceptionally, the Machine Controller Manager is designed to run in a container within a Pod inside a Kubernetes cluster. For development purposes, you can run the Machine Controller Manager as a Go process on your local machine. This process connects to your remote cluster to manage VMs for that cluster. That means that the Machine Controller Manager runs outside a Kubernetes cluster which requires providing a &lt;a href="https://kubernetes.io/docs/tasks/access-application-cluster/authenticate-across-clusters-kubeconfig/">Kubeconfig&lt;/a> in your local filesystem and point the Machine Controller Manager to it when running it (see below).&lt;/p></description></item><item><title>Machine</title><link>https://gardener.cloud/docs/other-components/machine-controller-manager/machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/machine-controller-manager/machine/</guid><description>&lt;h1 id="creatingdeleting-machines-vm">Creating/Deleting machines (VM)&lt;a class="td-heading-self-link" href="#creatingdeleting-machines-vm" aria-label="Heading self-link">&lt;/a>&lt;/h1>&lt;!-- TOC -->
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/machine/#creatingdeleting-machines-vm">Creating/Deleting machines (VM)&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/machine/#setting-up-your-usage-environment">Setting up your usage environment&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/machine/#important">Important :&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/machine/#creating-machine">Creating machine&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/machine/#inspect-status-of-machine">Inspect status of machine&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/machine/#delete-machine">Delete machine&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;!-- /TOC -->
&lt;h2 id="setting-up-your-usage-environment">Setting up your usage environment&lt;a class="td-heading-self-link" href="#setting-up-your-usage-environment" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>Follow the &lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/prerequisite/">steps described here&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="important-">Important :&lt;a class="td-heading-self-link" href="#important-" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;blockquote>
 &lt;p>Make sure that the &lt;code>kubernetes/machine_objects/machine.yaml&lt;/code> points to the same class name as the &lt;code>kubernetes/machine_classes/aws-machine-class.yaml&lt;/code>.&lt;/p>

&lt;/blockquote>&lt;blockquote>
 &lt;p>Similarly &lt;code>kubernetes/machine_objects/aws-machine-class.yaml&lt;/code> secret name and namespace should be same as that mentioned in &lt;code>kubernetes/secrets/aws-secret.yaml&lt;/code>&lt;/p></description></item><item><title>Machine Controller Manager FAQ</title><link>https://gardener.cloud/docs/other-components/machine-controller-manager/faq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/machine-controller-manager/faq/</guid><description>&lt;h1 id="frequently-asked-questions">Frequently Asked Questions&lt;a class="td-heading-self-link" href="#frequently-asked-questions" aria-label="Heading self-link">&lt;/a>&lt;/h1>&lt;p>The answers in this FAQ apply to the newest (HEAD) version of Machine Controller Manager. If
you&amp;rsquo;re using an older version of MCM please refer to corresponding version of
this document. Few of the answers assume that the MCM being used is in conjuction with &lt;a href="https://github.com/gardener/autoscaler">cluster-autoscaler&lt;/a>:&lt;/p>
&lt;h1 id="table-of-contents">Table of Contents:&lt;a class="td-heading-self-link" href="#table-of-contents" aria-label="Heading self-link">&lt;/a>&lt;/h1>&lt;!--- TOC BEGIN -->
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#frequently-asked-questions">Frequently Asked Questions&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#table-of-contents">Table of Contents:&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#basics">Basics&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#what-is-machine-controller-manager">What is Machine Controller Manager?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#why-is-my-machine-deleted">Why is my machine deleted?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#what-are-the-different-sub-controllers-in-mcm">What are the different sub-controllers in MCM?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#what-is-safety-controller-in-mcm">What is Safety Controller in MCM?&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#how-to">How to?&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#how-to-install-mcm-in-a-kubernetes-cluster">How to install MCM in a Kubernetes cluster?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#how-to-better-control-the-rollout-process-of-the-worker-nodes">How to better control the rollout process of the worker nodes?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#how-to-scale-down-machinedeployment-by-selective-deletion-of-machines">How to scale down MachineDeployment by selective deletion of machines?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#how-to-force-delete-a-machine">How to force delete a machine?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#how-to-pause-the-ongoing-rolling-update-of-the-machinedeployment">How to pause the ongoing rolling-update of the machinedeployment?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#how-to-delete-machine-object-immedietly-if-i-dont-have-access-to-it">How to delete machine object immedietly if I don&amp;rsquo;t have access to it?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#how-to-avoid-garbage-collection-of-your-node">How to avoid garbage collection of your node?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#how-to-trigger-rolling-update-of-a-machinedeployment">How to trigger rolling update of a machinedeployment?&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#internals">Internals&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#what-is-the-high-level-design-of-mcm">What is the high level design of MCM?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#what-are-the-different-configuration-options-in-mcm">What are the different configuration options in MCM?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#what-are-the-different-timeoutsconfigurations-in-a-machines-lifecycle">What are the different timeouts/configurations in a machine&amp;rsquo;s lifecycle?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#how-is-the-drain-of-a-machine-implemented">How is the drain of a machine implemented?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#how-are-the-stateful-applications-drained-during-machine-deletion">How are the stateful applications drained during machine deletion?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#how-does-maxevictretries-configuration-work-with-draintimeout-configuration">How does &lt;code>maxEvictRetries&lt;/code> configuration work with &lt;code>drainTimeout&lt;/code> configuration?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#what-are-the-different-phases-of-a-machine">What are the different phases of a machine?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#what-health-checks-are-performed-on-a-machine">What health checks are performed on a machine?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#how-does-rate-limiting-replacement-of-machine-work-in-mcm-how-is-it-related-to-meltdown-protection">How does rate limiting replacement of machine work in MCM? How is it related to meltdown protection?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#how-mcm-responds-when-scale-outscale-in-is-done-during-rolling-update-of-a-machinedeployment">How MCM responds when scale-out/scale-in is done during rolling update of a machinedeployment?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#how-does-mcm-prioritize-the-machines-for-deletion-on-scale-down-of-machinedeployment">How does MCM prioritize the machines for deletion on scale-down of machinedeployment?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#how-some-unhealthy-machines-are-drained-quickly">How some unhealthy machines are drained quickly?&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#troubleshooting">Troubleshooting&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#my-machine-is-stuck-in-deletion-for-1-hr-why">My machine is stuck in deletion for 1 hr, why?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#my-machine-is-not-joining-the-cluster-why">My machine is not joining the cluster, why?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#my-rolling-update-is-stuck-why">My rolling update is stuck, why?&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#developer">Developer&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#how-should-i-test-my-code-before-submitting-a-pr">How should I test my code before submitting a PR?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#i-need-to-change-the-apis-what-are-the-recommended-steps">I need to change the APIs, what are the recommended steps?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#how-can-i-update-the-dependencies-of-mcm">How can I update the dependencies of MCM?&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#in-the-context-of-gardener">In the context of Gardener&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#how-can-i-configure-mcm-using-shoot-resource">How can I configure MCM using Shoot resource?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/faq/#how-is-my-worker-pool-spread-across-zones">How is my worker-pool spread across zones?&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;!--- TOC END -->
&lt;h1 id="basics">Basics&lt;a class="td-heading-self-link" href="#basics" aria-label="Heading self-link">&lt;/a>&lt;/h1>&lt;h3 id="what-is-machine-controller-manager">What is Machine Controller Manager?&lt;a class="td-heading-self-link" href="#what-is-machine-controller-manager" aria-label="Heading self-link">&lt;/a>&lt;/h3>&lt;p>Machine Controller Manager aka MCM is a bunch of controllers used for the lifecycle management of the worker machines. It reconciles a set of CRDs such as &lt;code>Machine&lt;/code>, &lt;code>MachineSet&lt;/code>, &lt;code>MachineDeployment&lt;/code> which depicts the functionality of &lt;code>Pod&lt;/code>, &lt;code>Replicaset&lt;/code>, &lt;code>Deployment&lt;/code> of the core Kubernetes respectively. Read more about it at &lt;a href="https://github.com/gardener/machine-controller-manager/tree/master/docs">README&lt;/a>.&lt;/p></description></item><item><title>Machine Deployment</title><link>https://gardener.cloud/docs/other-components/machine-controller-manager/machine_deployment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/machine-controller-manager/machine_deployment/</guid><description>&lt;h1 id="maintaining-machine-replicas-using-machines-deployments">Maintaining machine replicas using machines-deployments&lt;a class="td-heading-self-link" href="#maintaining-machine-replicas-using-machines-deployments" aria-label="Heading self-link">&lt;/a>&lt;/h1>&lt;!-- TOC -->
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/machine_deployment/#maintaining-machine-replicas-using-machines-deployments">Maintaining machine replicas using machines-deployments&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/machine_deployment/#setting-up-your-usage-environment">Setting up your usage environment&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/machine_deployment/#important-warning">Important &amp;#x26a0;&amp;#xfe0f;&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/machine_deployment/#creating-machine-deployment">Creating machine-deployment&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/machine_deployment/#inspect-status-of-machine-deployment">Inspect status of machine-deployment&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/machine_deployment/#health-monitoring">Health monitoring&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/machine_deployment/#update-your-machines">Update your machines&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/machine_deployment/#inspect-existing-cluster-configuration">Inspect existing cluster configuration&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/machine_deployment/#perform-a-rolling-update">Perform a rolling update&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/machine_deployment/#re-check-cluster-configuration">Re-check cluster configuration&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/machine_deployment/#more-variants-of-updates">More variants of updates&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/machine_deployment/#undo-an-update">Undo an update&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/machine_deployment/#pause-an-update">Pause an update&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/machine_deployment/#delete-machine-deployment">Delete machine-deployment&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;!-- /TOC -->
&lt;h2 id="setting-up-your-usage-environment">Setting up your usage environment&lt;a class="td-heading-self-link" href="#setting-up-your-usage-environment" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;p>Follow the &lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/prerequisite/">steps described here&lt;/a>&lt;/p>
&lt;h3 id="important-warning">Important &amp;#x26a0;&amp;#xfe0f;&lt;a class="td-heading-self-link" href="#important-warning" aria-label="Heading self-link">&lt;/a>&lt;/h3>&lt;blockquote>
 &lt;p>Make sure that the &lt;code>kubernetes/machine_objects/machine-deployment.yaml&lt;/code> points to the same class name as the &lt;code>kubernetes/machine_classes/aws-machine-class.yaml&lt;/code>.&lt;/p></description></item><item><title>Machine Error Codes</title><link>https://gardener.cloud/docs/other-components/machine-controller-manager/machine_error_codes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/machine-controller-manager/machine_error_codes/</guid><description>&lt;h1 id="machine-error-code-handling">Machine Error code handling&lt;a class="td-heading-self-link" href="#machine-error-code-handling" aria-label="Heading self-link">&lt;/a>&lt;/h1>&lt;h2 id="notational-conventions">Notational Conventions&lt;a class="td-heading-self-link" href="#notational-conventions" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;p>The keywords &amp;ldquo;MUST&amp;rdquo;, &amp;ldquo;MUST NOT&amp;rdquo;, &amp;ldquo;REQUIRED&amp;rdquo;, &amp;ldquo;SHALL&amp;rdquo;, &amp;ldquo;SHALL NOT&amp;rdquo;, &amp;ldquo;SHOULD&amp;rdquo;, &amp;ldquo;SHOULD NOT&amp;rdquo;, &amp;ldquo;RECOMMENDED&amp;rdquo;, &amp;ldquo;NOT RECOMMENDED&amp;rdquo;, &amp;ldquo;MAY&amp;rdquo;, and &amp;ldquo;OPTIONAL&amp;rdquo; are to be interpreted as described in &lt;a href="https://datatracker.ietf.org/doc/html/rfc2119">RFC 2119&lt;/a> (Bradner, S., &amp;ldquo;Key words for use in RFCs to Indicate Requirement Levels&amp;rdquo;, BCP 14, RFC 2119, March 1997).&lt;/p>
&lt;p>The key words &amp;ldquo;unspecified&amp;rdquo;, &amp;ldquo;undefined&amp;rdquo;, and &amp;ldquo;implementation-defined&amp;rdquo; are to be interpreted as described in the &lt;a href="https://www.open-std.org/jtc1/sc22/wg14/www/C99RationaleV5.10.pdf#page=18">rationale for the C99 standard&lt;/a>.&lt;/p></description></item><item><title>Machine Set</title><link>https://gardener.cloud/docs/other-components/machine-controller-manager/machine_set/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/machine-controller-manager/machine_set/</guid><description>&lt;h1 id="maintaining-machine-replicas-using-machines-sets">Maintaining machine replicas using machines-sets&lt;a class="td-heading-self-link" href="#maintaining-machine-replicas-using-machines-sets" aria-label="Heading self-link">&lt;/a>&lt;/h1>&lt;!-- TOC -->
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/machine_set/#maintaining-machine-replicas-using-machines-sets">Maintaining machine replicas using machines-sets&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/machine_set/#setting-up-your-usage-environment">Setting up your usage environment&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/machine_set/#important-warning">Important &amp;#x26a0;&amp;#xfe0f;&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/machine_set/#creating-machine-set">Creating machine-set&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/machine_set/#inspect-status-of-machine-set">Inspect status of machine-set&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/machine_set/#health-monitoring">Health monitoring&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/machine_set/#delete-machine-set">Delete machine-set&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;!-- /TOC -->
&lt;h2 id="setting-up-your-usage-environment">Setting up your usage environment&lt;a class="td-heading-self-link" href="#setting-up-your-usage-environment" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>Follow the &lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/prerequisite/">steps described here&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="important-warning">Important &amp;#x26a0;&amp;#xfe0f;&lt;a class="td-heading-self-link" href="#important-warning" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;blockquote>
 &lt;p>Make sure that the &lt;code>kubernetes/machines_objects/machine-set.yaml&lt;/code> points to the same class name as the &lt;code>kubernetes/machine_classes/aws-machine-class.yaml&lt;/code>.&lt;/p>

&lt;/blockquote>&lt;blockquote>
 &lt;p>Similarly &lt;code>kubernetes/machine_classes/aws-machine-class.yaml&lt;/code> secret name and namespace should be same as that mentioned in &lt;code>kubernetes/secrets/aws-secret.yaml&lt;/code>&lt;/p></description></item><item><title>Outline</title><link>https://gardener.cloud/docs/other-components/machine-controller-manager/todo/outline/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/machine-controller-manager/todo/outline/</guid><description>&lt;h1 id="machine-controller-manager">Machine Controller Manager&lt;a class="td-heading-self-link" href="#machine-controller-manager" aria-label="Heading self-link">&lt;/a>&lt;/h1>&lt;p>CORE &amp;ndash; ./machine-controller-manager(provider independent)
Out of tree : Machine controller (provider specific)
MCM is a set controllers:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Machine Deployment Controller&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Machine Set Controller&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Machine Controller&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Machine Safety Controller&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="questions-and-refactoring-suggestions">Questions and refactoring Suggestions&lt;a class="td-heading-self-link" href="#questions-and-refactoring-suggestions" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;h3 id="refactoring">Refactoring&lt;a class="td-heading-self-link" href="#refactoring" aria-label="Heading self-link">&lt;/a>&lt;/h3>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Statement&lt;/th>
 &lt;th>FilePath&lt;/th>
 &lt;th>Status&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ConcurrentNodeSyncs” bad name - nothing to do with node syncs actually. &lt;br /> If its value is ’10’ then it will start 10 goroutines (workers) per resource type (machine, machinist, machinedeployment, provider-specific-class, node - study the different resource types.&lt;/td>
 &lt;td>cmd/machine-controller-manager/app/options/options.go&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>LeaderElectionConfiguration is very similar to the one present in “client-go/tools/leaderelection/leaderelection.go” - can we simply used the one in client-go instead of defining again?&lt;/td>
 &lt;td>pkg/options/types.go - MachineControllerManagerConfiguration&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Have all userAgents as constant. Right now there is just one.&lt;/td>
 &lt;td>cmd/app/controllermanager.go&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Shouldn’t run function be defined on MCMServer struct itself?&lt;/td>
 &lt;td>cmd/app/controllermanager.go&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>clientcmd.BuildConfigFromFlags fallsback to inClusterConfig which will surely not work as that is not the target. Should it not check and exit early?&lt;/td>
 &lt;td>cmd/app/controllermanager.go - run Function&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>A more direct way to create an in cluster config is using &lt;code>k8s.io/client-go/rest&lt;/code> -&amp;gt; rest.InClusterConfig instead of using clientcmd.BuildConfigFromFlags passing empty arguments and depending upon the implementation to fallback to creating a inClusterConfig. If they change the implementation that you get affected.&lt;/td>
 &lt;td>cmd/app/controllermanager.go - run Function&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Introduce a method on MCMServer which gets a target KubeConfig and controlKubeConfig or alternatively which creates respective clients.&lt;/td>
 &lt;td>cmd/app/controllermanager.go - run Function&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Why can’t we use Kubernetes.NewConfigOrDie also for kubeClientControl?&lt;/td>
 &lt;td>cmd/app/controllermanager.go - run Function&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>I do not see any benefit of client builders actually. All you need to do is pass in a config and then directly use client-go functions to create a client.&lt;/td>
 &lt;td>cmd/app/controllermanager.go - run Function&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Function: getAvailableResources - rename this to getApiServerResources&lt;/td>
 &lt;td>cmd/app/controllermanager.go&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Move the method which waits for API server to up and ready to a separate method which returns a discoveryClient when the API server is ready.&lt;/td>
 &lt;td>cmd/app/controllermanager.go - getAvailableResources function&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Many methods in client-go used are now deprecated. Switch to the ones that are now recommended to be used instead.&lt;/td>
 &lt;td>cmd/app/controllermanager.go - startControllers&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>This method needs a general overhaul&lt;/td>
 &lt;td>cmd/app/controllermanager.go - startControllers&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>If the design is influenced/copied from KCM then its very different. There are different controller structs defined for deployment, replicaset etc which makes the code much more clearer. You can see “kubernetes/cmd/kube-controller-manager/apps.go” and then follow the trail from there. - agreed needs to be changed in future (if time permits)&lt;/td>
 &lt;td>pkg/controller/controller.go&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>I am not sure why “MachineSetControlInterface”, “RevisionControlInterface”, “MachineControlInterface”, “FakeMachineControl” are defined in this file?&lt;/td>
 &lt;td>pkg/controller/controller_util.go&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>IsMachineActive&lt;/code> - combine the first 2 conditions into one with OR.&lt;/td>
 &lt;td>pkg/controller/controller_util.go&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Minor change - correct the comment, first word should always be the method name. Currently none of the comments have correct names.&lt;/td>
 &lt;td>pkg/controller/controller_util.go&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>There are too many deep copies made. What is the need to make another deep copy in this method? You are not really changing anything here.&lt;/td>
 &lt;td>pkg/controller/deployment.go - updateMachineDeploymentFinalizers&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Why can&amp;rsquo;t these validations be done as part of a validating webhook?&lt;/td>
 &lt;td>pkg/controller/machineset.go - reconcileClusterMachineSet&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Small change to the following &lt;code>if&lt;/code> condition. &lt;code>else if&lt;/code> is not required a simple &lt;code>else&lt;/code> is sufficient. &lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/todo/outline/#1.1-code1">Code1&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>pkg/controller/machineset.go - reconcileClusterMachineSet&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Why call these &lt;code>inactiveMachines&lt;/code>, these are live and running and therefore active.&lt;/td>
 &lt;td>pkg/controller/machineset.go - terminateMachines&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="clarification">Clarification&lt;a class="td-heading-self-link" href="#clarification" aria-label="Heading self-link">&lt;/a>&lt;/h3>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Statement&lt;/th>
 &lt;th>FilePath&lt;/th>
 &lt;th>Status&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Why are there 2 versions - internal and external versions?&lt;/td>
 &lt;td>General&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Safety controller freezes MCM controllers in the following cases: &lt;br /> * Num replicas go beyond a threshold (above the defined replicas) &lt;br /> * Target API service is not reachable &lt;br /> There seems to be an overlap between DWD and MCM Safety controller. In the meltdown scenario why is MCM being added to DWD, you could have used Safety controller for that.&lt;/td>
 &lt;td>General&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>All machine resources are v1alpha1 - should we not promote it to beta. V1alpha1 has a different semantic and does not give any confidence to the consumers.&lt;/td>
 &lt;td>cmd/app/controllermanager.go&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Shouldn’t controller manager use context.Context instead of creating a stop channel? - Check if signals (&lt;code>os.Interrupt&lt;/code> and &lt;code>SIGTERM&lt;/code> are handled properly. Do not see code where this is handled currently.)&lt;/td>
 &lt;td>cmd/app/controllermanager.go&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>What is the rationale behind a timeout of 10s? If the API server is not up, should this not just block as it can anyways not do anything. Also, if there is an error returned then you exit the MCM which does not make much sense actually as it will be started again and you will again do the poll for the API server to come back up. Forcing an exit of MCM will not have any impact on the reachability of the API server in anyway so why exit?&lt;/td>
 &lt;td>cmd/app/controllermanager.go - getAvailableResources&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>There is a very weird check - &lt;code> availableResources[machineGVR] || availableResources[machineSetGVR] || availableResources[machineDeploymentGVR] &lt;/code> &lt;br> Shouldn’t this be conjunction instead of disjunction? &lt;br />* What happens if you do not find one or all of these resources? &lt;br /> Currently an error log is printed and nothing else is done. MCM can be used outside gardener context where consumers can directly create MachineClass and Machine and not create MachineSet / Maching Deployment. There is no distinction made between context (gardener or outside-gardener). &lt;br />&lt;/td>
 &lt;td>cmd/app/controllermanager.go - StartControllers&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Instead of having an empty select {} to block forever, isn’t it better to wait on the stop channel?&lt;/td>
 &lt;td>cmd/app/controllermanager.go - StartControllers&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Do we need provider specific queues and syncs and listers&lt;/td>
 &lt;td>pkg/controller/controller.go&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Why are resource types prefixed with “Cluster”? - not sure , check PR&lt;/td>
 &lt;td>pkg/controller/controller.go&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>When will forgetAfterSuccess be false and why? - as per the current code this is never the case. - Himanshu will check&lt;/td>
 &lt;td>cmd/app/controllermanager.go - createWorker&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>What is the use of “ExpectationsInterface” and “UIDTrackingContExpectations”? &lt;br />* All expectations related code should be in its own file “expectations.go” and not in this file.&lt;/td>
 &lt;td>pkg/controller/controller_util.go&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Why do we not use lister but directly use the controlMachingClient to get the deployment? Is it because you want to avoid any potential delays caused by update of the local cache held by the informer and accessed by the lister? What is the load on API server due to this?&lt;/td>
 &lt;td>pkg/controller/deployment.go - reconcileClusterMachineDeployment&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Why is this conversion needed? &lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/todo/outline/#1.2-code2">code2&lt;/a>&lt;/td>
 &lt;td>pkg/controller/deployment.go - reconcileClusterMachineDeployment&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>A deep copy of &lt;code>machineDeployment&lt;/code> is already passed and within the function another deepCopy is made. Any reason for it?&lt;/td>
 &lt;td>pkg/controller/deployment.go - addMachineDeploymentFinalizers&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>What is an &lt;code>Status.ObservedGeneration&lt;/code>? &lt;br /> *&lt;em>Read more about generations and observedGeneration at: &lt;br /> &lt;a href="https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata">https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata&lt;/a> &lt;br />&lt;/em> &lt;a href="https://alenkacz.medium.com/kubernetes-operator-best-practices-implementing-observedgeneration-250728868792">https://alenkacz.medium.com/kubernetes-operator-best-practices-implementing-observedgeneration-250728868792&lt;/a> &lt;br /> Ideally the update to the &lt;code>ObservedGeneration&lt;/code> should only be made after successful reconciliation and not before. I see that this is just copied from &lt;code>deployment_controller.go&lt;/code> as is&lt;/td>
 &lt;td>pkg/controller/deployment.go - reconcileClusterMachineDeployment&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Why and when will a &lt;code>MachineDeployment&lt;/code> be marked as frozen and when will it be un-frozen?&lt;/td>
 &lt;td>pkg/controller/deployment.go - reconcileClusterMachineDeployment&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Shoudn&amp;rsquo;t the validation of the machine deployment be done during the creation via a validating webhook instead of allowing it to be stored in etcd and then failing the validation during sync? I saw the checks and these can be done via validation webhook.&lt;/td>
 &lt;td>pkg/controller/deployment.go - reconcileClusterMachineDeployment&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>RollbackTo has been marked as deprecated. What is the replacement? &lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/todo/outline/#1.3-code3">code3&lt;/a>&lt;/td>
 &lt;td>pkg/controller/deployment.go - reconcileClusterMachineDeployment&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>What is the max machineSet deletions that you could process in a single run? The reason for asking this question is that for every machineSetDeletion a new goroutine spawned. &lt;br />* Is the &lt;code>Delete&lt;/code> call a synchrounous call? Which means it blocks till the machineset deletion is triggered which then also deletes the machines (due to cascade-delete and blockOwnerDeletion= true)?&lt;/td>
 &lt;td>pkg/controller/deployment.go - terminateMachineSets&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>If there are validation errors or error when creating label selector then a nil is returned. In the worker reconcile loop if the return value is nil then it will remove it from the queue (forget + done). What is the way to see any errors? Typically when we describe a resource the errors are displayed. Will these be displayed when we discribe a &lt;code>MachineDeployment&lt;/code>?&lt;/td>
 &lt;td>pkg/controller/deployment.go - reconcileClusterMachineSet&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>If an error is returned by &lt;code>updateMachineSetStatus&lt;/code> and it is &lt;code>IsNotFound&lt;/code> error then returning an error will again queue the &lt;code>MachineSet&lt;/code>. Is this desired as &lt;code>IsNotFound&lt;/code> indicates the &lt;code>MachineSet&lt;/code> has been deleted and is no longer there?&lt;/td>
 &lt;td>pkg/controller/deployment.go - reconcileClusterMachineSet&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>is &lt;code>machineControl.DeleteMachine&lt;/code> a synchronous operation which will wait till the machine has been deleted? Also where is the &lt;code>DeletionTimestamp&lt;/code> set on the &lt;code>Machine&lt;/code>? Will it be automatically done by the API server?&lt;/td>
 &lt;td>pkg/controller/deployment.go - prepareMachineForDeletion&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="bugsenhancements">Bugs/Enhancements&lt;a class="td-heading-self-link" href="#bugsenhancements" aria-label="Heading self-link">&lt;/a>&lt;/h3>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Statement + TODO&lt;/th>
 &lt;th>FilePath&lt;/th>
 &lt;th>Status&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>This defines QPS and Burst for its requests to the KAPI. Check if it would make sense to explicitly define a FlowSchema and PriorityLevelConfiguration to ensure that the requests from this controller are given a well-defined preference. What is the rational behind deciding these values?&lt;/td>
 &lt;td>pkg/options/types.go - MachineControllerManagerConfiguration&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>In function “validateMachineSpec” fldPath func parameter is never used.&lt;/td>
 &lt;td>pkg/apis/machine/validation/machine.go&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>If there is an update failure then this method recursively calls itself without any sort of delays which could lead to a LOT of load on the API server. (opened: &lt;a href="https://github.com/gardener/machine-controller-manager/issues/686">https://github.com/gardener/machine-controller-manager/issues/686&lt;/a>)&lt;/td>
 &lt;td>pkg/controller/deployment.go - updateMachineDeploymentFinalizers&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>We are updating &lt;code>filteredMachines&lt;/code> by invoking &lt;code>syncMachinesNodeTemplates&lt;/code>, &lt;code>syncMachinesConfig&lt;/code> and &lt;code>syncMachinesClassKind&lt;/code> but we do not create any deepCopy here. Everywhere else the general principle is when you mutate always make a deepCopy and then mutate the copy instead of the original as a lister is used and that changes the cached copy. &lt;br /> &lt;code>Fix&lt;/code>: &lt;code>SatisfiedExpectations&lt;/code> check has been commented and there is a TODO there to fix it. Is there a PR for this?&lt;/td>
 &lt;td>pkg/controller/machineset.go - reconcileClusterMachineSet&lt;/td>
 &lt;td>pending&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>Code references&lt;/p></description></item><item><title>Prerequisite</title><link>https://gardener.cloud/docs/other-components/machine-controller-manager/prerequisite/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/machine-controller-manager/prerequisite/</guid><description>&lt;h1 id="setting-up-the-usage-environment">Setting up the usage environment&lt;a class="td-heading-self-link" href="#setting-up-the-usage-environment" aria-label="Heading self-link">&lt;/a>&lt;/h1>&lt;!-- TOC -->
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/prerequisite/#setting-up-the-usage-environment">Setting up the usage environment&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/prerequisite/#important-warning">Important &amp;#x26a0;&amp;#xfe0f;&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/prerequisite/#set-kubeconfig">Set KUBECONFIG&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/prerequisite/#replace-provider-credentials-and-desired-vm-configurations">Replace provider credentials and desired VM configurations&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/prerequisite/#deploy-required-crds-and-objects">Deploy required CRDs and Objects&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/prerequisite/#check-current-cluster-state">Check current cluster state&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;!-- /TOC -->
&lt;h2 id="important-warning">Important &amp;#x26a0;&amp;#xfe0f;&lt;a class="td-heading-self-link" href="#important-warning" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;blockquote>
 &lt;p>All paths are relative to the root location of this project repository.&lt;/p>

&lt;/blockquote>&lt;blockquote>
 &lt;p>Run the Machine Controller Manager either as described in &lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/local_setup/">Setting up a local development environment&lt;/a> or &lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/deployment/">Deploying the Machine Controller Manager into a Kubernetes cluster&lt;/a>.&lt;/p></description></item><item><title>Testing And Dependencies</title><link>https://gardener.cloud/docs/other-components/machine-controller-manager/testing_and_dependencies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/machine-controller-manager/testing_and_dependencies/</guid><description>&lt;h2 id="dependency-management">Dependency management&lt;a class="td-heading-self-link" href="#dependency-management" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;p>We use golang modules to manage golang dependencies. In order to add a new package dependency to the project, you can perform &lt;code>go get &amp;lt;PACKAGE&amp;gt;@&amp;lt;VERSION&amp;gt;&lt;/code> or edit the &lt;code>go.mod&lt;/code> file and append the package along with the version you want to use.&lt;/p>
&lt;h3 id="updating-dependencies">Updating dependencies&lt;a class="td-heading-self-link" href="#updating-dependencies" aria-label="Heading self-link">&lt;/a>&lt;/h3>&lt;p>The &lt;code>Makefile&lt;/code> contains a rule called &lt;code>tidy&lt;/code> which performs &lt;code>go mod tidy&lt;/code>.&lt;/p>
&lt;p>&lt;code>go mod tidy&lt;/code> makes sure go.mod matches the source code in the module. It adds any missing modules necessary to build the current module&amp;rsquo;s packages and dependencies, and it removes unused modules that don&amp;rsquo;t provide any relevant packages.&lt;/p></description></item></channel></rss>