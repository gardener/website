<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Etcd Druid on Gardener</title><link>https://gardener.cloud/docs/other-components/etcd-druid/</link><description>Recent content in Etcd Druid on Gardener</description><generator>Hugo</generator><language>en-US</language><atom:link href="https://gardener.cloud/docs/other-components/etcd-druid/index.xml" rel="self" type="application/rss+xml"/><item><title>API Reference</title><link>https://gardener.cloud/docs/other-components/etcd-druid/api-reference/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/api-reference/</guid><description>&lt;p>Packages:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://gardener.cloud/docs/other-components/etcd-druid/api-reference/#druid.gardener.cloud/v1alpha1">druid.gardener.cloud/v1alpha1&lt;/a>
&lt;/li>
&lt;/ul>
&lt;h2 id="druid.gardener.cloud/v1alpha1">druid.gardener.cloud/v1alpha1&lt;/h2>
&lt;p>
&lt;p>Package v1alpha1 is the v1alpha1 version of the etcd-druid API.&lt;/p>
&lt;/p>
Resource Types:
&lt;ul>&lt;/ul>
&lt;h3 id="druid.gardener.cloud/v1alpha1.BackupSpec">BackupSpec
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="https://gardener.cloud/docs/other-components/etcd-druid/api-reference/#druid.gardener.cloud/v1alpha1.EtcdSpec">EtcdSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>BackupSpec defines parameters associated with the full and delta snapshots of etcd.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>port&lt;/code>&lt;/br>
&lt;em>
int32
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Port define the port on which etcd-backup-restore server will be exposed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>tls&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://gardener.cloud/docs/other-components/etcd-druid/api-reference/#druid.gardener.cloud/v1alpha1.TLSConfig">
TLSConfig
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>image&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Image defines the etcd container image and tag&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>store&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://gardener.cloud/docs/other-components/etcd-druid/api-reference/#druid.gardener.cloud/v1alpha1.StoreSpec">
StoreSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Store defines the specification of object store provider for storing backups.&lt;/p></description></item><item><title>01 Multi Node Etcd Clusters</title><link>https://gardener.cloud/docs/other-components/etcd-druid/proposals/01-multi-node-etcd-clusters/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/proposals/01-multi-node-etcd-clusters/</guid><description>&lt;h1 id="dep-01-multi-node-etcd-cluster-instances-via-etcd-druid">DEP-01: Multi-node etcd cluster instances via etcd-druid&lt;/h1>
&lt;p>This document proposes an approach (along with some alternatives) to support provisioning and management of multi-node etcd cluster instances via &lt;a href="https://github.com/gardener/etcd-druid">etcd-druid&lt;/a> and &lt;a href="https://github.com/gardener/etcd-backup-restore">etcd-backup-restore&lt;/a>.&lt;/p>
&lt;h2 id="goal">Goal&lt;/h2>
&lt;ul>
&lt;li>Enhance etcd-druid and etcd-backup-restore to support provisioning and management of multi-node etcd cluster instances within a single Kubernetes cluster.&lt;/li>
&lt;li>The etcd CRD interface should be simple to use. It should preferably work with just setting the &lt;code>spec.replicas&lt;/code> field to the desired value and should not require any more configuration in the CRD than currently required for the single-node etcd instances. The &lt;code>spec.replicas&lt;/code> field is part of the &lt;a href="https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/#scale-subresource">&lt;code>scale&lt;/code> sub-resource&lt;/a> &lt;a href="https://github.com/gardener/etcd-druid/blob/eaf04a2d0e6c7a4f2c8c220182b7a141aabfc70b/api/v1alpha1/etcd_types.go#L299">implementation&lt;/a> in &lt;code>Etcd&lt;/code> CRD.&lt;/li>
&lt;li>The single-node and multi-node scenarios must be automatically identified and managed by &lt;code>etcd-druid&lt;/code> and &lt;code>etcd-backup-restore&lt;/code>.&lt;/li>
&lt;li>The etcd clusters (single-node or multi-node) managed by &lt;code>etcd-druid&lt;/code> and &lt;code>etcd-backup-restore&lt;/code> must automatically recover from failures (even quorum loss) and disaster (e.g. etcd member persistence/data loss) as much as possible.&lt;/li>
&lt;li>It must be possible to dynamically scale an etcd cluster horizontally (even between single-node and multi-node scenarios) by simply scaling the &lt;code>Etcd&lt;/code> scale sub-resource.&lt;/li>
&lt;li>It must be possible to (optionally) schedule the individual members of an etcd clusters on different nodes or even infrastructure availability zones (within the hosting Kubernetes cluster).&lt;/li>
&lt;/ul>
&lt;p>Though this proposal tries to cover most aspects related to single-node and multi-node etcd clusters, there are some more points that are not goals for this document but are still in the scope of either etcd-druid/etcd-backup-restore and/or gardener.
In such cases, a high-level description of how they can be &lt;a href="https://gardener.cloud/docs/other-components/etcd-druid/proposals/01-multi-node-etcd-clusters/#future-work">addressed in the future&lt;/a> are mentioned at the end of the document.&lt;/p></description></item><item><title>02 Snapshot Compaction</title><link>https://gardener.cloud/docs/other-components/etcd-druid/proposals/02-snapshot-compaction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/proposals/02-snapshot-compaction/</guid><description>&lt;h1 id="dep-02-snapshot-compaction-for-etcd">DEP-02: Snapshot Compaction for Etcd&lt;/h1>
&lt;h2 id="current-problem">Current Problem&lt;/h2>
&lt;p>To ensure recoverability of Etcd, backups of the database are taken at regular interval.
Backups are of two types: Full Snapshots and Incremental Snapshots.&lt;/p>
&lt;h3 id="full-snapshots">Full Snapshots&lt;/h3>
&lt;p>Full snapshot is a snapshot of the complete database at given point in time.The size of the database keeps changing with time and typically the size is relatively large (measured in 100s of megabytes or even in gigabytes. For this reason, full snapshots are taken after some large intervals.&lt;/p></description></item><item><title>03 Scaling Up An Etcd Cluster</title><link>https://gardener.cloud/docs/other-components/etcd-druid/proposals/03-scaling-up-an-etcd-cluster/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/proposals/03-scaling-up-an-etcd-cluster/</guid><description>&lt;h1 id="dep-03-scaling-up-a-single-node-to-multi-node-etcd-cluster-deployed-by-etcd-druid">DEP-03: Scaling-up a single-node to multi-node etcd cluster deployed by etcd-druid&lt;/h1>
&lt;p>To mark a cluster for scale-up from single node to multi-node etcd, just patch the etcd custom resource&amp;rsquo;s &lt;code>.spec.replicas&lt;/code> from &lt;code>1&lt;/code> to &lt;code>3&lt;/code> (for example).&lt;/p>
&lt;h2 id="challenges-for-scale-up">Challenges for scale-up&lt;/h2>
&lt;ol>
&lt;li>Etcd cluster with single replica don&amp;rsquo;t have any peers, so no peer communication is required hence peer URL may or may not be TLS enabled. However, while scaling up from single node etcd to multi-node etcd, there will be a requirement to have peer communication between members of the etcd cluster. Peer communication is required for various reasons, for instance for members to sync up cluster state, data, and to perform leader election or any cluster wide operation like removal or addition of a member etc. Hence in a multi-node etcd cluster we need to have TLS enable peer URL for peer communication.&lt;/li>
&lt;li>Providing the correct configuration to start new etcd members as it is different from boostrapping a cluster since these new etcd members will join an existing cluster.&lt;/li>
&lt;/ol>
&lt;h2 id="approach">Approach&lt;/h2>
&lt;p>We first went through the etcd doc of &lt;a href="https://etcd.io/docs/v3.4/op-guide/runtime-configuration/#update-advertise-peer-urls">update-advertise-peer-urls&lt;/a> to find out information regarding peer URL updation. Interestingly, etcd doc has mentioned the following:&lt;/p></description></item><item><title>Add New Etcd Cluster Component</title><link>https://gardener.cloud/docs/other-components/etcd-druid/add-new-etcd-cluster-component/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/add-new-etcd-cluster-component/</guid><description>&lt;h1 id="add-a-new-etcd-cluster-component">Add A New Etcd Cluster Component&lt;/h1>
&lt;p>&lt;code>etcd-druid&lt;/code> defines an &lt;a href="https://github.com/gardener/etcd-druid/blob/3383e0219a6c21c6ef1d5610db964cc3524807c8/internal/component/types.go#L42">Operator&lt;/a> which is responsible for creation, deletion and update of a resource that is created for an &lt;code>Etcd&lt;/code> cluster. If you want to introduce a new resource for an &lt;code>Etcd&lt;/code> cluster then you must do the following:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Add a dedicated &lt;code>package&lt;/code> for the resource under &lt;a href="https://github.com/gardener/etcd-druid/tree/3383e0219a6c21c6ef1d5610db964cc3524807c8/internal/component">component&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Implement &lt;code>Operator&lt;/code> interface.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Define a new &lt;a href="https://github.com/gardener/etcd-druid/blob/3383e0219a6c21c6ef1d5610db964cc3524807c8/internal/component/registry.go#L19">Kind&lt;/a> for this resource in the operator &lt;a href="https://github.com/gardener/etcd-druid/blob/3383e0219a6c21c6ef1d5610db964cc3524807c8/internal/component/registry.go#L8">Registry&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Every resource a.k.a &lt;code>Component&lt;/code> needs to have the following set of default labels:&lt;/p></description></item><item><title>Changing Api</title><link>https://gardener.cloud/docs/other-components/etcd-druid/changing-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/changing-api/</guid><description>&lt;h1 id="change-the-api">Change the API&lt;/h1>
&lt;p>This guide provides detailed information on what needs to be done when the API needs to be changed.&lt;/p>
&lt;p>&lt;code>etcd-druid&lt;/code> API follows the same API conventions and guidelines which Kubernetes defines and adopts. The Kubernetes &lt;a href="https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md">API Conventions&lt;/a> as well as &lt;a href="https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api_changes.md">Changing the API&lt;/a> topics already provide a good overview and general explanation of the basic concepts behind it. We adhere to the principles laid down by Kubernetes.&lt;/p>
&lt;h2 id="etcd-druid-api">Etcd Druid API&lt;/h2>
&lt;p>The etcd-druid API is defined &lt;a href="https://github.com/gardener/etcd-druid/tree/3383e0219a6c21c6ef1d5610db964cc3524807c8/api">here&lt;/a>.&lt;/p></description></item><item><title>Configure Etcd Druid</title><link>https://gardener.cloud/docs/other-components/etcd-druid/deployment/configure-etcd-druid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/deployment/configure-etcd-druid/</guid><description>&lt;h1 id="etcd-druid-cli-flags">etcd-druid CLI Flags&lt;/h1>
&lt;p>&lt;code>etcd-druid&lt;/code> process can be started with the following command line flags.&lt;/p>
&lt;h2 id="command-line-flags">Command line flags&lt;/h2>
&lt;h3 id="leader-election">Leader election&lt;/h3>
&lt;p>If you wish to setup &lt;code>etcd-druid&lt;/code> in high-availability mode then leader election needs to be enabled to ensure that at a time only one replica services the incoming events and does the reconciliation.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Flag&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;th>Default&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>enable-leader-election&lt;/td>
 &lt;td>Leader election provides the capability to select one replica as a leader where active reconciliation will happen. The other replicas will keep waiting for leadership change and not do active reconciliations.&lt;/td>
 &lt;td>false&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>leader-election-id&lt;/td>
 &lt;td>Name of the k8s lease object that leader election will use for holding the leader lock. By default etcd-druid will use lease resource lock for leader election which is also a &lt;a href="https://kubernetes.io/docs/concepts/architecture/leases/#leader-election">natural usecase&lt;/a> for leases and is also recommended by k8s.&lt;/td>
 &lt;td>&amp;ldquo;druid-leader-election&amp;rdquo;&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>leader-election-resource-lock&lt;/td>
 &lt;td>&lt;em>&lt;strong>Deprecated&lt;/strong>&lt;/em>: This flag will be removed in later version of druid. By default &lt;code>lease.coordination.k8s.io&lt;/code> resources will be used for leader election resource locking for the controller manager.&lt;/td>
 &lt;td>&amp;ldquo;leases&amp;rdquo;&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="metrics">Metrics&lt;/h3>
&lt;p>&lt;code>etcd-druid&lt;/code> exposes a &lt;code>/metrics&lt;/code> endpoint which can be scrapped by tools like &lt;a href="https://prometheus.io/">Prometheus&lt;/a>. If the default metrics endpoint configuration is not suitable then consumers can change it via the following options.&lt;/p></description></item><item><title>Contribution</title><link>https://gardener.cloud/docs/other-components/etcd-druid/contribution/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/contribution/</guid><description>&lt;h1 id="contributors-guide">Contributors Guide&lt;/h1>
&lt;p>&lt;code>etcd-druid&lt;/code> is an actively maintained project which has organically evolved to be a mature and stable etcd operator. We welcome active participation from the community and to this end this guide serves as a good starting point.&lt;/p>
&lt;h2 id="code-of-conduct">Code of Conduct&lt;/h2>
&lt;p>All maintainers and contributors must abide by &lt;a href="https://www.contributor-covenant.org/version/2/1/code_of_conduct/">Contributor Covenant&lt;/a>. Real progress can only happen in a collaborative environment which fosters mutual respect, openeness and disruptive innovation.&lt;/p>
&lt;h2 id="developer-certificate-of-origin">Developer Certificate of Origin&lt;/h2>
&lt;p>Due to legal reasons, contributors will be asked to accept a Developer Certificate of Origin (DCO) before they submit the first pull request to the IronCore project, this happens in an automated fashion during the submission process. We use &lt;a href="https://developercertificate.org/">the standard DCO text of the Linux Foundation&lt;/a>.&lt;/p></description></item><item><title>Controllers</title><link>https://gardener.cloud/docs/other-components/etcd-druid/controllers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/controllers/</guid><description>&lt;h1 id="controllers">Controllers&lt;/h1>
&lt;p>etcd-druid is an operator to manage etcd clusters, and follows the &lt;a href="https://kubernetes.io/docs/concepts/extend-kubernetes/operator/">&lt;code>Operator&lt;/code>&lt;/a> pattern for Kubernetes.
It makes use of the &lt;a href="https://github.com/kubernetes-sigs/kubebuilder">Kubebuilder&lt;/a> framework which makes it quite easy to define Custom Resources (CRs) such as &lt;code>Etcd&lt;/code>s and &lt;code>EtcdCopyBackupTask&lt;/code>s through &lt;a href="https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/">&lt;em>Custom Resource Definitions&lt;/em>&lt;/a> (CRDs), and define controllers for these CRDs.
etcd-druid uses Kubebuilder to define the &lt;code>Etcd&lt;/code> CR and its corresponding controllers.&lt;/p>
&lt;p>All controllers that are a part of etcd-druid reside in package &lt;code>internal/controller&lt;/code>, as sub-packages.&lt;/p></description></item><item><title>DEP Title</title><link>https://gardener.cloud/docs/other-components/etcd-druid/proposals/00-template/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/proposals/00-template/</guid><description>&lt;h1 id="dep-nn-your-short-descriptive-title">DEP-NN: Your short, descriptive title&lt;/h1>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;h3 id="goals">Goals&lt;/h3>
&lt;h3 id="non-goals">Non-Goals&lt;/h3>
&lt;h2 id="proposal">Proposal&lt;/h2>
&lt;h2 id="alternatives">Alternatives&lt;/h2></description></item><item><title>Dependency Management</title><link>https://gardener.cloud/docs/other-components/etcd-druid/dependency-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/dependency-management/</guid><description>&lt;h1 id="dependency-management">Dependency Management&lt;/h1>
&lt;p>We use &lt;a href="https://go.dev/wiki/Modules">Go Modules&lt;/a> for dependency management. In order to add a new package dependency to the project, you can perform &lt;code>go get &amp;lt;package@version&amp;gt;&lt;/code> or edit the &lt;code>go.mod&lt;/code> file and append the package along with the version you want to use.&lt;/p>
&lt;h2 id="organize-dependencies">Organize Dependencies&lt;/h2>
&lt;p>Unfortunately go does not differentiate between &lt;code>dev&lt;/code> and &lt;code>test&lt;/code> dependencies. It becomes cleaner to organize &lt;code>dev&lt;/code> and &lt;code>test&lt;/code> dependencies in their respective &lt;code>require&lt;/code> clause which gives a clear view on existing set of dependencies. The goal is to keep the dependencies to a minimum and only add a dependency when absolutely required.&lt;/p></description></item><item><title>Etcd Cluster Components</title><link>https://gardener.cloud/docs/other-components/etcd-druid/concepts/etcd-cluster-components/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/concepts/etcd-cluster-components/</guid><description>&lt;h1 id="etcd-cluster-components">Etcd Cluster Components&lt;/h1>
&lt;p>For every &lt;code>Etcd&lt;/code> cluster that is provisioned by &lt;code>etcd-druid&lt;/code> it deploys a set of resources. Following sections provides information and code reference to each such resource.&lt;/p>
&lt;h2 id="statefulset">StatefulSet&lt;/h2>
&lt;p>&lt;a href="https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/">StatefulSet&lt;/a> is the primary kubernetes resource that gets provisioned for an etcd cluster.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Replicas for the StatefulSet are derived from &lt;code>Etcd.Spec.Replicas&lt;/code> in the custom resource.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Each pod comprises of two containers:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>etcd-wrapper&lt;/code> : This is the main container which runs an etcd process.&lt;/p></description></item><item><title>Etcd Cluster Resource Protection</title><link>https://gardener.cloud/docs/other-components/etcd-druid/concepts/etcd-cluster-resource-protection/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/concepts/etcd-cluster-resource-protection/</guid><description>&lt;h1 id="etcd-cluster-resource-protection">Etcd Cluster Resource Protection&lt;/h1>
&lt;p>&lt;code>etcd-druid&lt;/code> provisions and manages &lt;a href="https://gardener.cloud/docs/other-components/etcd-druid/concepts/etcd-cluster-components/">kubernetes resources (a.k.a components)&lt;/a> for each &lt;code>Etcd&lt;/code> cluster. To ensure that each component&amp;rsquo;s specification is in line with the configured attributes defined in &lt;code>Etcd&lt;/code> custom resource and to protect unintended changes done to any of these &lt;em>managed components&lt;/em> a &lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/">Validating Webhook&lt;/a> is employed.&lt;/p>
&lt;p>&lt;a href="https://github.com/gardener/etcd-druid/tree/55efca1c8f6c852b0a4e97f08488ffec2eed0e68/internal/webhook/etcdcomponents">Etcd Components Webhook&lt;/a> is the &lt;em>validating webhook&lt;/em> which prevents unintended &lt;em>UPDATE&lt;/em> and &lt;em>DELETE&lt;/em> operations on all managed resources. Following sections describe what is prohibited and in which specific conditions the changes are permitted.&lt;/p></description></item><item><title>Etcd Druid Api</title><link>https://gardener.cloud/docs/other-components/etcd-druid/api-reference/etcd-druid-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/api-reference/etcd-druid-api/</guid><description>&lt;h1 id="api-reference">API Reference&lt;/h1>
&lt;h2 id="packages">Packages&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/etcd-druid/api-reference/etcd-druid-api/#druidgardenercloudv1alpha1">druid.gardener.cloud/v1alpha1&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="druidgardenercloudv1alpha1">druid.gardener.cloud/v1alpha1&lt;/h2>
&lt;p>Package v1alpha1 contains API Schema definitions for the druid v1alpha1 API group&lt;/p>
&lt;h3 id="resource-types">Resource Types&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/etcd-druid/api-reference/etcd-druid-api/#etcd">Etcd&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/etcd-druid/api-reference/etcd-druid-api/#etcdcopybackupstask">EtcdCopyBackupsTask&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="backupspec">BackupSpec&lt;/h4>
&lt;p>BackupSpec defines parameters associated with the full and delta snapshots of etcd.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/other-components/etcd-druid/api-reference/etcd-druid-api/#etcdspec">EtcdSpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;th>Default&lt;/th>
 &lt;th>Validation&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;code>port&lt;/code> &lt;em>integer&lt;/em>&lt;/td>
 &lt;td>Port define the port on which etcd-backup-restore server will be exposed.&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>tls&lt;/code> &lt;em>&lt;a href="https://gardener.cloud/docs/other-components/etcd-druid/api-reference/etcd-druid-api/#tlsconfig">TLSConfig&lt;/a>&lt;/em>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>image&lt;/code> &lt;em>string&lt;/em>&lt;/td>
 &lt;td>Image defines the etcd container image and tag&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>store&lt;/code> &lt;em>&lt;a href="https://gardener.cloud/docs/other-components/etcd-druid/api-reference/etcd-druid-api/#storespec">StoreSpec&lt;/a>&lt;/em>&lt;/td>
 &lt;td>Store defines the specification of object store provider for storing backups.&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>resources&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.29/#resourcerequirements-v1-core">ResourceRequirements&lt;/a>&lt;/em>&lt;/td>
 &lt;td>Resources defines compute Resources required by backup-restore container.&lt;br />More info: &lt;a href="https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/">https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>compactionResources&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.29/#resourcerequirements-v1-core">ResourceRequirements&lt;/a>&lt;/em>&lt;/td>
 &lt;td>CompactionResources defines compute Resources required by compaction job.&lt;br />More info: &lt;a href="https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/">https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>fullSnapshotSchedule&lt;/code> &lt;em>string&lt;/em>&lt;/td>
 &lt;td>FullSnapshotSchedule defines the cron standard schedule for full snapshots.&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>garbageCollectionPolicy&lt;/code> &lt;em>&lt;a href="https://gardener.cloud/docs/other-components/etcd-druid/api-reference/etcd-druid-api/#garbagecollectionpolicy">GarbageCollectionPolicy&lt;/a>&lt;/em>&lt;/td>
 &lt;td>GarbageCollectionPolicy defines the policy for garbage collecting old backups&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>Enum: [Exponential LimitBased] &lt;br />&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>maxBackupsLimitBasedGC&lt;/code> &lt;em>integer&lt;/em>&lt;/td>
 &lt;td>MaxBackupsLimitBasedGC defines the maximum number of Full snapshots to retain in Limit Based GarbageCollectionPolicy&lt;br />All full snapshots beyond this limit will be garbage collected.&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>garbageCollectionPeriod&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.29/#duration-v1-meta">Duration&lt;/a>&lt;/em>&lt;/td>
 &lt;td>GarbageCollectionPeriod defines the period for garbage collecting old backups&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>deltaSnapshotPeriod&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.29/#duration-v1-meta">Duration&lt;/a>&lt;/em>&lt;/td>
 &lt;td>DeltaSnapshotPeriod defines the period after which delta snapshots will be taken&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>deltaSnapshotMemoryLimit&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.29/#quantity-resource-api">Quantity&lt;/a>&lt;/em>&lt;/td>
 &lt;td>DeltaSnapshotMemoryLimit defines the memory limit after which delta snapshots will be taken&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>deltaSnapshotRetentionPeriod&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.29/#duration-v1-meta">Duration&lt;/a>&lt;/em>&lt;/td>
 &lt;td>DeltaSnapshotRetentionPeriod defines the duration for which delta snapshots will be retained, excluding the latest snapshot set.&lt;br />The value should be a string formatted as a duration (e.g., &amp;lsquo;1s&amp;rsquo;, &amp;lsquo;2m&amp;rsquo;, &amp;lsquo;3h&amp;rsquo;, &amp;lsquo;4d&amp;rsquo;)&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>Pattern: &lt;code>^([0-9][0-9]*([.][0-9]+)?(s|m|h|d))+$&lt;/code> &lt;br />Type: string &lt;br />&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>compression&lt;/code> &lt;em>&lt;a href="https://gardener.cloud/docs/other-components/etcd-druid/api-reference/etcd-druid-api/#compressionspec">CompressionSpec&lt;/a>&lt;/em>&lt;/td>
 &lt;td>SnapshotCompression defines the specification for compression of Snapshots.&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>enableProfiling&lt;/code> &lt;em>boolean&lt;/em>&lt;/td>
 &lt;td>EnableProfiling defines if profiling should be enabled for the etcd-backup-restore-sidecar&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>etcdSnapshotTimeout&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.29/#duration-v1-meta">Duration&lt;/a>&lt;/em>&lt;/td>
 &lt;td>EtcdSnapshotTimeout defines the timeout duration for etcd FullSnapshot operation&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>leaderElection&lt;/code> &lt;em>&lt;a href="https://gardener.cloud/docs/other-components/etcd-druid/api-reference/etcd-druid-api/#leaderelectionspec">LeaderElectionSpec&lt;/a>&lt;/em>&lt;/td>
 &lt;td>LeaderElection defines parameters related to the LeaderElection configuration.&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h4 id="clientservice">ClientService&lt;/h4>
&lt;p>ClientService defines the parameters of the client service that a user can specify&lt;/p></description></item><item><title>etcd Network Latency</title><link>https://gardener.cloud/docs/other-components/etcd-druid/benchmark/etcd-network-latency/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/benchmark/etcd-network-latency/</guid><description>&lt;h1 id="network-latency-analysis-sn-etcd-sz-vs--mn-etcd-sz-vs-mn-etcd-mz">Network Latency analysis: &lt;code>sn-etcd-sz&lt;/code> vs &lt;code>mn-etcd-sz&lt;/code> vs &lt;code>mn-etcd-mz&lt;/code>&lt;/h1>
&lt;p>This page captures the etcd cluster latency analysis for below scenarios using the benchmark tool (build from &lt;a href="https://github.com/seshachalam-yv/etcd">etcd benchmark tool&lt;/a>).&lt;/p>
&lt;p>&lt;code>sn-etcd-sz&lt;/code> -&amp;gt; single-node etcd single zone (Only single replica of etcd will be running)&lt;/p>
&lt;p>&lt;code>mn-etcd-sz&lt;/code> -&amp;gt; multi-node etcd single zone (Multiple replicas of etcd pods will be running across nodes in a single zone)&lt;/p>
&lt;p>&lt;code>mn-etcd-mz&lt;/code> -&amp;gt; multi-node etcd multi zone (Multiple replicas of etcd pods will be running across nodes in multiple zones)&lt;/p></description></item><item><title>EtcdMember Custom Resource</title><link>https://gardener.cloud/docs/other-components/etcd-druid/proposals/04-etcd-member-custom-resource/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/proposals/04-etcd-member-custom-resource/</guid><description>&lt;h1 id="dep-04-etcdmember-custom-resource">DEP-04: EtcdMember Custom Resource&lt;/h1>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>Today, &lt;a href="https://github.com/gardener/etcd-druid">etcd-druid&lt;/a> mainly acts as an etcd cluster provisioner, and seldom takes remediatory actions if the &lt;a href="https://etcd.io/">etcd&lt;/a> cluster goes into an undesired state that needs to be resolved by a human operator. In other words, etcd-druid cannot perform day-2 operations on etcd clusters in its current form, and hence cannot carry out its full set of responsibilities as a true &amp;ldquo;operator&amp;rdquo; of etcd clusters. For etcd-druid to be fully capable of its responsibilities, it must know the latest state of the etcd clusters and their individual members at all times.&lt;/p></description></item><item><title>Feature Gates in Etcd-Druid</title><link>https://gardener.cloud/docs/other-components/etcd-druid/deployment/feature-gates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/deployment/feature-gates/</guid><description>&lt;h1 id="feature-gates-in-etcd-druid">Feature Gates in Etcd-Druid&lt;/h1>
&lt;p>This page contains an overview of the various feature gates an administrator can specify on etcd-druid.&lt;/p>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Feature gates are a set of key=value pairs that describe etcd-druid features. You can turn these features on or off by passing them to the &lt;code>--feature-gates&lt;/code> CLI flag in the etcd-druid command.&lt;/p>
&lt;p>The following tables are a summary of the feature gates that you can set on etcd-druid.&lt;/p>
&lt;ul>
&lt;li>The “Since” column contains the etcd-druid release when a feature is introduced or its release stage is changed.&lt;/li>
&lt;li>The “Until” column, if not empty, contains the last etcd-druid release in which you can still use a feature gate.&lt;/li>
&lt;li>If a feature is in the &lt;em>Alpha&lt;/em> or &lt;em>Beta&lt;/em> state, you can find the feature listed in the Alpha/Beta feature gate table.&lt;/li>
&lt;li>If a feature is stable you can find all stages for that feature listed in the Graduated/Deprecated feature gate table.&lt;/li>
&lt;li>The Graduated/Deprecated feature gate table also lists deprecated and withdrawn features.&lt;/li>
&lt;/ul>
&lt;h2 id="feature-gates-for-alpha-or-beta-features">Feature Gates for Alpha or Beta Features&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Feature&lt;/th>
 &lt;th>Default&lt;/th>
 &lt;th>Stage&lt;/th>
 &lt;th>Since&lt;/th>
 &lt;th>Until&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="feature-gates-for-graduated-or-deprecated-features">Feature Gates for Graduated or Deprecated Features&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Feature&lt;/th>
 &lt;th>Default&lt;/th>
 &lt;th>Stage&lt;/th>
 &lt;th>Since&lt;/th>
 &lt;th>Until&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;code>UseEtcdWrapper&lt;/code>&lt;/td>
 &lt;td>&lt;code>false&lt;/code>&lt;/td>
 &lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
 &lt;td>&lt;code>0.19&lt;/code>&lt;/td>
 &lt;td>&lt;code>0.21&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>UseEtcdWrapper&lt;/code>&lt;/td>
 &lt;td>&lt;code>true&lt;/code>&lt;/td>
 &lt;td>&lt;code>Beta&lt;/code>&lt;/td>
 &lt;td>&lt;code>0.22&lt;/code>&lt;/td>
 &lt;td>&lt;code>0.24&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>UseEtcdWrapper&lt;/code>&lt;/td>
 &lt;td>&lt;code>true&lt;/code>&lt;/td>
 &lt;td>&lt;code>GA&lt;/code>&lt;/td>
 &lt;td>&lt;code>0.25&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="using-a-feature">Using a Feature&lt;/h2>
&lt;p>A feature can be in &lt;em>Alpha&lt;/em>, &lt;em>Beta&lt;/em> or &lt;em>GA&lt;/em> stage.&lt;/p></description></item><item><title>Getting Started Locally</title><link>https://gardener.cloud/docs/other-components/etcd-druid/deployment/getting-started-locally/getting-started-locally/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/deployment/getting-started-locally/getting-started-locally/</guid><description>&lt;h1 id="setup-etcd-druid-locally">Setup Etcd-Druid Locally&lt;/h1>
&lt;p>This document will guide you on how to setup &lt;code>etcd-druid&lt;/code> on your local machine and how to provision and manage &lt;code>Etcd&lt;/code> cluster(s).&lt;/p>
&lt;h2 id="00-prerequisites">00-Prerequisites&lt;/h2>
&lt;p>Before we can setup &lt;code>etcd-druid&lt;/code> and use it to provision &lt;code>Etcd&lt;/code> clusters, we need to prepare the development environment. Follow the &lt;a href="https://gardener.cloud/docs/other-components/etcd-druid/prepare-dev-environment/">Prepare Dev Environment Guide&lt;/a> for detailed instructions.&lt;/p>
&lt;h2 id="01-setting-up-kind-cluster">01-Setting up KIND cluster&lt;/h2>
&lt;p>&lt;code>etcd-druid&lt;/code> uses &lt;a href="https://kind.sigs.k8s.io/">kind&lt;/a> as it&amp;rsquo;s local Kubernetes engine. The local setup is configured for kind due to its convenience only. Any other Kubernetes setup would also work.&lt;/p></description></item><item><title>Getting Started Locally</title><link>https://gardener.cloud/docs/other-components/etcd-druid/getting-started-locally/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/getting-started-locally/</guid><description>&lt;h1 id="developing-etcd-druid-locally">Developing etcd-druid locally&lt;/h1>
&lt;p>You can setup &lt;code>etcd-druid&lt;/code> locally by following detailed instructions in &lt;a href="https://gardener.cloud/docs/other-components/etcd-druid/deployment/getting-started-locally/getting-started-locally/">this document&lt;/a>.&lt;/p>
&lt;ul>
&lt;li>For best development experience you should use &lt;code>make deploy-dev&lt;/code> - this helps during development where you wish to make changes to the code base and with a key-press allow automatic re-deployment of the application to the target Kubernetes cluster.&lt;/li>
&lt;li>In case you wish to start a debugging session then use &lt;code>make deploy-debug&lt;/code> - this will additionally disable leader election and prevent leases to expire and process to stop.&lt;/li>
&lt;/ul>
&lt;p>!!! info
We leverage &lt;a href="https://skaffold.dev/docs/workflows/debug/">skaffold debug&lt;/a> and &lt;a href="https://skaffold.dev/docs/workflows/dev/">skaffold dev&lt;/a> features.&lt;/p></description></item><item><title>Local e2e Tests</title><link>https://gardener.cloud/docs/other-components/etcd-druid/running-e2e-tests/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/running-e2e-tests/</guid><description>&lt;h1 id="e2e-test-suite">e2e Test Suite&lt;/h1>
&lt;p>Developers can run extended e2e tests, in addition to unit tests, for Etcd-Druid in or from
their local environments. This is recommended to verify the desired behavior of several features
and to avoid regressions in future releases.&lt;/p>
&lt;p>The very same tests typically run as part of the component&amp;rsquo;s release job as well as on demand, e.g.,
when triggered by Etcd-Druid maintainers for open pull requests.&lt;/p>
&lt;p>Testing Etcd-Druid automatically involves a certain test coverage for &lt;a href="https://github.com/gardener/etcd-backup-restore/">gardener/etcd-backup-restore&lt;/a>
which is deployed as a side-car to the actual &lt;code>etcd&lt;/code> container.&lt;/p></description></item><item><title>Manage Azurite Emulator</title><link>https://gardener.cloud/docs/other-components/etcd-druid/deployment/getting-started-locally/manage-azurite-emulator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/deployment/getting-started-locally/manage-azurite-emulator/</guid><description>&lt;h1 id="manage-azure-blob-storage-emulator">Manage Azure Blob Storage Emulator&lt;/h1>
&lt;p>This document is a step-by-step guide on how to configure, deploy and cleanup &lt;a href="https://github.com/Azure/Azurite#introduction">Azurite&lt;/a>, the &lt;code>Azure Blob Storage&lt;/code> emulator, within a &lt;a href="https://kind.sigs.k8s.io/">kind&lt;/a> cluster. This setup is ideal for local development and testing.&lt;/p>
&lt;h2 id="00-prerequisites">00-Prerequisites&lt;/h2>
&lt;p>Ensure that you have setup the development environment as per the &lt;a href="https://gardener.cloud/docs/other-components/etcd-druid/prepare-dev-environment/">documentation&lt;/a>.&lt;/p>
&lt;blockquote>
 &lt;p>&lt;strong>Note:&lt;/strong> It is assumed that you have already created kind cluster and the &lt;code>KUBECONFIG&lt;/code> is pointing to this Kubernetes cluster.&lt;/p>

&lt;/blockquote>&lt;h3 id="installing-azure-cli">Installing Azure CLI&lt;/h3>
&lt;p>To interact with &lt;code>Azurite&lt;/code> you must also install the Azure CLI &lt;code>(version &amp;gt;=2.55.0)&lt;/code>
On macOS run:&lt;/p></description></item><item><title>Manage S3 Emulator</title><link>https://gardener.cloud/docs/other-components/etcd-druid/deployment/getting-started-locally/manage-s3-emulator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/deployment/getting-started-locally/manage-s3-emulator/</guid><description>&lt;h1 id="manage-s3-emulator">Manage S3 Emulator&lt;/h1>
&lt;p>This document is a step-by-step guide on how to configure, deploy and cleanup &lt;a href="https://localstack.cloud/">LocalStack&lt;/a>, within a &lt;a href="https://kind.sigs.k8s.io/">kind&lt;/a> cluster. LocalStack emulates AWS services locally, which allows the &lt;code>Etcd&lt;/code> cluster to interact with AWS S3. This setup is ideal for local development and testing.&lt;/p>
&lt;h2 id="00-prerequisites">00-Prerequisites&lt;/h2>
&lt;p>Ensure that you have setup the development environment as per the &lt;a href="https://gardener.cloud/docs/other-components/etcd-druid/prepare-dev-environment/">documentation&lt;/a>.&lt;/p>
&lt;blockquote>
 &lt;p>&lt;strong>Note:&lt;/strong> It is assumed that you have already created kind cluster and the &lt;code>KUBECONFIG&lt;/code> is pointing to this Kubernetes cluster.&lt;/p></description></item><item><title>Managing Etcd Clusters</title><link>https://gardener.cloud/docs/other-components/etcd-druid/managing-etcd-clusters/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/managing-etcd-clusters/</guid><description>&lt;h1 id="managing-etcd-clusters">Managing ETCD Clusters&lt;/h1>
&lt;h2 id="create-an-etcd-cluster">Create an Etcd Cluster&lt;/h2>
&lt;p>Creating an &lt;code>Etcd&lt;/code> cluster can be done either by explicitly creating a manifest file or it can also be done programmatically. You can refer to and/or modify any &lt;a href="https://github.com/gardener/etcd-druid/tree/master/config/samples">sample&lt;/a> &lt;code>Etcd&lt;/code> manifest to create an etcd cluster. In order to programmatically create an &lt;code>Etcd&lt;/code> cluster you can refer to the &lt;code>Golang&lt;/code> &lt;a href="https://github.com/gardener/etcd-druid/tree/master/api">API&lt;/a> to create an &lt;code>Etcd&lt;/code> custom resource and using a &lt;a href="https://pkg.go.dev/sigs.k8s.io/controller-runtime/pkg/client#Client">k8s client&lt;/a> you can apply an instance of a &lt;code>Etcd&lt;/code> custom resource targetting any namespace in a k8s cluster.&lt;/p></description></item><item><title>Metrics</title><link>https://gardener.cloud/docs/other-components/etcd-druid/monitoring/metrics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/monitoring/metrics/</guid><description>&lt;h1 id="monitoring">Monitoring&lt;/h1>
&lt;p>etcd-druid uses [Prometheus][prometheus] for metrics reporting. The metrics can be used for real-time monitoring and debugging of compaction jobs.&lt;/p>
&lt;p>The simplest way to see the available metrics is to cURL the metrics endpoint &lt;code>/metrics&lt;/code>. The format is described &lt;a href="http://prometheus.io/docs/instrumenting/exposition_formats/">here&lt;/a>.&lt;/p>
&lt;p>Follow the [Prometheus getting started doc][prometheus-getting-started] to spin up a Prometheus server to collect etcd metrics.&lt;/p>
&lt;p>The naming of metrics follows the suggested [Prometheus best practices][prometheus-naming]. All compaction related metrics are put under namespace &lt;code>etcddruid&lt;/code> and the respective subsystems.&lt;/p></description></item><item><title>operator out-of-band tasks</title><link>https://gardener.cloud/docs/other-components/etcd-druid/proposals/05-etcd-operator-tasks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/proposals/05-etcd-operator-tasks/</guid><description>&lt;h1 id="dep-05-operator-out-of-band-tasks">DEP-05: Operator Out-of-band Tasks&lt;/h1>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>This DEP proposes an enhancement to &lt;code>etcd-druid&lt;/code>&amp;rsquo;s capabilities to handle &lt;a href="https://gardener.cloud/docs/other-components/etcd-druid/proposals/05-etcd-operator-tasks/#terminology">out-of-band&lt;/a> tasks, which are presently performed manually or invoked programmatically via suboptimal APIs. The document proposes the establishment of a unified interface by defining a well-structured API to harmonize the initiation of any &lt;code>out-of-band&lt;/code> task, monitor its status, and simplify the process of adding new tasks and managing their lifecycles.&lt;/p>
&lt;h2 id="terminology">Terminology&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>etcd-druid:&lt;/strong> &lt;a href="https://github.com/gardener/etcd-druid">etcd-druid&lt;/a> is an operator to manage the etcd clusters.&lt;/p></description></item><item><title>Prepare Dev Environment</title><link>https://gardener.cloud/docs/other-components/etcd-druid/prepare-dev-environment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/prepare-dev-environment/</guid><description>&lt;h1 id="prepare-dev-environment">Prepare Dev Environment&lt;/h1>
&lt;p>This guide will provide with detailed instructions on installing all dependencies and tools that are required to start developing and testing &lt;code>etcd-druid&lt;/code>.&lt;/p>
&lt;h2 id="macos-only-installing-homebrew">[macOS only] Installing Homebrew&lt;/h2>
&lt;p>Hombrew is a popular package manager for macOS. You can install it by executing the following command in a terminal:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>/bin/bash -c &lt;span style="color:#a31515">&amp;#34;&lt;/span>&lt;span style="color:#00f">$(&lt;/span>curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh&lt;span style="color:#00f">)&lt;/span>&lt;span style="color:#a31515">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="installing-go">Installing Go&lt;/h2>
&lt;p>On macOS run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>brew install go
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Alternatively you can also follow the &lt;a href="https://go.dev/doc/install">Go installation documentation&lt;/a>.&lt;/p>
&lt;h2 id="installing-git">Installing Git&lt;/h2>
&lt;p>We use &lt;code>git&lt;/code> as VCS which you need to install.
On macOS run:&lt;/p></description></item><item><title>Production Setup Recommendations</title><link>https://gardener.cloud/docs/other-components/etcd-druid/deployment/production-setup-recommendations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/deployment/production-setup-recommendations/</guid><description>&lt;h1 id="setting-up-etcd-druid-in-production">Setting up etcd-druid in Production&lt;/h1>
&lt;p>You can get familiar with &lt;code>etcd-druid&lt;/code> and all the resources that it creates by setting up etcd-druid locally by following the &lt;a href="https://gardener.cloud/docs/other-components/etcd-druid/deployment/getting-started-locally/getting-started-locally/">detailed guide&lt;/a>. This document lists down recommendations for a productive setup of etcd-druid.&lt;/p>
&lt;h2 id="helm-charts">Helm Charts&lt;/h2>
&lt;p>You can use &lt;a href="https://helm.sh/">helm&lt;/a> charts at &lt;a href="https://github.com/gardener/etcd-druid/tree/55efca1c8f6c852b0a4e97f08488ffec2eed0e68/charts/druid">this&lt;/a> location to deploy druid. Values for charts are present &lt;a href="https://github.com/gardener/etcd-druid/blob/55efca1c8f6c852b0a4e97f08488ffec2eed0e68/charts/druid/values.yaml">here&lt;/a> and can be configured as per your requirement. Following charts are present:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>deployment.yaml&lt;/code> - defines a kubernetes &lt;a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/">Deployment&lt;/a> for etcd-druid. To configure the CLI flags for druid you can refer to &lt;a href="https://gardener.cloud/docs/other-components/etcd-druid/deployment/configure-etcd-druid/">this&lt;/a> document which explains these flags in detail.&lt;/p></description></item><item><title>Raising A Pr</title><link>https://gardener.cloud/docs/other-components/etcd-druid/raising-a-pr/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/raising-a-pr/</guid><description>&lt;h1 id="raising-a-pull-request">Raising a Pull Request&lt;/h1>
&lt;p>We welcome active contributions from the community. This document details out the things-to-be-done in order for us to consider a PR for review. Contributors should follow the guidelines mentioned in this document to minimize the time it takes to get the PR reviewed.&lt;/p>
&lt;h2 id="00-prerequisites">00-Prerequisites&lt;/h2>
&lt;p>In order to make code contributions you must setup your development environment. Follow the &lt;a href="https://gardener.cloud/docs/other-components/etcd-druid/prepare-dev-environment/">Prepare Dev Environment Guide&lt;/a> for detailed instructions.&lt;/p>
&lt;h2 id="01-raise-an-issue">01-Raise an Issue&lt;/h2>
&lt;p>For every pull-request, it is &lt;em>&lt;strong>mandatory&lt;/strong>&lt;/em> to raise an &lt;a href="https://github.com/gardener/etcd-druid/issues">Issue&lt;/a> which should describe the problem in detail. We have created a few categories, each having its own dedicated &lt;a href="https://github.com/gardener/etcd-druid/tree/master/.github/ISSUE_TEMPLATE">template&lt;/a>.&lt;/p></description></item><item><title>Recovering Etcd Clusters</title><link>https://gardener.cloud/docs/other-components/etcd-druid/recovering-etcd-clusters/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/recovering-etcd-clusters/</guid><description>&lt;h1 id="recovery-from-quorum-loss">Recovery from Quorum Loss&lt;/h1>
&lt;p>In an &lt;code>Etcd&lt;/code> cluster, &lt;code>quorum&lt;/code> is a majority of nodes/members that must agree on updates to a cluster state before the cluster can authorise the DB modification. For a cluster with &lt;code>n&lt;/code> members, quorum is &lt;code>(n/2)+1&lt;/code>. An &lt;code>Etcd&lt;/code> cluster is said to have &lt;a href="https://etcd.io/docs/v3.4/op-guide/recovery/">lost quorum&lt;/a> when majority of nodes (greater than or equal to &lt;code>(n/2)+1&lt;/code>) are unhealthy or down and as a consequence cannot participate in consensus building.&lt;/p></description></item><item><title>Securing Etcd Clusters</title><link>https://gardener.cloud/docs/other-components/etcd-druid/securing-etcd-clusters/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/securing-etcd-clusters/</guid><description>&lt;h1 id="securing-etcd-cluster">Securing etcd cluster&lt;/h1>
&lt;p>This document will describe all the TLS artifacts that are typically generated for setting up etcd-druid and etcd clusters in Gardener clusters. You can take inspiration from this and decide which communication lines are essential to be TLS enabled.&lt;/p>
&lt;h2 id="communication-lines">Communication lines&lt;/h2>
&lt;p>In order to undertand all the TLS artifacts that are required to setup etcd-druid and one or more etcd-clusters, one must have a clear view of all the communication channels that needs to be protected via TLS. In the diagram below all communication lines in a typical 3-node etcd cluster along with &lt;code>kube-apiserver&lt;/code> and &lt;code>etcd-druid&lt;/code> is illustrated.&lt;/p></description></item><item><title>Testing</title><link>https://gardener.cloud/docs/other-components/etcd-druid/testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/testing/</guid><description>&lt;h1 id="testing-strategy-and-developer-guideline">Testing Strategy and Developer Guideline&lt;/h1>
&lt;p>Intent of this document is to introduce you (the developer) to the following:&lt;/p>
&lt;ul>
&lt;li>Libraries that are used to write tests.&lt;/li>
&lt;li>Best practices to write tests that are correct, stable, fast and maintainable.&lt;/li>
&lt;li>How to run tests.&lt;/li>
&lt;/ul>
&lt;p>The guidelines are not meant to be absolute rules. Always apply common sense and adapt the guideline if it doesn&amp;rsquo;t make much sense for some cases. If in doubt, don&amp;rsquo;t hesitate to ask questions during a PR review (as an author, but also as a reviewer). Add new learnings as soon as we make them!&lt;/p></description></item><item><title>Updating Documentation</title><link>https://gardener.cloud/docs/other-components/etcd-druid/updating-documentation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/updating-documentation/</guid><description>&lt;h1 id="updating-documentation">Updating Documentation&lt;/h1>
&lt;p>All documentation for &lt;code>etcd-druid&lt;/code> resides in &lt;a href="https://github.com/gardener/etcd-druid/tree/master/docs">docs&lt;/a> directory. If you wish to update the existing documentation or create new documentation files then read on.&lt;/p>
&lt;h2 id="prerequisite-setup-mkdocs-locally">Prerequisite: Setup Mkdocs locally&lt;/h2>
&lt;p>&lt;a href="https://squidfunk.github.io/mkdocs-material/">Material for Mkdocs&lt;/a> is used to generate GitHub Pages from all the Markdown files present under the &lt;a href="https://github.com/gardener/etcd-druid/tree/master/docs">docs&lt;/a> directory. To locally validate that the documentation renders correctly, it is recommended that you perform the following setup.&lt;/p>
&lt;ul>
&lt;li>Install python3 if not already installed.&lt;/li>
&lt;li>Setup a virtual environment via&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>python -m venv venv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Activate the virtual environment&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>source venv/bin/activate
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>In the virtual environment install the packages.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>(venv) &amp;gt; pip install mkdocs-material
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(venv) &amp;gt; pip install pymdown-extensions
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(venv) &amp;gt; pip install mkdocs-glightbox
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(venv) &amp;gt; pip install mkdocs-pymdownx-material-extras
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>!!! note
Complete list of packages installed should be in sync with &lt;a href="https://github.com/gardener/etcd-druid/blob/master/.github/workflows/publish-docs.yml#L23-L27">Github Actions Configuration&lt;/a>.&lt;/p></description></item><item><title>Version Compatibility Matrix</title><link>https://gardener.cloud/docs/other-components/etcd-druid/deployment/version-compatibility-matrix/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/etcd-druid/deployment/version-compatibility-matrix/</guid><description>&lt;h1 id="version-compatibility">Version Compatibility&lt;/h1>
&lt;h2 id="kubernetes">Kubernetes&lt;/h2>
&lt;p>We strongly recommend using &lt;code>etcd-druid&lt;/code> with the supported kubernetes versions, published in this document.
The following is a list of kubernetes versions supported by the respective &lt;code>etcd-druid&lt;/code> versions.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>etcd-druid version&lt;/th>
 &lt;th>Kubernetes version&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&amp;gt;=v0.20&lt;/td>
 &lt;td>&amp;gt;=v1.21&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&amp;gt;=v0.14 &amp;amp;&amp;amp; &amp;lt;0.20&lt;/td>
 &lt;td>All versions supported&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&amp;lt;v0.14&lt;/td>
 &lt;td>&amp;lt; v1.25&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="etcd-backup-restore--etcd-wrapper">etcd-backup-restore &amp;amp; etcd-wrapper&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>etcd-druid version&lt;/th>
 &lt;th>etcd-backup-restore version&lt;/th>
 &lt;th>etcd-wrapper version&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&amp;gt;=v0.23.1&lt;/td>
 &lt;td>&amp;gt;=v0.30.2&lt;/td>
 &lt;td>&amp;gt;=v0.2.0&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item></channel></rss>