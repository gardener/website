<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Node Audit Logging on Gardener</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-rsyslog-relp/</link><description>Recent content in Node Audit Logging on Gardener</description><generator>Hugo</generator><language>en-US</language><atom:link href="https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-rsyslog-relp/index.xml" rel="self" type="application/rss+xml"/><item><title>Configuration</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-rsyslog-relp/configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-rsyslog-relp/configuration/</guid><description>&lt;h1 id="configuring-the-rsyslog-relp-extension">Configuring the Rsyslog Relp Extension&lt;a class="td-heading-self-link" href="#configuring-the-rsyslog-relp-extension" aria-label="Heading self-link">&lt;/a>&lt;/h1>&lt;h2 id="introduction">Introduction&lt;a class="td-heading-self-link" href="#introduction" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;p>As a cluster owner, you might need audit logs on a Shoot node level. With these audit logs you can track actions on your nodes like privilege escalation, file integrity, process executions, and who is the user that performed these actions. Such information is essential for the security of your Shoot cluster. Linux operating systems collect such logs via the &lt;code>auditd&lt;/code> and &lt;code>journald&lt;/code> daemons. However, these logs can be lost if they are only kept locally on the operating system. You need a reliable way to send them to a remote server where they can be stored for longer time periods and retrieved when necessary.&lt;/p></description></item><item><title>Deploying Rsyslog Relp Extension Remotely</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-rsyslog-relp/getting-started-remotely/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-rsyslog-relp/getting-started-remotely/</guid><description>&lt;h1 id="deploying-rsyslog-relp-extension-remotely">Deploying Rsyslog Relp Extension Remotely&lt;a class="td-heading-self-link" href="#deploying-rsyslog-relp-extension-remotely" aria-label="Heading self-link">&lt;/a>&lt;/h1>&lt;p>This document will walk you through running the Rsyslog Relp extension controller on a remote seed cluster and the rsyslog relp admission component in your local garden cluster for development purposes. This guide uses Gardener&amp;rsquo;s &lt;a href="https://gardener.cloud/docs/gardener/deployment/getting_started_locally_with_extensions/">setup with provider extensions&lt;/a> and builds on top of it.&lt;/p>
&lt;p>If you encounter difficulties, please open an issue so that we can make this process easier.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;a class="td-heading-self-link" href="#prerequisites" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>Make sure that you have a running Gardener setup with provider extensions. The steps to complete this can be found in the &lt;a href="https://gardener.cloud/docs/gardener/deployment/getting_started_locally_with_extensions/">Deploying Gardener Locally and Enabling Provider-Extensions&lt;/a> guide.&lt;/li>
&lt;li>Make sure you are running Gardener version &lt;code>&amp;gt;= 1.95.0&lt;/code> or the latest version of the master branch.&lt;/li>
&lt;/ul>
&lt;h2 id="setting-up-the-rsyslog-relp-extension">Setting up the Rsyslog Relp Extension&lt;a class="td-heading-self-link" href="#setting-up-the-rsyslog-relp-extension" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;p>&lt;strong>Important:&lt;/strong> Make sure that your &lt;code>KUBECONFIG&lt;/code> env variable is targeting the local Gardener cluster!&lt;/p></description></item><item><title>Getting Started</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-rsyslog-relp/getting-started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-rsyslog-relp/getting-started/</guid><description>&lt;h1 id="deploying-rsyslog-relp-extension-locally">Deploying Rsyslog Relp Extension Locally&lt;a class="td-heading-self-link" href="#deploying-rsyslog-relp-extension-locally" aria-label="Heading self-link">&lt;/a>&lt;/h1>&lt;p>This document will walk you through running the Rsyslog Relp extension and a fake rsyslog relp service on your local machine for development purposes. This guide uses Gardener&amp;rsquo;s local development setup and builds on top of it.&lt;/p>
&lt;p>If you encounter difficulties, please open an issue so that we can make this process easier.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;a class="td-heading-self-link" href="#prerequisites" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>Make sure that you have a running local Gardener setup. The steps to complete this can be found &lt;a href="https://gardener.cloud/docs/gardener/deployment/getting_started_locally/">here&lt;/a>.&lt;/li>
&lt;li>Make sure you are running Gardener version &lt;code>&amp;gt;= 1.74.0&lt;/code> or the latest version of the master branch.&lt;/li>
&lt;/ul>
&lt;h2 id="setting-up-the-rsyslog-relp-extension">Setting up the Rsyslog Relp Extension&lt;a class="td-heading-self-link" href="#setting-up-the-rsyslog-relp-extension" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;p>&lt;strong>Important:&lt;/strong> Make sure that your &lt;code>KUBECONFIG&lt;/code> env variable is targeting the local Gardener cluster!&lt;/p></description></item><item><title>Monitoring</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-rsyslog-relp/monitoring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-rsyslog-relp/monitoring/</guid><description>&lt;h1 id="monitoring">Monitoring&lt;a class="td-heading-self-link" href="#monitoring" aria-label="Heading self-link">&lt;/a>&lt;/h1>&lt;p>The &lt;code>shoot-rsyslog-relp&lt;/code> extension exposes metrics for the &lt;code>rsyslog&lt;/code> service running on a Shoot&amp;rsquo;s nodes so that they can be easily viewed by cluster owners and operators in the Shoot&amp;rsquo;s Prometheus and Plutono instances. The exposed monitoring data offers valuable insights into the operation of the &lt;code>rsyslog&lt;/code> service and can be used to detect and debug ongoing issues. This guide describes the various metrics, alerts and logs available to cluster owners and operators.&lt;/p></description></item><item><title>Shoot Rsyslog Relp</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-rsyslog-relp/shoot-rsyslog-relp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-rsyslog-relp/shoot-rsyslog-relp/</guid><description>&lt;h1 id="developer-docs-for-gardener-shoot-rsyslog-relp-extension">Developer Docs for Gardener Shoot Rsyslog Relp Extension&lt;a class="td-heading-self-link" href="#developer-docs-for-gardener-shoot-rsyslog-relp-extension" aria-label="Heading self-link">&lt;/a>&lt;/h1>&lt;p>This document outlines how Shoot reconciliation and deletion works for a Shoot with the shoot-rsyslog-relp extension enabled.&lt;/p>
&lt;h2 id="shoot-reconciliation">Shoot Reconciliation&lt;a class="td-heading-self-link" href="#shoot-reconciliation" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;p>This section outlines how the reconciliation works for a Shoot with the shoot-rsyslog-relp extension enabled.&lt;/p>
&lt;h3 id="extension-enablement--reconciliation">Extension Enablement / Reconciliation&lt;a class="td-heading-self-link" href="#extension-enablement--reconciliation" aria-label="Heading self-link">&lt;/a>&lt;/h3>&lt;p>This section outlines how the extension enablement/reconciliation works, e.g., the extension has been added to the Shoot spec.&lt;/p>
&lt;ol>
&lt;li>As part of the Shoot reconciliation flow, the gardenlet deploys the &lt;a href="https://github.com/gardener/gardener/blob/v1.82.0/docs/extensions/extension.md">Extension&lt;/a> resource.&lt;/li>
&lt;li>The shoot-rsyslog-relp extension reconciles the Extension resource. &lt;a href="https://github.com/gardener/gardener-extension-shoot-rsyslog-relp/blob/main/pkg/controller/lifecycle/actuator.go">pkg/controller/lifecycle/actuator.go&lt;/a> contains the implementation of the &lt;a href="https://github.com/gardener/gardener/blob/v1.82.0/extensions/pkg/controller/extension/actuator.go">extension.Actuator&lt;/a> interface. The reconciliation of an Extension of type &lt;code>shoot-rsyslog-relp&lt;/code> only deploys the necessary monitoring configuration - the &lt;code>shoot-rsyslog-relp-dashboards&lt;/code> ConfigMap which contains the definitions for: Plutono dashboard for the Rsyslog component, and the &lt;code>shoot-shoot-rsyslog-relp&lt;/code> &lt;code>ServiceMonitor&lt;/code> and &lt;code>PrometheusRule&lt;/code> resources which contains the definitions for: scraping metrics by prometheus, alerting rules.&lt;/li>
&lt;li>As part of the Shoot reconciliation flow, the gardenlet deploys the OperatingSystemConfig resource.&lt;/li>
&lt;li>The shoot-rsyslog-relp extension serves a webhook that mutates the OperatingSystemConfig resource for Shoots having the shoot-rsyslog-relp extension enabled (the corresponding namespace gets labeled by the gardenlet with &lt;code>extensions.gardener.cloud/shoot-rsyslog-relp=true&lt;/code>). &lt;a href="https://github.com/gardener/gardener-extension-shoot-rsyslog-relp/blob/main/pkg/webhook/operatingsystemconfig/ensurer.go">pkg/webhook/operatingsystemconfig/ensurer.go&lt;/a> contains implementation of the &lt;a href="https://github.com/gardener/gardener/blob/v1.82.0/extensions/pkg/webhook/controlplane/genericmutator/mutator.go">genericmutator.Ensurer&lt;/a> interface.
&lt;ol>
&lt;li>The webhook renders the &lt;a href="https://github.com/gardener/gardener-extension-shoot-rsyslog-relp/blob/main/pkg/webhook/operatingsystemconfig/resources/templates/scripts/configure-rsyslog.tpl.sh">60-audit.conf.tpl&lt;/a> template script and appends it to the OperatingSystemConfig files. When rendering the template, the configuration of the shoot-rsyslog-relp extension is used to fill in the required template values. The file is installed as &lt;code>/var/lib/rsyslog-relp-configurator/rsyslog.d/60-audit.conf&lt;/code> on the host OS.&lt;/li>
&lt;li>The webhook appends the &lt;a href="https://github.com/gardener/gardener-extension-shoot-rsyslog-relp/tree/main/pkg/webhook/operatingsystemconfig/resources/auditrules">audit rules&lt;/a> to the OperatingSystemConfig. The files are installed under &lt;code>/var/lib/rsyslog-relp-configurator/rules.d&lt;/code> on the host OS.&lt;/li>
&lt;li>If the user has specified alternative audit rules in a config map reference, the webhook fetches the referenced &lt;code>ConfigMap&lt;/code> from the Shoot&amp;rsquo;s control plane namespace and decodes the value of its &lt;code>auditd&lt;/code> data key into an object of type &lt;a href="https://github.com/gardener/gardener-extension-shoot-rsyslog-relp/blob/main/pkg/apis/rsyslog/types_auditd.go">&lt;code>Auditd&lt;/code>&lt;/a>. It then takes the &lt;code>auditRules&lt;/code> defined in the object and places those under the &lt;code>/var/lib/rsyslog-relp-configurator/rules.d&lt;/code> directory in a single file.&lt;/li>
&lt;li>The webhook renders the &lt;a href="https://github.com/gardener/gardener-extension-shoot-rsyslog-relp/blob/main/pkg/webhook/operatingsystemconfig/resources/templates/scripts/configure-rsyslog.tpl.sh">configure-rsyslog.tpl.sh&lt;/a> script and appends it to the OperatingSystemConfig files. This script is installed as &lt;code>/var/lib/rsyslog-relp-configurator/configure-rsyslog.sh&lt;/code> on the host OS. It keeps the configuration of the &lt;code>rsyslog&lt;/code> systemd service up-to-date by copying &lt;code>/var/lib/rsyslog-relp-configurator/rsyslog.d/60-audit.conf&lt;/code> to &lt;code>/etc/rsyslog.d/60-audit.conf&lt;/code>, if &lt;code>/etc/rsyslog.d/60-audit.conf&lt;/code> does not exist or the files differ. The script also takes care of syncing the audit rules in &lt;code>/etc/audit/rules.d&lt;/code> with the ones installed in &lt;code>/var/lib/rsyslog-relp-configurator/rules.d&lt;/code> and restarts the auditd systemd service if necessary.&lt;/li>
&lt;li>The webhook renders the &lt;a href="https://github.com/gardener/gardener-extension-shoot-rsyslog-relp/blob/main/pkg/webhook/operatingsystemconfig/resources/templates/scripts/process-rsyslog-pstats.tpl.sh">process-rsyslog-pstats.tpl.sh&lt;/a> and appends it to the OperatingSystemConfig files. This script receives metrics from the &lt;code>rsyslog&lt;/code> process, transforms them, and writes them to &lt;code>/var/lib/node-exporter/textfile-collector/rsyslog_pstats.prom&lt;/code> so that they can be collected by the &lt;code>node-exporter&lt;/code>.&lt;/li>
&lt;li>As part of the Shoot reconciliation, before the shoot-rsyslog-relp extension is deployed, the gardenlet copies all Secret and ConfigMap resources referenced in &lt;code>.spec.resources[]&lt;/code> to the Shoot&amp;rsquo;s control plane namespace on the Seed.
When the &lt;code>.tls.enabled&lt;/code> field is &lt;code>true&lt;/code> in the shoot-rsyslog-relp extension configuration, a value for &lt;code>.tls.secretReferenceName&lt;/code> must also be specified so that it references a &lt;a href="https://github.com/gardener/gardener/blob/v1.82.0/pkg/apis/core/v1beta1/types_shoot.go#L487">named resource reference&lt;/a> in the Shoot&amp;rsquo;s &lt;code>.spec.resources[]&lt;/code> array.
The webhook appends the data of the referenced Secret in the Shoot&amp;rsquo;s control plane namespace to the OperatingSystemConfig files.&lt;/li>
&lt;li>The webhook appends the &lt;code>rsyslog-configurator.service&lt;/code> unit to the OperatingSystemConfig units. The unit invokes the &lt;code>configure-rsyslog.sh&lt;/code> script every 15 seconds.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h3 id="extension-disablement">Extension Disablement&lt;a class="td-heading-self-link" href="#extension-disablement" aria-label="Heading self-link">&lt;/a>&lt;/h3>&lt;p>This section outlines how the extension disablement works, i.e., the extension has to be removed from the Shoot spec.&lt;/p></description></item></channel></rss>