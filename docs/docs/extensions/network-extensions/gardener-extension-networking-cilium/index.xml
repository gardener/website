<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gardener â€“ Cilium CNI</title><link>https://gardener.cloud/docs/extensions/network-extensions/gardener-extension-networking-cilium/</link><description>Recent content in Cilium CNI on Gardener</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://gardener.cloud/docs/extensions/network-extensions/gardener-extension-networking-cilium/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Usage</title><link>https://gardener.cloud/docs/extensions/network-extensions/gardener-extension-networking-cilium/usage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/network-extensions/gardener-extension-networking-cilium/usage/</guid><description>
&lt;h1 id="using-the-networking-cilium-extension-with-gardener-as-end-user">Using the Networking Cilium extension with Gardener as end-user&lt;/h1>
&lt;p>The &lt;a href="https://github.com/gardener/gardener/blob/master/example/90-shoot.yaml">&lt;code>core.gardener.cloud/v1beta1.Shoot&lt;/code> resource&lt;/a> declares a &lt;code>networking&lt;/code> field that is meant to contain network-specific configuration.&lt;/p>
&lt;p>In this document we are describing how this configuration looks like for Cilium and provide an example &lt;code>Shoot&lt;/code> manifest with minimal configuration that you can use to create a cluster.&lt;/p>
&lt;h2 id="cilium-hubble">Cilium Hubble&lt;/h2>
&lt;p>Hubble is a fully distributed networking and security observability platform build on top of Cilium and BPF. It is optional and is deployed to the cluster when enabled in the &lt;code>NetworkConfig&lt;/code>.
If the dashboard is not externally exposed&lt;/p>
&lt;pre tabindex="0">&lt;code>kubectl port-forward -n kube-system deployment/hubble-ui 8081
&lt;/code>&lt;/pre>&lt;p>can be used to acess it locally.&lt;/p>
&lt;h2 id="example-networkingconfig-manifest">Example &lt;code>NetworkingConfig&lt;/code> manifest&lt;/h2>
&lt;p>An example &lt;code>NetworkingConfig&lt;/code> for the Cilium extension looks as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: cilium.networking.extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: NetworkConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hubble:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> enabled: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">#debug: false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">#tunnel: vxlan&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">#store: kubernetes&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="networkingconfig-options">&lt;code>NetworkingConfig&lt;/code> options&lt;/h2>
&lt;p>The &lt;code>hubble.enabled&lt;/code> field describes whether hubble should be deployed into the cluster or not (default).&lt;/p>
&lt;p>The &lt;code>debug&lt;/code> field describes whether you want to run cilium in debug mode or not (default), change this value to &lt;code>true&lt;/code> to use debug mode.&lt;/p>
&lt;p>The &lt;code>tunnel&lt;/code> field describes the encapsulation mode for communication between nodes. Possible values are &lt;code>vxlan&lt;/code> (default), &lt;code>geneve&lt;/code> or &lt;code>disabled&lt;/code>.&lt;/p>
&lt;p>The &lt;code>bpfSocketLBHostnsOnly.enabled&lt;/code> field describes whether socket LB will be skipped for services when inside a pod namespace (default), in favor of service LB at the pod interface. Socket LB is still used when in the host namespace. This feature is required when using cilium with a service mesh like istio or linkerd.&lt;/p>
&lt;p>Setting the field &lt;code>cni.exclusive&lt;/code> to &lt;code>false&lt;/code> might be useful when additional plugins, such as Istio or Linkerd, wish to chain after Cilium. This action disables the default behavior of Cilium, which is to overwrite changes to the CNI configuration file.&lt;/p>
&lt;p>The &lt;code>egressGateway.enabled&lt;/code> field describes whether egress gateways are enabled or not (default). To use this feature kube-proxy must be disabled. This can be done with the following configuration in the Shoot:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubernetes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubeProxy:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> enabled: &lt;span style="color:#00f">false&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The egress gateway feature is only supported in gardener with an overlay network (shoot.spec.networking.providerConfig.overlay.enabled: true) at the moment. This is due to the reason that bpf masquerading is required for the egress gateway feature. Once the overlay network is enabled &lt;code>bpf.masquerade&lt;/code> is set to &lt;code>true&lt;/code> in the cilium configmap.&lt;/p>
&lt;p>The &lt;code>snatToUpstreamDNS.enabled&lt;/code> field describes whether the traffic to the upstream dns server should be masqueraded or not (default). This is needed on some infrastructures where traffic to the dns server with the pod CIDR range is blocked.&lt;/p>
&lt;h2 id="example-shoot-manifest">Example &lt;code>Shoot&lt;/code> manifest&lt;/h2>
&lt;p>Please find below an example &lt;code>Shoot&lt;/code> manifest with cilium networking configuration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Shoot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: aws-cilium
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: garden-dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> networking:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: cilium
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> providerConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiVersion: cilium.networking.extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: NetworkConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hubble:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> enabled: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pods: 100.96.0.0/11
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nodes: 10.250.0.0/16
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> services: 100.64.0.0/13
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you would like to see a provider specific shoot example, please check out the documentation of the well-known extensions. A list of them can be found &lt;a href="https://github.com/gardener/gardener/tree/master/extensions#infrastructure-provider">here&lt;/a>.&lt;/p></description></item></channel></rss>