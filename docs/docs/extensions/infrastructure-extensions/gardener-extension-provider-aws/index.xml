<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gardener – Provider AWS</title><link>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-aws/</link><description>Recent content in Provider AWS on Gardener</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-aws/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Tutorials</title><link>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-aws/tutorials/kubernetes-cluster-on-aws-with-gardener/kubernetes-cluster-on-aws-with-gardener/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-aws/tutorials/kubernetes-cluster-on-aws-with-gardener/kubernetes-cluster-on-aws-with-gardener/</guid><description>
&lt;h3 id="overview">Overview&lt;/h3>
&lt;p>Gardener allows you to create a Kubernetes cluster on different infrastructure providers. This tutorial will guide you through the process of creating a cluster on AWS.&lt;/p>
&lt;h3 id="prerequisites">Prerequisites&lt;/h3>
&lt;ul>
&lt;li>You have created an &lt;a href="https://aws.amazon.com/">AWS account&lt;/a>.&lt;/li>
&lt;li>You have access to the Gardener dashboard and have permissions to create projects.&lt;/li>
&lt;/ul>
&lt;h3 id="steps">Steps&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Go to the Gardener dashboard and create a &lt;em>Project&lt;/em>.&lt;/p>
&lt;img src="https://gardener.cloud/__resources/new-gardener-project_ad03bc.png">
&lt;/li>
&lt;li>
&lt;p>Choose &lt;em>Secrets&lt;/em>, then the plus icon &lt;img src="https://gardener.cloud/__resources/plus-icon_3b1f20.png"> and select &lt;em>AWS&lt;/em>.&lt;/p>
&lt;img src="https://gardener.cloud/__resources/create-secret-aws_79dc1a.png">
&lt;/li>
&lt;li>
&lt;p>To copy the policy for AWS from the Gardener dashboard, click on the help icon &lt;img src="https://gardener.cloud/__resources/help-icon_01486c.png"> for AWS secrets, and choose copy &lt;img src="https://gardener.cloud/__resources/copy-icon_0f5ab8.png">.&lt;/p>
&lt;img src="https://gardener.cloud/__resources/gardener-copy-policy_a52965.png">
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://console.aws.amazon.com/iam/home?#/policies">Create a new policy&lt;/a> in AWS:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Choose &lt;em>Create policy&lt;/em>.&lt;/p>
&lt;img src="https://gardener.cloud/__resources/amazon-create-policy_5ef114.png">
&lt;/li>
&lt;li>
&lt;p>Paste the policy that you copied from the Gardener dashboard to this custom policy.&lt;/p>
&lt;img src="https://gardener.cloud/__resources/amazon-create-policy-json_7d6327.png">
&lt;/li>
&lt;li>
&lt;p>Choose &lt;em>Next&lt;/em> until you reach the Review section.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fill in the name and description, then choose &lt;em>Create policy&lt;/em>.&lt;/p>
&lt;img src="https://gardener.cloud/__resources/amazon-review-policy_6fba71.png">
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://console.aws.amazon.com/iam/home?#/users$new?step=details">Create a new technical user&lt;/a> in AWS:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Type in a username and select the access key credential type.&lt;/p>
&lt;img src="https://gardener.cloud/__resources/add-user_775731.png">
&lt;/li>
&lt;li>
&lt;p>Choose &lt;em>Attach an existing policy&lt;/em>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Select &lt;em>GardenerAccess&lt;/em> from the policy list.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Choose &lt;em>Next&lt;/em> until you reach the Review section.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;img src="https://gardener.cloud/__resources/attach-policy_a6a81f.png">
&lt;img src="https://gardener.cloud/__resources/finish-user_a9e956.png">
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Note: After the user is created, &lt;code>Access key ID&lt;/code> and &lt;code>Secret access key&lt;/code> are generated and displayed. Remember to save them. The &lt;code>Access key ID&lt;/code> is used later to create secrets for Gardener.
&lt;/div>
&lt;img src="https://gardener.cloud/__resources/save-keys_f23816.png">
&lt;/li>
&lt;li>
&lt;p>On the Gardener dashboard, choose &lt;em>Secrets&lt;/em> and then the plus sign &lt;img src="https://gardener.cloud/__resources/plus-icon_3b1f20.png">. Select &lt;em>AWS&lt;/em> from the drop down menu to add a new AWS secret.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create your secret.&lt;/p>
&lt;ol>
&lt;li>Type the name of your secret.&lt;/li>
&lt;li>Copy and paste the &lt;code>Access Key ID&lt;/code> and &lt;code>Secret Access Key&lt;/code> you saved when you created the technical user on AWS.&lt;/li>
&lt;li>Choose &lt;em>Add secret&lt;/em>.
&lt;img src="https://gardener.cloud/__resources/add-aws-secret_ed47ad.png">&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>After completing these steps, you should see your newly created secret in the &lt;em>Infrastructure Secrets&lt;/em> section.&lt;/p>
&lt;/blockquote>
&lt;img src="https://gardener.cloud/__resources/secret-stored_a4c7f9.png">
&lt;/li>
&lt;li>
&lt;p>To create a new cluster, choose &lt;em>Clusters&lt;/em> and then the plus sign in the upper right corner.&lt;/p>
&lt;img src="https://gardener.cloud/__resources/new-cluster_353d7b.png">
&lt;/li>
&lt;li>
&lt;p>In the &lt;em>Create Cluster&lt;/em> section:&lt;/p>
&lt;ol>
&lt;li>Select &lt;em>AWS&lt;/em> in the &lt;em>Infrastructure&lt;/em> tab.&lt;/li>
&lt;li>Type the name of your cluster in the &lt;em>Cluster Details&lt;/em> tab.&lt;/li>
&lt;li>Choose the secret you created before in the &lt;em>Infrastructure Details&lt;/em> tab.&lt;/li>
&lt;li>Choose &lt;em>Create&lt;/em>.&lt;/li>
&lt;/ol>
&lt;img src="https://gardener.cloud/__resources/create-cluster_7a45a2.png">
&lt;/li>
&lt;li>
&lt;p>Wait for your cluster to get created.&lt;/p>
&lt;img src="https://gardener.cloud/__resources/processing-cluster_522005.png">
&lt;/li>
&lt;/ol>
&lt;h3 id="result">Result&lt;/h3>
&lt;p>After completing the steps in this tutorial, you will be able to see and download the kubeconfig of your cluster.&lt;/p>
&lt;img src="https://gardener.cloud/__resources/copy-kubeconfig_752d59.png"></description></item><item><title>Docs: Deployment</title><link>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-aws/deployment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-aws/deployment/</guid><description>
&lt;h1 id="deployment-of-the-aws-provider-extension">Deployment of the AWS provider extension&lt;/h1>
&lt;p>&lt;strong>Disclaimer:&lt;/strong> This document is NOT a step by step installation guide for the AWS provider extension and only contains some configuration specifics regarding the installation of different components via the helm charts residing in the AWS provider extension &lt;a href="https://github.com/gardener/gardener-extension-provider-aws">repository&lt;/a>.&lt;/p>
&lt;h2 id="gardener-extension-admission-aws">gardener-extension-admission-aws&lt;/h2>
&lt;h3 id="authentication-against-the-garden-cluster">Authentication against the Garden cluster&lt;/h3>
&lt;p>There are several authentication possibilities depending on whether or not &lt;a href="https://github.com/gardener/garden-setup#concept-the-virtual-cluster">the concept of &lt;em>Virtual Garden&lt;/em>&lt;/a> is used.&lt;/p>
&lt;h4 id="virtual-garden-is-not-used-ie-the-runtime-garden-cluster-is-also-the-target-garden-cluster">&lt;em>Virtual Garden&lt;/em> is not used, i.e., the &lt;code>runtime&lt;/code> Garden cluster is also the &lt;code>target&lt;/code> Garden cluster.&lt;/h4>
&lt;p>&lt;strong>Automounted Service Account Token&lt;/strong>
The easiest way to deploy the &lt;code>gardener-extension-admission-aws&lt;/code> component will be to not provide &lt;code>kubeconfig&lt;/code> at all. This way in-cluster configuration and an automounted service account token will be used. The drawback of this approach is that the automounted token will not be automatically rotated.&lt;/p>
&lt;p>&lt;strong>Service Account Token Volume Projection&lt;/strong>
Another solution will be to use &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#service-account-token-volume-projection">Service Account Token Volume Projection&lt;/a> combined with a &lt;code>kubeconfig&lt;/code> referencing a token file (see example below).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>clusters:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- cluster:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> certificate-authority-data: &amp;lt;CA-DATA&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server: https://default.kubernetes.svc.cluster.local
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>contexts:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- context:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cluster: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>current-context: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>users:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- name: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tokenFile: /var/run/secrets/projected/serviceaccount/token
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will allow for automatic rotation of the service account token by the &lt;code>kubelet&lt;/code>. The configuration can be achieved by setting both &lt;code>.Values.global.serviceAccountTokenVolumeProjection.enabled: true&lt;/code> and &lt;code>.Values.global.kubeconfig&lt;/code> in the respective chart&amp;rsquo;s &lt;code>values.yaml&lt;/code> file.&lt;/p>
&lt;h4 id="virtual-garden-is-used-ie-the-runtime-garden-cluster-is-different-from-the-target-garden-cluster">&lt;em>Virtual Garden&lt;/em> is used, i.e., the &lt;code>runtime&lt;/code> Garden cluster is different from the &lt;code>target&lt;/code> Garden cluster.&lt;/h4>
&lt;p>&lt;strong>Service Account&lt;/strong>
The easiest way to setup the authentication will be to create a service account and the respective roles will be bound to this service account in the &lt;code>target&lt;/code> cluster. Then use the generated service account token and craft a &lt;code>kubeconfig&lt;/code> which will be used by the workload in the &lt;code>runtime&lt;/code> cluster. This approach does not provide a solution for the rotation of the service account token. However, this setup can be achieved by setting &lt;code>.Values.global.virtualGarden.enabled: true&lt;/code> and following these steps:&lt;/p>
&lt;ol>
&lt;li>Deploy the &lt;code>application&lt;/code> part of the charts in the &lt;code>target&lt;/code> cluster.&lt;/li>
&lt;li>Get the service account token and craft the &lt;code>kubeconfig&lt;/code>.&lt;/li>
&lt;li>Set the crafted &lt;code>kubeconfig&lt;/code> and deploy the &lt;code>runtime&lt;/code> part of the charts in the &lt;code>runtime&lt;/code> cluster.&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Client Certificate&lt;/strong>
Another solution will be to bind the roles in the &lt;code>target&lt;/code> cluster to a &lt;code>User&lt;/code> subject instead of a service account and use a client certificate for authentication. This approach does not provide a solution for the client certificate rotation. However, this setup can be achieved by setting both &lt;code>.Values.global.virtualGarden.enabled: true&lt;/code> and &lt;code>.Values.global.virtualGarden.user.name&lt;/code>, then following these steps:&lt;/p>
&lt;ol>
&lt;li>Generate a client certificate for the &lt;code>target&lt;/code> cluster for the respective user.&lt;/li>
&lt;li>Deploy the &lt;code>application&lt;/code> part of the charts in the &lt;code>target&lt;/code> cluster.&lt;/li>
&lt;li>Craft a &lt;code>kubeconfig&lt;/code> using the already generated client certificate.&lt;/li>
&lt;li>Set the crafted &lt;code>kubeconfig&lt;/code> and deploy the &lt;code>runtime&lt;/code> part of the charts in the &lt;code>runtime&lt;/code> cluster.&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Projected Service Account Token&lt;/strong>
This approach requires an already deployed and configured &lt;a href="https://github.com/gardener/oidc-webhook-authenticator">oidc-webhook-authenticator&lt;/a> for the &lt;code>target&lt;/code> cluster. Also the &lt;code>runtime&lt;/code> cluster should be registered as a trusted identity provider in the &lt;code>target&lt;/code> cluster. Then projected service accounts tokens from the &lt;code>runtime&lt;/code> cluster can be used to authenticate against the &lt;code>target&lt;/code> cluster. The needed steps are as follows:&lt;/p>
&lt;ol>
&lt;li>Deploy &lt;a href="https://github.com/gardener/oidc-webhook-authenticator">OWA&lt;/a> and establish the needed trust.&lt;/li>
&lt;li>Set &lt;code>.Values.global.virtualGarden.enabled: true&lt;/code> and &lt;code>.Values.global.virtualGarden.user.name&lt;/code>. &lt;strong>Note:&lt;/strong> username value will depend on the trust configuration, e.g., &lt;code>&amp;lt;prefix&amp;gt;:system:serviceaccount:&amp;lt;namespace&amp;gt;:&amp;lt;serviceaccount&amp;gt;&lt;/code>&lt;/li>
&lt;li>Set &lt;code>.Values.global.serviceAccountTokenVolumeProjection.enabled: true&lt;/code> and &lt;code>.Values.global.serviceAccountTokenVolumeProjection.audience&lt;/code>. &lt;strong>Note:&lt;/strong> audience value will depend on the trust configuration, e.g., &lt;code>&amp;lt;cliend-id-from-trust-config&amp;gt;&lt;/code>.&lt;/li>
&lt;li>Craft a kubeconfig (see example below).&lt;/li>
&lt;li>Deploy the &lt;code>application&lt;/code> part of the charts in the &lt;code>target&lt;/code> cluster.&lt;/li>
&lt;li>Deploy the &lt;code>runtime&lt;/code> part of the charts in the &lt;code>runtime&lt;/code> cluster.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>clusters:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- cluster:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> certificate-authority-data: &amp;lt;CA-DATA&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server: https://virtual-garden.api
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: virtual-garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>contexts:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- context:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cluster: virtual-garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user: virtual-garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: virtual-garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>current-context: virtual-garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>users:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- name: virtual-garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tokenFile: /var/run/secrets/projected/serviceaccount/token
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Dual Stack Ingress</title><link>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-aws/dual-stack-ingress/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-aws/dual-stack-ingress/</guid><description>
&lt;h1 id="using-ipv4ipv6-dual-stack-ingress-in-an-ipv4-single-stack-cluster">Using IPv4/IPv6 (dual-stack) Ingress in an IPv4 single-stack cluster&lt;/h1>
&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;p>IPv6 adoption is continuously growing, already overtaking IPv4 in certain regions, e.g. India, or scenarios, e.g. mobile.
Even though most IPv6 installations deploy means to reach IPv4, it might still be beneficial to expose services
natively via IPv4 and IPv6 instead of just relying on IPv4.&lt;/p>
&lt;h2 id="disadvantages-of-full-ipv4ipv6-dual-stack-deployments">Disadvantages of full IPv4/IPv6 (dual-stack) Deployments&lt;/h2>
&lt;p>Enabling full IPv4/IPv6 (dual-stack) support in a kubernetes cluster is a major endeavor. It requires a lot of changes
and restarts of all pods so that all pods get addresses for both IP families. A side-effect of dual-stack networking
is that failures may be hidden as network traffic may take the other protocol to reach the target. For this reason and
also due to reduced operational complexity, service teams might lean towards staying in a single-stack environment as
much as possible. Luckily, this is possible with Gardener and IPv4/IPv6 (dual-stack) ingress on AWS.&lt;/p>
&lt;h2 id="simplifying-ipv4ipv6-dual-stack-ingress-with-protocol-translation-on-aws">Simplifying IPv4/IPv6 (dual-stack) Ingress with Protocol Translation on AWS&lt;/h2>
&lt;p>Fortunately, the network load balancer on AWS supports automatic protocol translation, i.e. it can expose both IPv4 and
IPv6 endpoints while communicating with just one protocol to the backends. Under the hood, automatic protocol translation
takes place. Client IP address preservation can be achieved by using proxy protocol.&lt;/p>
&lt;p>This approach enables users to expose IPv4 workload to IPv6-only clients without having to change the workload/service.
Without requiring invasive changes, it allows a fairly simple first step into the IPv6 world for services just requiring
ingress (incoming) communication.&lt;/p>
&lt;h2 id="necessary-shoot-cluster-configuration-changes-for-ipv4ipv6-dual-stack-ingress">Necessary Shoot Cluster Configuration Changes for IPv4/IPv6 (dual-stack) Ingress&lt;/h2>
&lt;p>To be able to utilize IPv4/IPv6 (dual-stack) Ingress in an IPv4 shoot cluster, the cluster needs to meet two preconditions:&lt;/p>
&lt;ol>
&lt;li>&lt;code>dualStack.enabled&lt;/code> needs to be set to &lt;code>true&lt;/code> to configure VPC/subnet for IPv6 and add a routing rule for IPv6.
(This does not add IPv6 addresses to kubernetes nodes.)&lt;/li>
&lt;li>&lt;code>loadBalancerController.enabled&lt;/code> needs to be set to &lt;code>true&lt;/code> as well to use the load balancer controller, which supports
dual-stack ingress.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Shoot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> provider:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: aws
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> infrastructureConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiVersion: aws.provider.extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: InfrastructureConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dualStack:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> enabled: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> controlPlaneConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiVersion: aws.provider.extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: ControlPlaneConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> loadBalancerController:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> enabled: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>When &lt;code>infrastructureConfig.networks.vpc.id&lt;/code> is set to the ID of an existing VPC, please make sure that your VPC has an &lt;a href="https://docs.aws.amazon.com/vpc/latest/userguide/modify-vpcs.html#vpc-associate-ipv6-cidr">Amazon-provided IPv6 CIDR block added&lt;/a>.&lt;/p>
&lt;p>After adapting the shoot specification and reconciling the cluster, dual-stack load balancers can be created using
kubernetes services objects.&lt;/p>
&lt;h2 id="creating-an-ipv4ipv6-dual-stack-ingress">Creating an IPv4/IPv6 (dual-stack) Ingress&lt;/h2>
&lt;p>With the preconditions set, creating an IPv4/IPv6 load balancer is as easy as annotating a service with the correct
annotations:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> annotations:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service.beta.kubernetes.io/aws-load-balancer-ip-address-type: dualstack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: instance
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service.beta.kubernetes.io/aws-load-balancer-type: external
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: LoadBalancer
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In case the client IP address should be preserved, the following annotation can be used to enable proxy protocol.
(The pod receiving the traffic needs to be configured for proxy protocol as well.)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span> service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: &lt;span style="color:#a31515">&amp;#34;*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Please note that changing an existing &lt;code>Service&lt;/code> to dual-stack may cause the creation of a new load balancer without
deletion of the old AWS load balancer resource. While this helps in a seamless migration by not cutting existing
connections it may lead to wasted/forgotten resources. Therefore, the (manual) cleanup needs to be taken into account
when migrating an existing &lt;code>Service&lt;/code> instance.&lt;/p>
&lt;p>For more details see &lt;a href="https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.4/guide/service/nlb/">AWS Load Balancer Documentation - Network Load Balancer&lt;/a>.&lt;/p>
&lt;h2 id="dns-considerations-to-prevent-downtime-during-a-dual-stack-migration">DNS Considerations to Prevent Downtime During a Dual-Stack Migration&lt;/h2>
&lt;p>In case the migration of an existing service is desired, please check if there are DNS entries directly linked to the
corresponding load balancer. The migrated load balancer will have a new domain name immediately, which will not be ready
in the beginning. Therefore, a direct migration of the domain name entries is not desired as it may cause a short
downtime, i.e. domain name entries without backing IP addresses.&lt;/p>
&lt;p>If there are DNS entries directly linked to the corresponding load balancer and they are managed by the
&lt;a href="https://github.com/gardener/gardener-extension-shoot-dns-service">shoot-dns-service&lt;/a>, you can identify this via
annotations with the prefix &lt;code>dns.gardener.cloud/&lt;/code>. Those annotations can be linked to a &lt;code>Service&lt;/code>, &lt;code>Ingress&lt;/code> or
&lt;code>Gateway&lt;/code> resources. Alternatively, they may also use &lt;code>DNSEntry&lt;/code> or &lt;code>DNSAnnotation&lt;/code> resources.&lt;/p>
&lt;p>For a seamless migration without downtime use the following three step approach:&lt;/p>
&lt;ol>
&lt;li>Temporarily prevent direct DNS updates&lt;/li>
&lt;li>Migrate the load balancer and wait until it is operational&lt;/li>
&lt;li>Allow DNS updates again&lt;/li>
&lt;/ol>
&lt;p>To prevent direct updates of the DNS entries when the load balancer is migrated add the annotation
&lt;code>dns.gardener.cloud/ignore: 'true'&lt;/code> to all affected resources next to the other &lt;code>dns.gardener.cloud/...&lt;/code> annotations
before starting the migration. For example, in case of a &lt;code>Service&lt;/code> ensure that the service looks like the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>kind: Service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> annotations:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dns.gardener.cloud/ignore: &lt;span style="color:#a31515">&amp;#39;true&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dns.gardener.cloud/class: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dns.gardener.cloud/dnsnames: &lt;span style="color:#a31515">&amp;#39;...&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Next, migrate the load balancer to be dual-stack enabled by adding/changing the corresponding annotations.&lt;/p>
&lt;p>You have multiple options how to check that the load balancer has been provisioned successfully. It might be useful
to peek into &lt;code>status.loadBalancer.ingress&lt;/code> of the corresponding &lt;code>Service&lt;/code> to identify the load balancer:&lt;/p>
&lt;ul>
&lt;li>Check in the AWS console for the corresponding load balancer provisioning state&lt;/li>
&lt;li>Perform domain name lookups with &lt;code>nslookup&lt;/code>/&lt;code>dig&lt;/code> to check whether the name resolves to an IP address.&lt;/li>
&lt;li>Call your workload via the new load balancer, e.g. using
&lt;code>curl --resolve &amp;lt;my-domain-name&amp;gt;:&amp;lt;port&amp;gt;:&amp;lt;IP-address&amp;gt; https://&amp;lt;my-domain-name&amp;gt;:&amp;lt;port&amp;gt;&lt;/code>, which allows you to call your
service with the &amp;ldquo;correct&amp;rdquo; domain name without using actual name resolution.&lt;/li>
&lt;li>Wait a fixed period of time as load balancer creation is usually finished within 15 minutes&lt;/li>
&lt;/ul>
&lt;p>Once the load balancer has been provisioned, you can remove the annotation &lt;code>dns.gardener.cloud/ignore: 'true'&lt;/code> again
from the affected resources. It may take some additional time until the domain name change finally propagates
(up to one hour).&lt;/p></description></item><item><title>Docs: Local Setup</title><link>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-aws/local-setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-aws/local-setup/</guid><description>
&lt;h3 id="admission-aws">admission-aws&lt;/h3>
&lt;p>&lt;code>admission-aws&lt;/code> is an admission webhook server which is responsible for the validation of the cloud provider (AWS in this case) specific fields and resources. The Gardener API server is cloud provider agnostic and it wouldn&amp;rsquo;t be able to perform similar validation.&lt;/p>
&lt;p>Follow the steps below to run the admission webhook server locally.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Start the Gardener API server.&lt;/p>
&lt;p>For details, check the Gardener &lt;a href="https://gardener.cloud/docs/gardener/local_setup/">local setup&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Start the webhook server&lt;/p>
&lt;p>Make sure that the &lt;code>KUBECONFIG&lt;/code> environment variable is pointing to the local garden cluster.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>make start-admission
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Setup the &lt;code>ValidatingWebhookConfiguration&lt;/code>.&lt;/p>
&lt;p>&lt;code>hack/dev-setup-admission-aws.sh&lt;/code> will configure the webhook Service which will allow the kube-apiserver of your local cluster to reach the webhook server. It will also apply the &lt;code>ValidatingWebhookConfiguration&lt;/code> manifest.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>./hack/dev-setup-admission-aws.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;p>You are now ready to experiment with the &lt;code>admission-aws&lt;/code> webhook server locally.&lt;/p></description></item><item><title>Docs: Operations</title><link>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-aws/operations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-aws/operations/</guid><description>
&lt;h1 id="using-the-aws-provider-extension-with-gardener-as-operator">Using the AWS provider extension with Gardener as operator&lt;/h1>
&lt;p>The &lt;a href="https://github.com/gardener/gardener/blob/master/example/30-cloudprofile.yaml">&lt;code>core.gardener.cloud/v1beta1.CloudProfile&lt;/code> resource&lt;/a> declares a &lt;code>providerConfig&lt;/code> field that is meant to contain provider-specific configuration.
Similarly, the &lt;a href="https://github.com/gardener/gardener/blob/master/example/50-seed.yaml">&lt;code>core.gardener.cloud/v1beta1.Seed&lt;/code> resource&lt;/a> is structured.
Additionally, it allows to configure settings for the backups of the main etcds&amp;rsquo; data of shoot clusters control planes running in this seed cluster.&lt;/p>
&lt;p>This document explains what is necessary to configure for this provider extension.&lt;/p>
&lt;h2 id="cloudprofile-resource">&lt;code>CloudProfile&lt;/code> resource&lt;/h2>
&lt;p>In this section we are describing how the configuration for &lt;code>CloudProfile&lt;/code>s looks like for AWS and provide an example &lt;code>CloudProfile&lt;/code> manifest with minimal configuration that you can use to allow creating AWS shoot clusters.&lt;/p>
&lt;h3 id="cloudprofileconfig">&lt;code>CloudProfileConfig&lt;/code>&lt;/h3>
&lt;p>The cloud profile configuration contains information about the real machine image IDs in the AWS environment (AMIs).
You have to map every version that you specify in &lt;code>.spec.machineImages[].versions&lt;/code> here such that the AWS extension knows the AMI for every version you want to offer.
For each AMI an &lt;code>architecture&lt;/code> field can be specified which specifies the CPU architecture of the machine on which given machine image can be used.&lt;/p>
&lt;p>An example &lt;code>CloudProfileConfig&lt;/code> for the AWS extension looks as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: aws.provider.extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: CloudProfileConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>machineImages:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- name: coreos
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> versions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - version: 2135.6.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> regions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: eu-central-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ami: ami-034fd8c3f4026eb39
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># architecture: amd64 # optional&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="example-cloudprofile-manifest">Example &lt;code>CloudProfile&lt;/code> manifest&lt;/h3>
&lt;p>Please find below an example &lt;code>CloudProfile&lt;/code> manifest:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: CloudProfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: aws
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: aws
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubernetes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> versions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - version: 1.27.3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - version: 1.26.8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> expirationDate: &lt;span style="color:#a31515">&amp;#34;2022-10-31T23:59:59Z&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> machineImages:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: coreos
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> versions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - version: 2135.6.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> machineTypes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: m5.large
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cpu: &lt;span style="color:#a31515">&amp;#34;2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> gpu: &lt;span style="color:#a31515">&amp;#34;0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> memory: 8Gi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> usable: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> volumeTypes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: gp2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> class: standard
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> usable: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: io1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> class: premium
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> usable: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> regions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: eu-central-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zones:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: eu-central-1a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: eu-central-1b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: eu-central-1c
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> providerConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiVersion: aws.provider.extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: CloudProfileConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> machineImages:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: coreos
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> versions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - version: 2135.6.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> regions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: eu-central-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ami: ami-034fd8c3f4026eb39
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># architecture: amd64 # optional&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="seed-resource">&lt;code>Seed&lt;/code> resource&lt;/h2>
&lt;p>This provider extension does not support any provider configuration for the &lt;code>Seed&lt;/code>&amp;rsquo;s &lt;code>.spec.provider.providerConfig&lt;/code> field.
However, it supports to manage backup infrastructure, i.e., you can specify configuration for the &lt;code>.spec.backup&lt;/code> field.&lt;/p>
&lt;h3 id="backup-configuration">Backup configuration&lt;/h3>
&lt;p>Please find below an example &lt;code>Seed&lt;/code> manifest (partly) that configures backups.
As you can see, the location/region where the backups will be stored can be different to the region where the seed cluster is running.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Secret
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: backup-credentials
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>type: Opaque
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>data:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> accessKeyID: base64(access-key-id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> secretAccessKey: base64(secret-access-key)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Seed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: my-seed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> provider:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: aws
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> region: eu-west-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> backup:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> provider: aws
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> region: eu-central-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> secretRef:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: backup-credentials
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Please look up &lt;a href="https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys">https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys&lt;/a> as well.&lt;/p>
&lt;h4 id="permissions-for-aws-iam-user">Permissions for AWS IAM user&lt;/h4>
&lt;p>Please make sure that the provided credentials have the correct privileges. You can use the following AWS IAM policy document and attach it to the IAM user backed by the credentials you provided (please check the &lt;a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_manage.html">official AWS documentation&lt;/a> as well):&lt;/p>
&lt;details>
&lt;summary>Click to expand the AWS IAM policy document!&lt;/summary>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Version&amp;#34;: &lt;span style="color:#a31515">&amp;#34;2012-10-17&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Statement&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Effect&amp;#34;: &lt;span style="color:#a31515">&amp;#34;Allow&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Action&amp;#34;: &lt;span style="color:#a31515">&amp;#34;s3:*&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Resource&amp;#34;: &lt;span style="color:#a31515">&amp;#34;*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/details></description></item><item><title>Docs: Usage</title><link>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-aws/usage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-aws/usage/</guid><description>
&lt;h1 id="using-the-aws-provider-extension-with-gardener-as-end-user">Using the AWS provider extension with Gardener as end-user&lt;/h1>
&lt;p>The &lt;a href="https://github.com/gardener/gardener/blob/master/example/90-shoot.yaml">&lt;code>core.gardener.cloud/v1beta1.Shoot&lt;/code> resource&lt;/a> declares a few fields that are meant to contain provider-specific configuration.&lt;/p>
&lt;p>In this document we are describing how this configuration looks like for AWS and provide an example &lt;code>Shoot&lt;/code> manifest with minimal configuration that you can use to create an AWS cluster (modulo the landscape-specific information like cloud profile names, secret binding names, etc.).&lt;/p>
&lt;h2 id="provider-secret-data">Provider Secret Data&lt;/h2>
&lt;p>Every shoot cluster references a &lt;code>SecretBinding&lt;/code> or a &lt;code>CredentialsBinding&lt;/code> which itself references a &lt;code>Secret&lt;/code>, and this &lt;code>Secret&lt;/code> contains the provider credentials of your AWS account.
This &lt;code>Secret&lt;/code> must look as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Secret
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: core-aws
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: garden-dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>type: Opaque
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>data:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> accessKeyID: base64(access-key-id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> secretAccessKey: base64(secret-access-key)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;a href="https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys">AWS documentation&lt;/a> explains the necessary steps to enable programmatic access, i.e. create &lt;strong>access key ID&lt;/strong> and &lt;strong>access key&lt;/strong>, for the user of your choice.&lt;/p>
&lt;p>⚠️ For security reasons, we recommend creating a &lt;strong>dedicated user with programmatic access only&lt;/strong>. Please avoid re-using a IAM user which has access to the AWS console (human user).&lt;/p>
&lt;p>⚠️ Depending on your AWS API usage it can be problematic to reuse the same AWS Account for different Shoot clusters in the same region due to rate limits. Please consider spreading your Shoots over multiple AWS Accounts if you are hitting those limits.&lt;/p>
&lt;h3 id="permissions">Permissions&lt;/h3>
&lt;p>Please make sure that the provided credentials have the correct privileges. You can use the following AWS IAM policy document and attach it to the IAM user backed by the credentials you provided (please check the &lt;a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_manage.html">official AWS documentation&lt;/a> as well):&lt;/p>
&lt;details>
&lt;summary>Click to expand the AWS IAM policy document!&lt;/summary>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Version&amp;#34;: &lt;span style="color:#a31515">&amp;#34;2012-10-17&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Statement&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Effect&amp;#34;: &lt;span style="color:#a31515">&amp;#34;Allow&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Action&amp;#34;: &lt;span style="color:#a31515">&amp;#34;autoscaling:*&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Resource&amp;#34;: &lt;span style="color:#a31515">&amp;#34;*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Effect&amp;#34;: &lt;span style="color:#a31515">&amp;#34;Allow&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Action&amp;#34;: &lt;span style="color:#a31515">&amp;#34;ec2:*&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Resource&amp;#34;: &lt;span style="color:#a31515">&amp;#34;*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Effect&amp;#34;: &lt;span style="color:#a31515">&amp;#34;Allow&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Action&amp;#34;: &lt;span style="color:#a31515">&amp;#34;elasticloadbalancing:*&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Resource&amp;#34;: &lt;span style="color:#a31515">&amp;#34;*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Action&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;iam:GetInstanceProfile&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;iam:GetPolicy&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;iam:GetPolicyVersion&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;iam:GetRole&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;iam:GetRolePolicy&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;iam:ListPolicyVersions&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;iam:ListRolePolicies&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;iam:ListAttachedRolePolicies&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;iam:ListInstanceProfilesForRole&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;iam:CreateInstanceProfile&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;iam:CreatePolicy&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;iam:CreatePolicyVersion&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;iam:CreateRole&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;iam:CreateServiceLinkedRole&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;iam:AddRoleToInstanceProfile&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;iam:AttachRolePolicy&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;iam:DetachRolePolicy&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;iam:RemoveRoleFromInstanceProfile&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;iam:DeletePolicy&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;iam:DeletePolicyVersion&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;iam:DeleteRole&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;iam:DeleteRolePolicy&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;iam:DeleteInstanceProfile&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;iam:PutRolePolicy&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;iam:PassRole&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;iam:UpdateAssumeRolePolicy&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Effect&amp;#34;: &lt;span style="color:#a31515">&amp;#34;Allow&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Resource&amp;#34;: &lt;span style="color:#a31515">&amp;#34;*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000">// The following permission set is only needed, if AWS Load Balancer controller is enabled (see ControlPlaneConfig)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Effect&amp;#34;: &lt;span style="color:#a31515">&amp;#34;Allow&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Action&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;cognito-idp:DescribeUserPoolClient&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;acm:ListCertificates&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;acm:DescribeCertificate&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;iam:ListServerCertificates&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;iam:GetServerCertificate&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;waf-regional:GetWebACL&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;waf-regional:GetWebACLForResource&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;waf-regional:AssociateWebACL&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;waf-regional:DisassociateWebACL&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;wafv2:GetWebACL&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;wafv2:GetWebACLForResource&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;wafv2:AssociateWebACL&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;wafv2:DisassociateWebACL&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;shield:GetSubscriptionState&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;shield:DescribeProtection&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;shield:CreateProtection&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;shield:DeleteProtection&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Resource&amp;#34;: &lt;span style="color:#a31515">&amp;#34;*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/details>
&lt;h2 id="infrastructureconfig">&lt;code>InfrastructureConfig&lt;/code>&lt;/h2>
&lt;p>The infrastructure configuration mainly describes how the network layout looks like in order to create the shoot worker nodes in a later step, thus, prepares everything relevant to create VMs, load balancers, volumes, etc.&lt;/p>
&lt;p>An example &lt;code>InfrastructureConfig&lt;/code> for the AWS extension looks as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: aws.provider.extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: InfrastructureConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>enableECRAccess: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dualStack:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> enabled: &lt;span style="color:#00f">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>networks:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vpc: &lt;span style="color:#008000"># specify either &amp;#39;id&amp;#39; or &amp;#39;cidr&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># id: vpc-123456&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cidr: 10.250.0.0/16
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># gatewayEndpoints:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># - s3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zones:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: eu-west-1a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> internal: 10.250.112.0/22
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> public: 10.250.96.0/22
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> workers: 10.250.0.0/19
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># elasticIPAllocationID: eipalloc-123456&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ignoreTags:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> keys: &lt;span style="color:#008000"># individual ignored tag keys&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - SomeCustomKey
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - AnotherCustomKey
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> keyPrefixes: &lt;span style="color:#008000"># ignored tag key prefixes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - user.specific/prefix/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>enableECRAccess&lt;/code> flag specifies whether the AWS IAM role policy attached to all worker nodes of the cluster shall contain permissions to access the Elastic Container Registry of the respective AWS account.
If the flag is not provided it is defaulted to &lt;code>true&lt;/code>.
Please note that if the &lt;code>iamInstanceProfile&lt;/code> is set for a worker pool in the &lt;code>WorkerConfig&lt;/code> (see below) then &lt;code>enableECRAccess&lt;/code> does not have any effect.
It only applies for those worker pools whose &lt;code>iamInstanceProfile&lt;/code> is not set.&lt;/p>
&lt;details>
&lt;summary>Click to expand the default AWS IAM policy document used for the instance profiles!&lt;/summary>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Version&amp;#34;: &lt;span style="color:#a31515">&amp;#34;2012-10-17&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Statement&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Effect&amp;#34;: &lt;span style="color:#a31515">&amp;#34;Allow&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Action&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;ec2:DescribeInstances&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Resource&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000">// Only if `.enableECRAccess` is `true`.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Effect&amp;#34;: &lt;span style="color:#a31515">&amp;#34;Allow&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Action&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;ecr:GetAuthorizationToken&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;ecr:BatchCheckLayerAvailability&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;ecr:GetDownloadUrlForLayer&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;ecr:GetRepositoryPolicy&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;ecr:DescribeRepositories&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;ecr:ListImages&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;ecr:BatchGetImage&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Resource&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/details>
&lt;p>The &lt;code>dualStack.enabled&lt;/code> flag specifies whether dual-stack or IPv4-only should be supported by the infrastructure.
When the flag is set to true an Amazon provided IPv6 CIDR block will be attached to the VPC.
All subnets will receive a &lt;code>/64&lt;/code> block from it and a route entry is added to the main route table to route all IPv6 traffic over the IGW.&lt;/p>
&lt;p>The &lt;code>networks.vpc&lt;/code> section describes whether you want to create the shoot cluster in an already existing VPC or whether to create a new one:&lt;/p>
&lt;ul>
&lt;li>If &lt;code>networks.vpc.id&lt;/code> is given then you have to specify the VPC ID of the existing VPC that was created by other means (manually, other tooling, &amp;hellip;).
Please make sure that the VPC has attached an internet gateway - the AWS controller won&amp;rsquo;t create one automatically for existing VPCs. To make sure the nodes are able to join and operate in your cluster properly, please make sure that your VPC has enabled &lt;a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html">DNS Support&lt;/a>, explicitly the attributes &lt;code>enableDnsHostnames&lt;/code> and &lt;code>enableDnsSupport&lt;/code> must be set to &lt;code>true&lt;/code>.&lt;/li>
&lt;li>If &lt;code>networks.vpc.cidr&lt;/code> is given then you have to specify the VPC CIDR of a new VPC that will be created during shoot creation.
You can freely choose a private CIDR range.&lt;/li>
&lt;li>Either &lt;code>networks.vpc.id&lt;/code> or &lt;code>networks.vpc.cidr&lt;/code> must be present, but not both at the same time.&lt;/li>
&lt;li>&lt;code>networks.vpc.gatewayEndpoints&lt;/code> is optional. If specified then each item is used as service name in a corresponding Gateway VPC Endpoint.&lt;/li>
&lt;/ul>
&lt;p>The &lt;code>networks.zones&lt;/code> section contains configuration for resources you want to create or use in availability zones.
For every zone, the AWS extension creates three subnets:&lt;/p>
&lt;ul>
&lt;li>The &lt;code>internal&lt;/code> subnet is used for &lt;a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-internal-load-balancers.html">internal AWS load balancers&lt;/a>.&lt;/li>
&lt;li>The &lt;code>public&lt;/code> subnet is used for &lt;a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-internet-facing-load-balancers.html">public AWS load balancers&lt;/a>.&lt;/li>
&lt;li>The &lt;code>workers&lt;/code> subnet is used for all shoot worker nodes, i.e., VMs which later run your applications.&lt;/li>
&lt;/ul>
&lt;p>For every subnet, you have to specify a CIDR range contained in the VPC CIDR specified above, or the VPC CIDR of your already existing VPC.
You can freely choose these CIDRs and it is your responsibility to properly design the network layout to suit your needs.&lt;/p>
&lt;p>Also, the AWS extension creates a dedicated NAT gateway for each zone.
By default, it also creates a corresponding Elastic IP that it attaches to this NAT gateway and which is used for egress traffic.
The &lt;code>elasticIPAllocationID&lt;/code> field allows you to specify the ID of an existing Elastic IP allocation in case you want to bring your own.
If provided, no new Elastic IP will be created and, instead, the Elastic IP specified by you will be used.&lt;/p>
&lt;p>⚠️ If you change this field for an already existing infrastructure then it will disrupt egress traffic while AWS applies this change.
The reason is that the NAT gateway must be recreated with the new Elastic IP association.
Also, please note that the existing Elastic IP will be permanently deleted if it was earlier created by the AWS extension.&lt;/p>
&lt;p>You can configure &lt;a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpce-gateway.html">Gateway VPC Endpoints&lt;/a> by adding items in the optional list &lt;code>networks.vpc.gatewayEndpoints&lt;/code>. Each item in the list is used as a service name and a corresponding endpoint is created for it. All created endpoints point to the service within the cluster&amp;rsquo;s region. For example, consider this (partial) shoot config:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> region: eu-central-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> provider:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: aws
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> infrastructureConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiVersion: aws.provider.extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: InfrastructureConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> networks:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vpc:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> gatewayEndpoints:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - s3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The service name of the S3 Gateway VPC Endpoint in this example is &lt;code>com.amazonaws.eu-central-1.s3&lt;/code>.&lt;/p>
&lt;p>If you want to use multiple availability zones then add a second, third, &amp;hellip; entry to the &lt;code>networks.zones[]&lt;/code> list and properly specify the AZ name in &lt;code>networks.zones[].name&lt;/code>.&lt;/p>
&lt;p>Apart from the VPC and the subnets the AWS extension will also create DHCP options and an internet gateway (only if a new VPC is created), routing tables, security groups, elastic IPs, NAT gateways, EC2 key pairs, IAM roles, and IAM instance profiles.&lt;/p>
&lt;p>The &lt;code>ignoreTags&lt;/code> section allows to configure which resource tags on AWS resources managed by Gardener should be ignored during
infrastructure reconciliation. By default, all tags that are added outside of Gardener&amp;rsquo;s
reconciliation will be removed during the next reconciliation. This field allows users and automation to add
custom tags on AWS resources created and managed by Gardener without loosing them on the next reconciliation.
Tags can ignored either by specifying exact key values (&lt;code>ignoreTags.keys&lt;/code>) or key prefixes (&lt;code>ignoreTags.keyPrefixes&lt;/code>).
In both cases it is forbidden to ignore the &lt;code>Name&lt;/code> tag or any tag starting with &lt;code>kubernetes.io&lt;/code> or &lt;code>gardener.cloud&lt;/code>.
Please note though, that the tags are only ignored on resources created on behalf of the &lt;code>Infrastructure&lt;/code> CR (i.e. VPC,
subnets, security groups, keypair, etc.), while tags on machines, volumes, etc. are not in the scope of this controller.&lt;/p>
&lt;h2 id="controlplaneconfig">&lt;code>ControlPlaneConfig&lt;/code>&lt;/h2>
&lt;p>The control plane configuration mainly contains values for the AWS-specific control plane components.
Today, the only component deployed by the AWS extension is the &lt;code>cloud-controller-manager&lt;/code>.&lt;/p>
&lt;p>An example &lt;code>ControlPlaneConfig&lt;/code> for the AWS extension looks as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: aws.provider.extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: ControlPlaneConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cloudControllerManager:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># featureGates:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># SomeKubernetesFeature: true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> useCustomRouteController: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># loadBalancerController:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># enabled: true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># ingressClassName: alb&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># ipamController:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># enabled: true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>storage:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> managedDefaultClass: &lt;span style="color:#00f">false&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>cloudControllerManager.featureGates&lt;/code> contains a map of explicitly enabled or disabled feature gates.
For production usage it&amp;rsquo;s not recommend to use this field at all as you can enable alpha features or disable beta/stable features, potentially impacting the cluster stability.
If you don&amp;rsquo;t want to configure anything for the &lt;code>cloudControllerManager&lt;/code> simply omit the key in the YAML specification.&lt;/p>
&lt;p>The &lt;code>cloudControllerManager.useCustomRouteController&lt;/code> controls if the &lt;a href="https://github.com/gardener/aws-custom-route-controller">custom routes controller&lt;/a> should be enabled.
If enabled, it will add routes to the pod CIDRs for all nodes in the route tables for all zones.&lt;/p>
&lt;p>The &lt;code>storage.managedDefaultClass&lt;/code> controls if the &lt;code>default&lt;/code> storage / volume snapshot classes are marked as default by Gardener. Set it to &lt;code>false&lt;/code> to &lt;a href="https://kubernetes.io/docs/tasks/administer-cluster/change-default-storage-class/">mark another storage / volume snapshot class as default&lt;/a> without Gardener overwriting this change. If unset, this field defaults to &lt;code>true&lt;/code>.&lt;/p>
&lt;p>If the &lt;a href="https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.4/">AWS Load Balancer Controller&lt;/a> should be deployed, set &lt;code>loadBalancerController.enabled&lt;/code> to &lt;code>true&lt;/code>.
In this case, it is assumed that an &lt;code>IngressClass&lt;/code> named &lt;code>alb&lt;/code> is created &lt;strong>by the user&lt;/strong>.
You can overwrite the name by setting &lt;code>loadBalancerController.ingressClassName&lt;/code>.&lt;/p>
&lt;p>Please note, that currently only the &amp;ldquo;instance&amp;rdquo; mode is supported.&lt;/p>
&lt;h3 id="examples-for-ingress-and-service-managed-by-the-aws-load-balancer-controller">Examples for &lt;code>Ingress&lt;/code> and &lt;code>Service&lt;/code> managed by the AWS Load Balancer Controller:&lt;/h3>
&lt;ol start="0">
&lt;li>Prerequites&lt;/li>
&lt;/ol>
&lt;p>Make sure you have created an &lt;code>IngressClass&lt;/code>. For more details about parameters, please see &lt;a href="https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.5/guide/ingress/ingress_class/">AWS Load Balancer Controller - IngressClass&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: networking.k8s.io/v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: IngressClass
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: alb &lt;span style="color:#008000"># default name if not specified by `loadBalancerController.ingressClassName`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> controller: ingress.k8s.aws/alb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol>
&lt;li>Ingress&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: networking.k8s.io/v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Ingress
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: echoserver
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> annotations:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># complete set of annotations: https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.4/guide/ingress/annotations/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> alb.ingress.kubernetes.io/scheme: internet-facing
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> alb.ingress.kubernetes.io/target-type: instance &lt;span style="color:#008000"># target-type &amp;#34;ip&amp;#34; NOT supported in Gardener&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ingressClassName: alb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rules:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - http:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> paths:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - path: /
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pathType: Prefix
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> backend:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: echoserver
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> port:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> number: 80
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For more details see &lt;a href="https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.4/guide/ingress/spec/">AWS Load Balancer Documentation - Ingress Specification&lt;/a>&lt;/p>
&lt;ol start="2">
&lt;li>Service of Type &lt;code>LoadBalancer&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>This can be used to create a Network Load Balancer (NLB).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> annotations:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># complete set of annotations: https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.4/guide/service/annotations/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: instance &lt;span style="color:#008000"># target-type &amp;#34;ip&amp;#34; NOT supported in Gardener&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: ingress-nginx-controller
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: ingress-nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: LoadBalancer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> loadBalancerClass: service.k8s.aws/nlb &lt;span style="color:#008000"># mandatory to be managed by AWS Load Balancer Controller (otherwise the Cloud Controller Manager will act on it)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For more details see &lt;a href="https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.4/guide/service/nlb/">AWS Load Balancer Documentation - Network Load Balancer&lt;/a>&lt;/p>
&lt;h2 id="workerconfig">&lt;code>WorkerConfig&lt;/code>&lt;/h2>
&lt;p>The AWS extension supports encryption for volumes plus support for additional data volumes per machine.
For each data volume, you have to specify a name.
By default (if not stated otherwise), all the disks (root &amp;amp; data volumes) are encrypted.
Please make sure that your &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">instance-type supports encryption&lt;/a>.
If your instance-type doesn&amp;rsquo;t support encryption, you will have to disable encryption (which is enabled by default) by setting &lt;code>volume.encrpyted&lt;/code> to &lt;code>false&lt;/code> (refer below shown YAML snippet).&lt;/p>
&lt;p>The following YAML is a snippet of a &lt;code>Shoot&lt;/code> resource:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> provider:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> workers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: cpu-worker
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> volume:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: gp2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> size: 20Gi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> encrypted: &lt;span style="color:#00f">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dataVolumes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: kubelet-dir
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: gp2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> size: 25Gi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> encrypted: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>Note: The AWS extension does not support EBS volume (root &amp;amp; data volumes) encryption with &lt;a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#customer-cmk">customer managed CMK&lt;/a>. Support for &lt;a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#customer-cmk">customer managed CMK&lt;/a> is out of scope for now. Only &lt;a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-managed-cmk">AWS managed CMK&lt;/a> is supported.&lt;/p>
&lt;/blockquote>
&lt;p>Additionally, it is possible to provide further AWS-specific values for configuring the worker pools. The additional configuration must be specified in the &lt;code>providerConfig&lt;/code> field of the respective worker.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> provider:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> workers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: cpu-worker
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> providerConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># AWS worker config&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The configuration will be evaluated when the provider-aws will reconcile the worker pools for the respective shoot.&lt;/p>
&lt;p>An example &lt;code>WorkerConfig&lt;/code> for the AWS extension looks as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> provider:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> workers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: cpu-worker
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> providerConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiVersion: aws.provider.extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: WorkerConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> volume:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> iops: 10000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> throughput: 200
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dataVolumes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: kubelet-dir
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> iops: 12345
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> throughput: 150
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> snapshotID: snap-1234
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> iamInstanceProfile: &lt;span style="color:#008000"># (specify either ARN or name)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: my-profile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> instanceMetadataOptions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> httpTokens: required
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> httpPutResponseHopLimit: 2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># arn: my-instance-profile-arn&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nodeTemplate: &lt;span style="color:#008000"># (to be specified only if the node capacity would be different from cloudprofile info during runtime)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> capacity:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cpu: 2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> gpu: 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> memory: 50Gi
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>.volume.iops&lt;/code> is the number of I/O operations per second (IOPS) that the volume supports.
For &lt;code>io1&lt;/code> and &lt;code>gp3&lt;/code> volume type, this represents the number of IOPS that are provisioned for the volume.
For &lt;code>gp2&lt;/code> volume type, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information about General Purpose SSD baseline performance, I/O credits, IOPS range and bursting, see Amazon EBS Volume Types (&lt;a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html&lt;/a>) in the Amazon Elastic Compute Cloud User Guide.&lt;br>
Constraint: IOPS should be a positive value. Validation of IOPS (i.e. whether it is allowed and is in the specified range for a particular volume type) is done on aws side.&lt;/p>
&lt;p>The &lt;code>volume.throughput&lt;/code> is the throughput that the volume supports, in &lt;code>MiB/s&lt;/code>. As of &lt;code>16th Aug 2022&lt;/code>, this parameter is valid only for &lt;code>gp3&lt;/code> volume types and will return an error from the provider side if specified for other volume types. Its current range of throughput is from &lt;code>125MiB/s&lt;/code> to &lt;code>1000 MiB/s&lt;/code>. To know more about throughput and its range, see the official AWS documentation &lt;a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">here&lt;/a>.&lt;/p>
&lt;p>The &lt;code>.dataVolumes&lt;/code> can optionally contain configurations for the data volumes stated in the &lt;code>Shoot&lt;/code> specification in the &lt;code>.spec.provider.workers[].dataVolumes&lt;/code> list.
The &lt;code>.name&lt;/code> must match to the name of the data volume in the shoot.
It is also possible to provide a snapshot ID. It allows to &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-restoring-volume.html">restore the data volume from an existing snapshot&lt;/a>.&lt;/p>
&lt;p>The &lt;code>iamInstanceProfile&lt;/code> section allows to specify the IAM instance profile name xor ARN that should be used for this worker pool.
If not specified, a dedicated IAM instance profile created by the infrastructure controller is used (see above).&lt;/p>
&lt;p>The &lt;code>instanceMetadataOptions&lt;/code> controls access to the instance metadata service (IMDS) for members of the worker. You can do the following operations:&lt;/p>
&lt;ul>
&lt;li>access IMDSv1 (default)&lt;/li>
&lt;li>access IMDSv2 - &lt;code>httpPutResponseHopLimit &amp;gt;= 2&lt;/code>&lt;/li>
&lt;li>access IMDSv2 only (restrict access to IMDSv1) - &lt;code>httpPutResponseHopLimit &amp;gt;=2&lt;/code>, &lt;code>httpTokens = &amp;quot;required&amp;quot;&lt;/code>&lt;/li>
&lt;li>disable access to IMDS - &lt;code>httpTokens = &amp;quot;required&amp;quot;&lt;/code>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Note: The accessibility of IMDS discussed in the previous point is referenced from the point of view of containers &lt;strong>NOT&lt;/strong> running in the host network.
By default on host network IMDSv2 is already enabled (but not accessible from inside the pods).
It is currently not possible to create a VM with complete restriction to the IMDS service. It is however possible to restrict access from inside the pods by setting &lt;code>httpTokens&lt;/code> to &lt;code>required&lt;/code> and not setting &lt;code>httpPutResponseHopLimit&lt;/code> (or setting it to 1).&lt;/p>
&lt;/blockquote>
&lt;p>You can find more information regarding the options in the &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html">AWS documentation&lt;/a>.&lt;/p>
&lt;p>&lt;code>cpuOptions&lt;/code> grants more finegrained control over the worker&amp;rsquo;s CPU configuration. It has two attributes:&lt;/p>
&lt;ul>
&lt;li>&lt;code>coreCount&lt;/code>: Specify a custom amount of cores the instance should be configured with.&lt;/li>
&lt;li>&lt;code>threadsPerCore&lt;/code>: How many threads should there be on each core. Set to &lt;code>1&lt;/code> to disable multi-threading.&lt;/li>
&lt;/ul>
&lt;p>Note that if you decide to configure &lt;code>cpuOptions&lt;/code> &lt;em>both&lt;/em> these values need to be provided. For a list of valid combinations of these values refer to the &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/cpu-options-supported-instances-values.html">AWS documentation&lt;/a>.&lt;/p>
&lt;h2 id="example-shoot-manifest-one-availability-zone">Example &lt;code>Shoot&lt;/code> manifest (one availability zone)&lt;/h2>
&lt;p>Please find below an example &lt;code>Shoot&lt;/code> manifest for one availability zone:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Shoot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: johndoe-aws
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: garden-dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudProfile:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: aws
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> region: eu-central-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> secretBindingName: core-aws
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> provider:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: aws
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> infrastructureConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiVersion: aws.provider.extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: InfrastructureConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> networks:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vpc:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cidr: 10.250.0.0/16
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zones:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: eu-central-1a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> internal: 10.250.112.0/22
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> public: 10.250.96.0/22
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> workers: 10.250.0.0/19
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> controlPlaneConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiVersion: aws.provider.extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: ControlPlaneConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> workers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: worker-xoluy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> machine:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: m5.large
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> minimum: 2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> maximum: 2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> volume:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> size: 50Gi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: gp2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># The following provider config is valid if the volume type is `io1`.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># providerConfig:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># apiVersion: aws.provider.extensions.gardener.cloud/v1alpha1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># kind: WorkerConfig&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># volume:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># iops: 10000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zones:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - eu-central-1a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> networking:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nodes: 10.250.0.0/16
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: calico
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubernetes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> version: 1.28.2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> maintenance:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> autoUpdate:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubernetesVersion: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> machineImageVersion: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> addons:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubernetesDashboard:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> enabled: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nginxIngress:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> enabled: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="example-shoot-manifest-three-availability-zones">Example &lt;code>Shoot&lt;/code> manifest (three availability zones)&lt;/h2>
&lt;p>Please find below an example &lt;code>Shoot&lt;/code> manifest for three availability zones:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Shoot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: johndoe-aws
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: garden-dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudProfile:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: aws
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> region: eu-central-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> secretBindingName: core-aws
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> provider:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: aws
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> infrastructureConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiVersion: aws.provider.extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: InfrastructureConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> networks:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vpc:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cidr: 10.250.0.0/16
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zones:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: eu-central-1a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> workers: 10.250.0.0/26
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> public: 10.250.96.0/26
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> internal: 10.250.112.0/26
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: eu-central-1b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> workers: 10.250.0.64/26
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> public: 10.250.96.64/26
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> internal: 10.250.112.64/26
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: eu-central-1c
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> workers: 10.250.0.128/26
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> public: 10.250.96.128/26
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> internal: 10.250.112.128/26
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> controlPlaneConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiVersion: aws.provider.extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: ControlPlaneConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> workers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: worker-xoluy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> machine:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: m5.large
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> minimum: 3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> maximum: 9
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> volume:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> size: 50Gi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: gp2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zones:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - eu-central-1a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - eu-central-1b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - eu-central-1c
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> networking:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nodes: 10.250.0.0/16
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: calico
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubernetes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> version: 1.28.2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> maintenance:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> autoUpdate:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubernetesVersion: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> machineImageVersion: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> addons:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubernetesDashboard:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> enabled: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nginxIngress:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> enabled: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="csi-volume-provisioners">CSI volume provisioners&lt;/h2>
&lt;p>Every AWS shoot cluster will be deployed with the AWS EBS CSI driver.
It is compatible with the legacy in-tree volume provisioner that was deprecated by the Kubernetes community and will be removed in future versions of Kubernetes.
End-users might want to update their custom &lt;code>StorageClass&lt;/code>es to the new &lt;code>ebs.csi.aws.com&lt;/code> provisioner.&lt;/p>
&lt;h3 id="node-specific-volume-limits">Node-specific Volume Limits&lt;/h3>
&lt;p>The Kubernetes scheduler allows configurable limit for the number of volumes that can be attached to a node. See &lt;a href="https://k8s.io/docs/concepts/storage/storage-limits/#custom-limits">https://k8s.io/docs/concepts/storage/storage-limits/#custom-limits&lt;/a>.&lt;/p>
&lt;p>CSI drivers usually have a different procedure for configuring this custom limit. By default, the EBS CSI driver parses the machine type name and then decides the volume limit. However, this is only a rough approximation and not good enough in most cases. Specifying the volume attach limit via command line flag (&lt;code>--volume-attach-limit&lt;/code>) is currently the alternative until a more sophisticated solution presents itself (dynamically discovering the maximum number of attachable volume per EC2 machine type, see also &lt;a href="https://github.com/kubernetes-sigs/aws-ebs-csi-driver/issues/347">https://github.com/kubernetes-sigs/aws-ebs-csi-driver/issues/347&lt;/a>). The AWS extension allows the &lt;code>--volume-attach-limit&lt;/code> flag of the EBS CSI driver to be configurable via &lt;code>aws.provider.extensions.gardener.cloud/volume-attach-limit&lt;/code> annotation on the &lt;code>Shoot&lt;/code> resource. If the annotation is added to an existing &lt;code>Shoot&lt;/code>, then reconciliation needs to be triggered manually (see &lt;a href="https://gardener.cloud/docs/gardener/shoot-operations/shoot_operations/#immediate-reconciliation">Immediate reconciliation&lt;/a>), as in general adding annotation to resource is not a change that leads to &lt;code>.metadata.generation&lt;/code> increase in general.&lt;/p>
&lt;h2 id="kubernetes-versions-per-worker-pool">Kubernetes Versions per Worker Pool&lt;/h2>
&lt;p>This extension supports &lt;code>gardener/gardener&lt;/code>&amp;rsquo;s &lt;code>WorkerPoolKubernetesVersion&lt;/code> feature gate, i.e., having &lt;a href="https://github.com/gardener/gardener/blob/8a9c88866ec5fce59b5acf57d4227eeeb73669d7/example/90-shoot.yaml#L69-L70">worker pools with overridden Kubernetes versions&lt;/a> since &lt;code>gardener-extension-provider-aws@v1.34&lt;/code>.&lt;/p>
&lt;h2 id="shoot-ca-certificate-and-serviceaccount-signing-key-rotation">Shoot CA Certificate and &lt;code>ServiceAccount&lt;/code> Signing Key Rotation&lt;/h2>
&lt;p>This extension supports &lt;code>gardener/gardener&lt;/code>&amp;rsquo;s &lt;code>ShootCARotation&lt;/code> and &lt;code>ShootSARotation&lt;/code> feature gates since &lt;code>gardener-extension-provider-aws@v1.36&lt;/code>.&lt;/p>
&lt;h2 id="flow-infrastructure-reconciler">Flow Infrastructure Reconciler&lt;/h2>
&lt;p>The extension offers two different reconciler implementations for the infrastructure resource:&lt;/p>
&lt;ul>
&lt;li>terraform-based&lt;/li>
&lt;li>native Go SDK based (dubbed the &amp;ldquo;flow&amp;rdquo;-based implementation)&lt;/li>
&lt;/ul>
&lt;p>The default implementation currently is the terraform reconciler which uses the &lt;code>https://github.com/gardener/terraformer&lt;/code> as the backend for managing the shoot&amp;rsquo;s infrastructure.&lt;/p>
&lt;p>The &amp;ldquo;flow&amp;rdquo; implementation is a newer implementation that is trying to solve issues we faced with managing terraform infrastructure on Kubernetes. The goal is to have more control over the reconciliation process and be able to perform fine-grained tuning over it. The implementation is completely backwards-compatible and offers a migration route from the legacy terraformer implementation.&lt;/p>
&lt;p>For most users there will be no noticable difference. However for certain use-cases, users may notice a slight deviation from the previous behavior. For example, with flow-based infrastructure users may be able to perform certain modifications to infrastructure resources without having them reconciled back by terraform. Operations that would degrade the shoot infrastructure are still expected to be reverted back.&lt;/p>
&lt;p>For the time-being, to take advantage of the flow reconcilier users have to &amp;ldquo;opt-in&amp;rdquo; by annotating the shoot manifest with: &lt;code>aws.provider.extensions.gardener.cloud/use-flow=&amp;quot;true&amp;quot;&lt;/code>. For existing shoots with this annotation, the migration will take place on the next infrastructure reconciliation (on maintenance window or if other infrastructure changes are requested). The migration is not revertible.&lt;/p></description></item></channel></rss>