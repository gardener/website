<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gardener â€“ Operations</title><link>https://gardener.cloud/docs/dashboard/operations/</link><description>Recent content in Operations on Gardener</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://gardener.cloud/docs/dashboard/operations/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Access Restrictions</title><link>https://gardener.cloud/docs/dashboard/operations/access-restrictions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/dashboard/operations/access-restrictions/</guid><description>
&lt;h1 id="access-restrictions">Access Restrictions&lt;/h1>
&lt;p>The dashboard can be configured with access restrictions.&lt;/p>
&lt;img src="https://gardener.cloud/__resources/access-restrictions-1_071de9.png">
&lt;p>Access restrictions are shown for regions that have a matching label in the &lt;code>CloudProfile&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span> regions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: pangaea-north-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zones:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: pangaea-north-1a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: pangaea-north-1b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: pangaea-north-1c
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> labels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> seed.gardener.cloud/eu-access: &lt;span style="color:#a31515">&amp;#34;true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>If the user selects the access restriction, &lt;code>spec.seedSelector.matchLabels[key]&lt;/code> will be set.&lt;/li>
&lt;li>When selecting an option, &lt;code>metadata.annotations[optionKey]&lt;/code> will be set.&lt;/li>
&lt;/ul>
&lt;p>The value that is set depends on the configuration. See &lt;em>2.&lt;/em> under &lt;em>Configuration&lt;/em> section below.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Shoot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> annotations:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> support.gardener.cloud/eu-access-for-cluster-addons: &lt;span style="color:#a31515">&amp;#34;true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> support.gardener.cloud/eu-access-for-cluster-nodes: &lt;span style="color:#a31515">&amp;#34;true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> seedSelector:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> matchLabels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> seed.gardener.cloud/eu-access: &lt;span style="color:#a31515">&amp;#34;true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In order for the shoot (with enabled access restriction) to be scheduled on a seed, the seed needs to have the label set. E.g.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Seed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> labels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> seed.gardener.cloud/eu-access: &lt;span style="color:#a31515">&amp;#34;true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;img src="https://gardener.cloud/__resources/access-restrictions-2_2e2c49.png">
&lt;p>&lt;strong>Configuration&lt;/strong>
As gardener administrator:&lt;/p>
&lt;ol>
&lt;li>you can control the visibility of the chips with the &lt;code>accessRestriction.items[].display.visibleIf&lt;/code> and &lt;code>accessRestriction.items[].options[].display.visibleIf&lt;/code> property. E.g. in this example the access restriction chip is shown if the value is true and the option is shown if the value is false.&lt;/li>
&lt;li>you can control the value of the input field (switch / checkbox) with the &lt;code>accessRestriction.items[].input.inverted&lt;/code> and &lt;code>accessRestriction.items[].options[].input.inverted&lt;/code> property. Setting the &lt;code>inverted&lt;/code> property to &lt;code>true&lt;/code> will invert the value. That means that when selecting the input field the value will be&lt;code>'false'&lt;/code> instead of &lt;code>'true'&lt;/code>.&lt;/li>
&lt;li>you can configure the text that is displayed when no access restriction options are available by setting &lt;code>accessRestriction.noItemsText&lt;/code>
example &lt;code>values.yaml&lt;/code>:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>accessRestriction:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> noItemsText: &lt;span style="color:#00f">No&lt;/span> access restriction options available for region {region} and cloud profile {cloudProfile}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> items:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - key: seed.gardener.cloud/eu-access
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> display:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> visibleIf: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># title: foo # optional title, if not defined key will be used&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># description: bar # optional description displayed in a tooltip&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> input:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> title: EU Access
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> description: |&lt;span style="color:#a31515">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> &lt;/span> This service is offered to you with our regular SLAs and 24x7 support for the control plane of the cluster. 24x7 support for cluster add-ons and nodes is only available if you meet the following conditions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - key: support.gardener.cloud/eu-access-for-cluster-addons
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> display:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> visibleIf: &lt;span style="color:#00f">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># title: bar # optional title, if not defined key will be used&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># description: baz # optional description displayed in a tooltip&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> input:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> title: &lt;span style="color:#00f">No&lt;/span> personal data is used as name or in the content of Gardener or Kubernetes resources (e.g. Gardener project name or Kubernetes namespace, configMap or secret in Gardener or Kubernetes)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> description: |&lt;span style="color:#a31515">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> &lt;/span> If you can&amp;#39;t comply, only third-level/dev support at usual 8x5 working hours in EEA will be available to you for all cluster add-ons such as DNS and certificates, Calico overlay network and network policies, kube-proxy and services, and everything else that would require direct inspection of your cluster through its API server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> inverted: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - key: support.gardener.cloud/eu-access-for-cluster-nodes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> display:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> visibleIf: &lt;span style="color:#00f">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> input:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> title: &lt;span style="color:#00f">No&lt;/span> personal data is stored in any Kubernetes volume except for container file system, emptyDirs, and persistentVolumes (in particular, not on hostPath volumes)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> description: |&lt;span style="color:#a31515">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> &lt;/span> If you can&amp;#39;t comply, only third-level/dev support at usual 8x5 working hours in EEA will be available to you for all node-related components such as Docker and Kubelet, the operating system, and everything else that would require direct inspection of your nodes through a privileged pod or SSH
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> inverted: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Theming</title><link>https://gardener.cloud/docs/dashboard/operations/theming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/dashboard/operations/theming/</guid><description>
&lt;h1 id="theming">Theming&lt;/h1>
&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;p>Gardener landscape administrators should have the possibility to change the appearance of the Gardener Dashboard via configuration without the need to touch the code.&lt;/p>
&lt;h2 id="colors">Colors&lt;/h2>
&lt;p>Gardener Dashboard has been built with Vuetify. We use Vuetify&amp;rsquo;s built-in &lt;a href="https://vuetifyjs.com/en/features/theme/">theming support&lt;/a> to centrally configure colors that are used throughout the web application.
Colors can be configured for both light and dark themes. Configuration is done via the helm chart, see the respective theme section there. Colors can be specified as HTML color code (e.g. #FF0000 for red) or by referencing a color from Vuetify&amp;rsquo;s Material Design &lt;a href="https://vuetifyjs.com/en/styles/colors/#javascript-color-pack">Color Pack&lt;/a>.&lt;/p>
&lt;p>The following colors can be configured:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>name&lt;/th>
&lt;th>usage&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>primary&lt;/code>&lt;/td>
&lt;td>icons, chips, buttons, popovers, etc.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>anchor&lt;/code>&lt;/td>
&lt;td>links&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>main-background&lt;/code>&lt;/td>
&lt;td>main navigation, login page&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>main-navigation-title&lt;/code>&lt;/td>
&lt;td>text color on main navigation&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>toolbar-background&lt;/code>&lt;/td>
&lt;td>background color for toolbars in cards, dialogs, etc.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>toolbar-title&lt;/code>&lt;/td>
&lt;td>text color for toolbars in cards, dialogs, etc.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>action-button&lt;/code>&lt;/td>
&lt;td>buttons in tables and cards, e.g. cluster details page&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>info&lt;/code>&lt;/td>
&lt;td>Snotify info popups&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>warning&lt;/code>&lt;/td>
&lt;td>Snotify warning popups, warning texts&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>error&lt;/code>&lt;/td>
&lt;td>Snotify error popups, error texts&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>If you use the helm chart, you can configure those with &lt;code>frontendConfig.themes.light&lt;/code> for the light theme and &lt;code>frontendConfig.themes.dark&lt;/code> for the dark theme.&lt;/p>
&lt;h3 id="example">Example&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>frontend:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> themes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> light:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> primary: &lt;span style="color:#a31515">&amp;#39;#0b8062&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> anchor: &lt;span style="color:#a31515">&amp;#39;#0b8062&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> main-background: &lt;span style="color:#a31515">&amp;#39;grey.darken3&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> main-navigation-title: &lt;span style="color:#a31515">&amp;#39;shades.white&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> toolbar-background: &lt;span style="color:#a31515">&amp;#39;#0b8062&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> toolbar-title: &lt;span style="color:#a31515">&amp;#39;shades.white&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> action-button: &lt;span style="color:#a31515">&amp;#39;grey.darken4&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="logos-and-icons">Logos and Icons&lt;/h2>
&lt;p>It is also possible to exchange the Dashboard logo and icons. You can replace the &lt;a href="https://github.com/gardener/dashboard/tree/master/frontend/public/static/assets">assets&lt;/a> folder when using the &lt;a href="https://github.com/gardener/dashboard/blob/master/charts/gardener-dashboard">helm chart&lt;/a> in the &lt;code>frontendConfig.assets&lt;/code> map.&lt;/p>
&lt;p>Attention: You need to set values for all files as mapping the volume will overwrite all files. It is not possible to exchange single files.&lt;/p>
&lt;p>The files have to be encoded as base64 for the chart - to generate the encoded files for the &lt;code>values.yaml&lt;/code> of the helm chart, you can use the following shorthand with &lt;code>bash&lt;/code> or &lt;code>zsh&lt;/code> on Linux systems. If you use macOS, install coreutils with brew (&lt;code>brew install coreutils&lt;/code>) or remove the &lt;code>-w0&lt;/code> parameter.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#a31515">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> ###
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> ### COPY EVERYTHING BELOW THIS LINE
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> ###
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> assets:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> favicon-16x16.png: |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> $(cat frontend/public/static/assets/favicon-16x16.png | base64 -w0)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> favicon-32x32.png: |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> $(cat frontend/public/static/assets/favicon-32x32.png | base64 -w0)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> favicon-96x96.png: |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> $(cat frontend/public/static/assets/favicon-96x96.png | base64 -w0)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> favicon.ico: |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> $(cat frontend/public/static/assets/favicon.ico | base64 -w0)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> logo.svg: |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> $(cat frontend/public/static/assets/logo.svg | base64 -w0)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then, swap in the base64 encoded version of your files where needed.&lt;/p></description></item><item><title>Docs: Webterminals</title><link>https://gardener.cloud/docs/dashboard/operations/webterminals/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/dashboard/operations/webterminals/</guid><description>
&lt;h1 id="webterminals">Webterminals&lt;/h1>
&lt;img width="180" alt="gardener-terminal-ascii" src="https://user-images.githubusercontent.com/5526658/66032047-ecfacc80-e504-11e9-9864-57d4f0bbaf5d.png">
&lt;h2 id="architecture-overview">Architecture Overview&lt;/h2>
&lt;img src="https://gardener.cloud/__resources/webterminals-1_a34bff.png">
&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;p>We want to give garden operators and &amp;ldquo;regular&amp;rdquo; users of the Gardener dashboard an easy way to have a preconfigured shell directly in the browser.&lt;/p>
&lt;p>This has several advantages:&lt;/p>
&lt;ul>
&lt;li>no need to set up any tools locally&lt;/li>
&lt;li>no need to download / store kubeconfigs locally&lt;/li>
&lt;li>Each terminal session will have its own &amp;ldquo;access&amp;rdquo; service account created. This makes it easier to see &amp;ldquo;who&amp;rdquo; did &amp;ldquo;what&amp;rdquo; when using the web terminals.&lt;/li>
&lt;li>The &amp;ldquo;access&amp;rdquo; service account is deleted when the terminal session expires&lt;/li>
&lt;li>Easy &amp;ldquo;privileged&amp;rdquo; access to a node (privileged container, hostPID, and hostNetwork enabled, mounted host root fs) in case of troubleshooting node. If allowed by PSP.&lt;/li>
&lt;/ul>
&lt;h2 id="how-its-done---tldr">How it&amp;rsquo;s done - TL;DR&lt;/h2>
&lt;p>On the host cluster, we schedule a pod to which the dashboard frontend client attaches to (similar to &lt;code>kubectl attach&lt;/code>). Usually the &lt;a href="https://github.com/gardener/ops-toolbelt/">&lt;code>ops-toolbelt&lt;/code>&lt;/a> image is used, containing all relevant tools like &lt;code>kubectl&lt;/code>. The Pod has a kubeconfig secret mounted with the necessary privileges for the target cluster - usually &lt;code>cluster-admin&lt;/code>.&lt;/p>
&lt;h2 id="target-types">Target types&lt;/h2>
&lt;p>There are currently three targets, where a user can open a terminal session to:&lt;/p>
&lt;ul>
&lt;li>The (virtual) garden cluster - Currently operator only&lt;/li>
&lt;li>The shoot cluster&lt;/li>
&lt;li>The control plane of the shoot cluster - operator only&lt;/li>
&lt;/ul>
&lt;h2 id="host">Host&lt;/h2>
&lt;p>There are different factors on where the host cluster (and namespace) is chosen by the dashboard:&lt;/p>
&lt;ul>
&lt;li>Depending on, the selected target and the role of the user (operator or &amp;ldquo;regular&amp;rdquo; user) the host is chosen.&lt;/li>
&lt;li>For performance / low latency reasons, we want to place the &amp;ldquo;terminal&amp;rdquo; pods as near as possible to the target kube-apiserver.&lt;/li>
&lt;/ul>
&lt;p>For example, the user wants to have a terminal for a shoot cluster. The kube-apiserver of the shoot is running in the seed-shoot-ns on the seed.&lt;/p>
&lt;ul>
&lt;li>If the user is an operator, we place the &amp;ldquo;terminal&amp;rdquo; pod directly in the seed-shoot-ns on the seed.&lt;/li>
&lt;li>However, if the user is a &amp;ldquo;regular&amp;rdquo; user, we donâ€™t want to have &amp;ldquo;untrusted&amp;rdquo; workload scheduled on the seeds, that&amp;rsquo;s why the &amp;ldquo;terminal&amp;rdquo; pod is scheduled on the shoot itself, in a temporary namespace that is deleted afterwards.&lt;/li>
&lt;/ul>
&lt;h2 id="lifecycle-of-a-web-terminal-session">Lifecycle of a Web Terminal Session&lt;/h2>
&lt;h3 id="1-browser--dashboard-frontend---open-terminal">1. Browser / Dashboard Frontend - Open Terminal&lt;/h3>
&lt;p>User chooses the target and clicks in the browser on &lt;code>Open terminal&lt;/code> button. A POST request is made to the dashboard backend to request a new terminal session.&lt;/p>
&lt;h3 id="2-dashboard-backend---create-terminal-resource">2. Dashboard Backend - Create Terminal Resource&lt;/h3>
&lt;p>According to the privileges of the user (operator / enduser) and the selected target, the dashboard backend creates a &lt;code>terminal&lt;/code> resource &lt;strong>on behalf of the user&lt;/strong> in the (virtual) garden and responds with a handle to the terminal session.&lt;/p>
&lt;h3 id="3-browser--dashboard-frontend">3. Browser / Dashboard Frontend&lt;/h3>
&lt;p>The frontend makes another POST request to the dashboard backend to fetch the terminal session. The Backend waits until the &lt;code>terminal&lt;/code> resource is in a &amp;ldquo;ready&amp;rdquo; state (timeout 10s) before sending a response to the frontend. More to that later.&lt;/p>
&lt;h3 id="4-terminal-resource">4. Terminal Resource&lt;/h3>
&lt;p>The &lt;code>terminal&lt;/code> resource, among other things, holds the information of the desired host and target cluster. The credentials to these clusters are declared as references (secretRef / serviceAccountRef). The &lt;code>terminal&lt;/code> resource itself doesnâ€™t contain sensitive information.&lt;/p>
&lt;h3 id="5-admission">5. Admission&lt;/h3>
&lt;p>A validating webhook is in place to ensure that the user, that created the &lt;code>terminal&lt;/code> resource, has the &lt;strong>permission to read the referenced credentials&lt;/strong>. There is also a mutating webhook in place. Both admission configurations have &lt;strong>&lt;code>failurePolicy: Fail&lt;/code>&lt;/strong>.&lt;/p>
&lt;h3 id="6-terminal-controller-manager---apply-resources-on-host--target-cluster">6. Terminal-Controller-Manager - Apply Resources on Host &amp;amp; Target Cluster&lt;/h3>
&lt;p>&lt;em>Sidenote: The terminal-controller-manager has no knowledge about the gardener, its shoots, and seeds. In that sense it can be considered as independent from the gardener.&lt;/em>&lt;/p>
&lt;p>The &lt;a href="https://github.com/gardener/terminal-controller-manager">terminal-controller-manager&lt;/a> watches &lt;code>terminal&lt;/code> resources and ensures the desired state on the host and target cluster. The terminal-controller-manager needs the permission to read all secrets / service accounts in the virtual garden.
As additional safety net, the &lt;strong>terminal-controller-manager&lt;/strong> ensures that the &lt;code>terminal&lt;/code> resource was not created before the admission configurations were created.&lt;/p>
&lt;p>The terminal-controller-manager then creates the necessary resources in the host and target cluster.&lt;/p>
&lt;ul>
&lt;li>Target Cluster:
&lt;ul>
&lt;li>&amp;ldquo;Access&amp;rdquo; service account + (cluster)rolebinding usually to &lt;code>cluster-admin&lt;/code> cluster role
&lt;ul>
&lt;li>used from within the &amp;ldquo;terminal&amp;rdquo; pod&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Host Cluster:
&lt;ul>
&lt;li>&amp;ldquo;Attach&amp;rdquo; service Account + rolebinding to &amp;ldquo;attach&amp;rdquo; cluster role (privilege to attach and get pod)
&lt;ul>
&lt;li>will be used by the browser to attach to the pod&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Kubeconfig secret, containing the &amp;ldquo;access&amp;rdquo; token from the target cluster&lt;/li>
&lt;li>The &amp;ldquo;terminal&amp;rdquo; pod itself, having the kubeconfig secret mounted&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="7-dashboard-backend---responds-to-frontend">7. Dashboard Backend - Responds to Frontend&lt;/h3>
&lt;p>As mentioned in step 3, the dashboard backend waits until the &lt;code>terminal&lt;/code> resource is &amp;ldquo;ready&amp;rdquo;. It then reads the &amp;ldquo;attach&amp;rdquo; token from the host cluster &lt;strong>on behalf of the user&lt;/strong>.
It responds with:&lt;/p>
&lt;ul>
&lt;li>attach token&lt;/li>
&lt;li>hostname of the host cluster&amp;rsquo;s api server&lt;/li>
&lt;li>name of the pod and namespace&lt;/li>
&lt;/ul>
&lt;h3 id="8-browser--dashboard-frontend---attach-to-pod">8. Browser / Dashboard Frontend - Attach to Pod&lt;/h3>
&lt;p>Dashboard frontend attaches to the pod located on the host cluster by opening a WebSocket connection using the provided parameter and credentials.
As long as the terminal window is open, the dashboard regularly annotates the &lt;code>terminal&lt;/code> resource (heartbeat) to keep it alive.&lt;/p>
&lt;h3 id="9-terminal-controller-manager---cleanup">9. Terminal-Controller-Manager - Cleanup&lt;/h3>
&lt;p>When there is no heartbeat on the &lt;code>terminal&lt;/code> resource for a certain amount of time (default is &lt;code>5m&lt;/code>) the created resources in the host and target cluster are cleaned up again and the &lt;code>terminal&lt;/code> resource will be deleted.&lt;/p>
&lt;h2 id="browser-trusted-certificates-for-kube-apiservers">Browser Trusted Certificates for Kube-Apiservers&lt;/h2>
&lt;p>When the dashboard frontend opens a secure WebSocket connection to the kube-apiserver, the certificate presented by the kube-apiserver must be browser trusted. Otherwise, the connection can&amp;rsquo;t be established due to browser policy. Most kube-apiservers have self-signed certificates from a custom Root CA.&lt;/p>
&lt;p>The Gardener project now handles the responsibility of exposing the kube-apiservers with browser trusted certificates for &lt;code>Seed&lt;/code>s (gardener/gardener#7764) and &lt;code>Shoot&lt;/code>s (gardener/gardener#7712). For this to work, a &lt;code>Secret&lt;/code> must exist in the &lt;code>garden&lt;/code> namespace of the &lt;code>Seed&lt;/code> cluster. This &lt;code>Secret&lt;/code> should have a label &lt;code>gardener.cloud/role=controlplane-cert&lt;/code>. The Secret is expected to contain the wildcard certificate for &lt;code>Seed&lt;/code>s ingress domain.&lt;/p>
&lt;h2 id="allowlist-for-hosts">Allowlist for Hosts&lt;/h2>
&lt;h3 id="motivation-1">Motivation&lt;/h3>
&lt;p>When a user starts a terminal session, the dashboard frontend establishes a secure WebSocket connection to the corresponding kube-apiserver. This connection is controlled by the &lt;code>connectSrc&lt;/code> directive of the content security policy, which governs the hosts that the browser can connect to.&lt;/p>
&lt;p>By default, the &lt;code>connectSrc&lt;/code> directive only permits connections to the same host. However, to enable the webterminal feature to function properly, connections to additional trusted hosts are required. This is where the &lt;code>allowedHostSourceList&lt;/code> configuration becomes relevant. It directly impacts the &lt;code>connectSrc&lt;/code> directive by specifying the hostnames that the browser is allowed to connect to during a terminal session. By defining this list, you can extend the range of terminal connections to include the necessary trusted hosts, while still preventing any unauthorized or potentially harmful connections.&lt;/p>
&lt;h3 id="configuration">Configuration&lt;/h3>
&lt;p>The &lt;code>allowedHostSourceList&lt;/code> can be configured within the &lt;code>global.terminal&lt;/code> section of the &lt;code>gardener-dashboard&lt;/code> Helm &lt;code>values.yaml&lt;/code> file. The list should consist of permitted hostnames (without the scheme) for terminal connections.&lt;/p>
&lt;p>It is important to consider that the usage of wildcards follows the rules defined by the content security policy.&lt;/p>
&lt;p>Here is an example of how to configure the &lt;code>allowedHostSourceList&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>global:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> terminal:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> allowedHostSourceList:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#a31515">&amp;#34;*.seed.example.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In this example, any host under the seed.example.com domain is allowed for terminal connections.&lt;/p></description></item></channel></rss>