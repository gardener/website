<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gardener – Provider Openstack</title><link>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-openstack/</link><description>Recent content in Provider Openstack on Gardener</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-openstack/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Deployment</title><link>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-openstack/docs/deployment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-openstack/docs/deployment/</guid><description>
&lt;h1 id="deployment-of-the-openstack-provider-extension">Deployment of the OpenStack provider extension&lt;/h1>
&lt;p>&lt;strong>Disclaimer:&lt;/strong> This document is NOT a step by step installation guide for the OpenStack provider extension and only contains some configuration specifics regarding the installation of different components via the helm charts residing in the OpenStack provider extension &lt;a href="https://github.com/gardener/gardener-extension-provider-openstack">repository&lt;/a>.&lt;/p>
&lt;h2 id="gardener-extension-admission-openstack">gardener-extension-admission-openstack&lt;/h2>
&lt;h3 id="authentication-against-the-garden-cluster">Authentication against the Garden cluster&lt;/h3>
&lt;p>There are several authentication possibilities depending on whether or not &lt;a href="https://github.com/gardener/garden-setup#concept-the-virtual-cluster">the concept of &lt;em>Virtual Garden&lt;/em>&lt;/a> is used.&lt;/p>
&lt;h4 id="virtual-garden-is-not-used-ie-the-runtime-garden-cluster-is-also-the-target-garden-cluster">&lt;em>Virtual Garden&lt;/em> is not used, i.e., the &lt;code>runtime&lt;/code> Garden cluster is also the &lt;code>target&lt;/code> Garden cluster.&lt;/h4>
&lt;p>&lt;strong>Automounted Service Account Token&lt;/strong>
The easiest way to deploy the &lt;code>gardener-extension-admission-openstack&lt;/code> component will be to not provide &lt;code>kubeconfig&lt;/code> at all. This way in-cluster configuration and an automounted service account token will be used. The drawback of this approach is that the automounted token will not be automatically rotated.&lt;/p>
&lt;p>&lt;strong>Service Account Token Volume Projection&lt;/strong>
Another solution will be to use &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#service-account-token-volume-projection">Service Account Token Volume Projection&lt;/a> combined with a &lt;code>kubeconfig&lt;/code> referencing a token file (see example below).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>clusters:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- cluster:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> certificate-authority-data: &amp;lt;CA-DATA&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server: https://default.kubernetes.svc.cluster.local
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>contexts:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- context:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cluster: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>current-context: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>users:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- name: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tokenFile: /var/run/secrets/projected/serviceaccount/token
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will allow for automatic rotation of the service account token by the &lt;code>kubelet&lt;/code>. The configuration can be achieved by setting both &lt;code>.Values.global.serviceAccountTokenVolumeProjection.enabled: true&lt;/code> and &lt;code>.Values.global.kubeconfig&lt;/code> in the respective chart&amp;rsquo;s &lt;code>values.yaml&lt;/code> file.&lt;/p>
&lt;h4 id="virtual-garden-is-used-ie-the-runtime-garden-cluster-is-different-from-the-target-garden-cluster">&lt;em>Virtual Garden&lt;/em> is used, i.e., the &lt;code>runtime&lt;/code> Garden cluster is different from the &lt;code>target&lt;/code> Garden cluster.&lt;/h4>
&lt;p>&lt;strong>Service Account&lt;/strong>
The easiest way to setup the authentication will be to create a service account and the respective roles will be bound to this service account in the &lt;code>target&lt;/code> cluster. Then use the generated service account token and craft a &lt;code>kubeconfig&lt;/code> which will be used by the workload in the &lt;code>runtime&lt;/code> cluster. This approach does not provide a solution for the rotation of the service account token. However, this setup can be achieved by setting &lt;code>.Values.global.virtualGarden.enabled: true&lt;/code> and following these steps:&lt;/p>
&lt;ol>
&lt;li>Deploy the &lt;code>application&lt;/code> part of the charts in the &lt;code>target&lt;/code> cluster.&lt;/li>
&lt;li>Get the service account token and craft the &lt;code>kubeconfig&lt;/code>.&lt;/li>
&lt;li>Set the crafted &lt;code>kubeconfig&lt;/code> and deploy the &lt;code>runtime&lt;/code> part of the charts in the &lt;code>runtime&lt;/code> cluster.&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Client Certificate&lt;/strong>
Another solution will be to bind the roles in the &lt;code>target&lt;/code> cluster to a &lt;code>User&lt;/code> subject instead of a service account and use a client certificate for authentication. This approach does not provide a solution for the client certificate rotation. However, this setup can be achieved by setting both &lt;code>.Values.global.virtualGarden.enabled: true&lt;/code> and &lt;code>.Values.global.virtualGarden.user.name&lt;/code>, then following these steps:&lt;/p>
&lt;ol>
&lt;li>Generate a client certificate for the &lt;code>target&lt;/code> cluster for the respective user.&lt;/li>
&lt;li>Deploy the &lt;code>application&lt;/code> part of the charts in the &lt;code>target&lt;/code> cluster.&lt;/li>
&lt;li>Craft a &lt;code>kubeconfig&lt;/code> using the already generated client certificate.&lt;/li>
&lt;li>Set the crafted &lt;code>kubeconfig&lt;/code> and deploy the &lt;code>runtime&lt;/code> part of the charts in the &lt;code>runtime&lt;/code> cluster.&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Projected Service Account Token&lt;/strong>
This approach requires an already deployed and configured &lt;a href="https://github.com/gardener/oidc-webhook-authenticator">oidc-webhook-authenticator&lt;/a> for the &lt;code>target&lt;/code> cluster. Also the &lt;code>runtime&lt;/code> cluster should be registered as a trusted identity provider in the &lt;code>target&lt;/code> cluster. Then projected service accounts tokens from the &lt;code>runtime&lt;/code> cluster can be used to authenticate against the &lt;code>target&lt;/code> cluster. The needed steps are as follows:&lt;/p>
&lt;ol>
&lt;li>Deploy &lt;a href="https://github.com/gardener/oidc-webhook-authenticator">OWA&lt;/a> and establish the needed trust.&lt;/li>
&lt;li>Set &lt;code>.Values.global.virtualGarden.enabled: true&lt;/code> and &lt;code>.Values.global.virtualGarden.user.name&lt;/code>. &lt;strong>Note:&lt;/strong> username value will depend on the trust configuration, e.g., &lt;code>&amp;lt;prefix&amp;gt;:system:serviceaccount:&amp;lt;namespace&amp;gt;:&amp;lt;serviceaccount&amp;gt;&lt;/code>&lt;/li>
&lt;li>Set &lt;code>.Values.global.serviceAccountTokenVolumeProjection.enabled: true&lt;/code> and &lt;code>.Values.global.serviceAccountTokenVolumeProjection.audience&lt;/code>. &lt;strong>Note:&lt;/strong> audience value will depend on the trust configuration, e.g., &lt;code>&amp;lt;cliend-id-from-trust-config&amp;gt;&lt;/code>.&lt;/li>
&lt;li>Craft a kubeconfig (see example below).&lt;/li>
&lt;li>Deploy the &lt;code>application&lt;/code> part of the charts in the &lt;code>target&lt;/code> cluster.&lt;/li>
&lt;li>Deploy the &lt;code>runtime&lt;/code> part of the charts in the &lt;code>runtime&lt;/code> cluster.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>clusters:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- cluster:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> certificate-authority-data: &amp;lt;CA-DATA&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server: https://virtual-garden.api
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: virtual-garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>contexts:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- context:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cluster: virtual-garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user: virtual-garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: virtual-garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>current-context: virtual-garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>users:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- name: virtual-garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tokenFile: /var/run/secrets/projected/serviceaccount/token
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Local Setup</title><link>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-openstack/docs/local-setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-openstack/docs/local-setup/</guid><description>
&lt;h3 id="admission-openstack">admission-openstack&lt;/h3>
&lt;p>&lt;code>admission-openstack&lt;/code> is an admission webhook server which is responsible for the validation of the cloud provider (OpenStack in this case) specific fields and resources. The Gardener API server is cloud provider agnostic and it wouldn&amp;rsquo;t be able to perform similar validation.&lt;/p>
&lt;p>Follow the steps below to run the admission webhook server locally.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Start the Gardener API server.&lt;/p>
&lt;p>For details, check the Gardener &lt;a href="https://gardener.cloud/docs/gardener/development/local_setup/">local setup&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Start the webhook server&lt;/p>
&lt;p>Make sure that the &lt;code>KUBECONFIG&lt;/code> environment variable is pointing to the local garden cluster.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>make start-admission
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Setup the &lt;code>ValidatingWebhookConfiguration&lt;/code>.&lt;/p>
&lt;p>&lt;code>hack/dev-setup-admission-openstack.sh&lt;/code> will configure the webhook Service which will allow the kube-apiserver of your local cluster to reach the webhook server. It will also apply the &lt;code>ValidatingWebhookConfiguration&lt;/code> manifest.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>./hack/dev-setup-admission-openstack.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;p>You are now ready to experiment with the &lt;code>admission-openstack&lt;/code> webhook server locally.&lt;/p></description></item><item><title>Docs: Usage As End User</title><link>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-openstack/docs/usage-as-end-user/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-openstack/docs/usage-as-end-user/</guid><description>
&lt;h1 id="using-the-openstack-provider-extension-with-gardener-as-end-user">Using the OpenStack provider extension with Gardener as end-user&lt;/h1>
&lt;p>The &lt;a href="https://github.com/gardener/gardener/blob/master/example/90-shoot.yaml">&lt;code>core.gardener.cloud/v1beta1.Shoot&lt;/code> resource&lt;/a> declares a few fields that are meant to contain provider-specific configuration.&lt;/p>
&lt;p>In this document we are describing how this configuration looks like for OpenStack and provide an example &lt;code>Shoot&lt;/code> manifest with minimal configuration that you can use to create an OpenStack cluster (modulo the landscape-specific information like cloud profile names, secret binding names, etc.).&lt;/p>
&lt;h2 id="provider-secret-data">Provider Secret Data&lt;/h2>
&lt;p>Every shoot cluster references a &lt;code>SecretBinding&lt;/code> which itself references a &lt;code>Secret&lt;/code>, and this &lt;code>Secret&lt;/code> contains the provider credentials of your OpenStack tenant.
This &lt;code>Secret&lt;/code> must look as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Secret
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: core-openstack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: garden-dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>type: Opaque
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>data:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> domainName: base64(domain-name)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tenantName: base64(tenant-name)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># either use username/password&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> username: base64(user-name)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> password: base64(password)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># or application credentials&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000">#applicationCredentialID: base64(app-credential-id)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000">#applicationCredentialName: base64(app-credential-name) # optional&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000">#applicationCredentialSecret: base64(app-credential-secret)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Please look up &lt;a href="https://docs.openstack.org/keystone/pike/admin/identity-concepts.html">https://docs.openstack.org/keystone/pike/admin/identity-concepts.html&lt;/a> as well.&lt;/p>
&lt;p>For authentication with username/password see &lt;a href="https://docs.openstack.org/keystone/latest/user/supported_clients.html">Keystone username/password&lt;/a>&lt;/p>
&lt;p>Alternatively, for authentication with application credentials see &lt;a href="https://docs.openstack.org/keystone/latest/user/application_credentials.html">Keystone Application Credentials&lt;/a>. Application Credentials are &lt;strong>not&lt;/strong> supported for shoots with kubernetes versions &lt;strong>less than v1.19&lt;/strong>.&lt;/p>
&lt;p>⚠️ Depending on your API usage it can be problematic to reuse the same provider credentials for different Shoot clusters due to rate limits.
Please consider spreading your Shoots over multiple credentials from different tenants if you are hitting those limits.&lt;/p>
&lt;h2 id="infrastructureconfig">&lt;code>InfrastructureConfig&lt;/code>&lt;/h2>
&lt;p>The infrastructure configuration mainly describes how the network layout looks like in order to create the shoot worker nodes in a later step, thus, prepares everything relevant to create VMs, load balancers, volumes, etc.&lt;/p>
&lt;p>An example &lt;code>InfrastructureConfig&lt;/code> for the OpenStack extension looks as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: openstack.provider.extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: InfrastructureConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>floatingPoolName: MY-FLOATING-POOL
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># floatingPoolSubnetName: my-floating-pool-subnet-name&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>networks:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># id: 12345678-abcd-efef-08af-0123456789ab&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># router:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># id: 1234&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> workers: 10.250.0.0/19
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>floatingPoolName&lt;/code> is the name of the floating pool you want to use for your shoot.
If you don&amp;rsquo;t know which floating pools are available look it up in the respective &lt;code>CloudProfile&lt;/code>.&lt;/p>
&lt;p>With &lt;code>floatingPoolSubnetName&lt;/code> you can explicitly define to which subnet in the floating pool network (defined via &lt;code>floatingPoolName&lt;/code>) the router should be attached to.&lt;/p>
&lt;p>If &lt;code>networks.id&lt;/code> is an optional field. If it is given, you can specify the uuid of an existing private Neutron network (created manually, by other tooling, &amp;hellip;) that should be reused. A new subnet for the Shoot will be created in it.&lt;/p>
&lt;p>The &lt;code>networks.router&lt;/code> section describes whether you want to create the shoot cluster in an already existing router or whether to create a new one:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>If &lt;code>networks.router.id&lt;/code> is given then you have to specify the router id of the existing router that was created by other means (manually, other tooling, &amp;hellip;).
If you want to get a fresh router for the shoot then just omit the &lt;code>networks.router&lt;/code> field.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>In any case, the shoot cluster will be created in a &lt;strong>new&lt;/strong> subnet.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>The &lt;code>networks.workers&lt;/code> section describes the CIDR for a subnet that is used for all shoot worker nodes, i.e., VMs which later run your applications.&lt;/p>
&lt;p>You can freely choose these CIDRs and it is your responsibility to properly design the network layout to suit your needs.&lt;/p>
&lt;p>Apart from the router and the worker subnet the OpenStack extension will also create a network, router interfaces, security groups, and a key pair.&lt;/p>
&lt;h2 id="controlplaneconfig">&lt;code>ControlPlaneConfig&lt;/code>&lt;/h2>
&lt;p>The control plane configuration mainly contains values for the OpenStack-specific control plane components.
Today, the only component deployed by the OpenStack extension is the &lt;code>cloud-controller-manager&lt;/code>.&lt;/p>
&lt;p>An example &lt;code>ControlPlaneConfig&lt;/code> for the OpenStack extension looks as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: openstack.provider.extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: ControlPlaneConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>loadBalancerProvider: haproxy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>loadBalancerClasses:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- name: lbclass-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> purpose: default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> floatingNetworkID: fips-1-id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> floatingSubnetName: internet-*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- name: lbclass-2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> floatingNetworkID: fips-1-id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> floatingSubnetTags: internal,private
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- name: lbclass-3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> purpose: private
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> subnetID: internal-id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cloudControllerManager:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> featureGates:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CustomResourceValidation: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>loadBalancerProvider&lt;/code> is the provider name you want to use for load balancers in your shoot.
If you don&amp;rsquo;t know which types are available look it up in the respective &lt;code>CloudProfile&lt;/code>.&lt;/p>
&lt;p>The &lt;code>loadBalancerClasses&lt;/code> field contains an optional list of load balancer classes which will be available in the cluster. Each entry can have the following fields:&lt;/p>
&lt;ul>
&lt;li>&lt;code>name&lt;/code> to select the load balancer class via the kubernetes &lt;a href="https://github.com/kubernetes/cloud-provider-openstack/blob/master/docs/openstack-cloud-controller-manager/expose-applications-using-loadbalancer-type-service.md#switching-between-floating-subnets-by-using-preconfigured-classes">service annotations&lt;/a> &lt;code>loadbalancer.openstack.org/class=name&lt;/code>&lt;/li>
&lt;li>&lt;code>purpose&lt;/code> with values &lt;code>default&lt;/code> or &lt;code>private&lt;/code>
&lt;ul>
&lt;li>The configuration of the &lt;code>default&lt;/code> load balancer class will be used as default for all other kubernetes loadbalancer services without a class annotation&lt;/li>
&lt;li>The configuration of the &lt;code>private&lt;/code> load balancer class will be also set to the global loadbalancer configuration of the cluster, but will be overridden by the &lt;code>default&lt;/code> purpose&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>floatingNetworkID&lt;/code> can be specified to receive an ip from an floating/external network, additionally the subnet in this network can be selected via
&lt;ul>
&lt;li>&lt;code>floatingSubnetName&lt;/code> can be either a full subnet name or a regex/glob to match subnet name&lt;/li>
&lt;li>&lt;code>floatingSubnetTags&lt;/code> a comma seperated list of subnet tags&lt;/li>
&lt;li>&lt;code>floatingSubnetID&lt;/code> the id of a specific subnet&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>subnetID&lt;/code> can be specified by to receive an ip from an internal subnet (will not have an effect in combination with floating/external network configuration)&lt;/li>
&lt;/ul>
&lt;p>The &lt;code>cloudControllerManager.featureGates&lt;/code> contains a map of explicitly enabled or disabled feature gates.
For production usage it&amp;rsquo;s not recommended to use this field at all as you can enable alpha features or disable beta/stable features, potentially impacting the cluster stability.
If you don&amp;rsquo;t want to configure anything for the &lt;code>cloudControllerManager&lt;/code> simply omit the key in the YAML specification.&lt;/p>
&lt;h2 id="workerconfig">&lt;code>WorkerConfig&lt;/code>&lt;/h2>
&lt;p>Each worker group in a shoot may contain provider-specific configurations and options. These are contained in the &lt;code>providerConfig&lt;/code> section of a worker group and can be configured using a &lt;code>WorkerConfig&lt;/code> object.
An example of a &lt;code>WorkerConfig&lt;/code> looks as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: openstack.provider.extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: WorkerConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>serverGroup:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> policy: soft-anti-affinity
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>When you specify the &lt;code>serverGroup&lt;/code> section in your worker group configuration, a new server group will be created with the configured policy for each worker group that enabled this setting and all machines managed by this worker group will be assigned as members of the created server group.&lt;/p>
&lt;p>For users to have access to the server group feature, it must be enabled on the &lt;code>CloudProfile&lt;/code> by your operator.
Existing clusters can take advantage of this feature by updating the server group configuration of their respective worker groups. Worker groups that are already configured with server groups can update their setting to change the policy used, or remove it altogether at any time.&lt;/p>
&lt;p>Users must be aware that &lt;strong>any change to the server group settings will result in a rolling deployment of new nodes for the affected worker group&lt;/strong>.&lt;/p>
&lt;p>Please note the following restrictions when deploying workers with server groups:&lt;/p>
&lt;ul>
&lt;li>The &lt;code>serverGroup&lt;/code> section is optional, but if it is included in the worker configuration, it must contain a valid policy value.&lt;/li>
&lt;li>The available &lt;code>policy&lt;/code> values that can be used, are defined in the provider specific section of &lt;code>CloudProfile&lt;/code> by your operator.&lt;/li>
&lt;li>Certain policy values may induce further constraints. Using the &lt;code>affinity&lt;/code> policy is only allowed when the worker group utilizes a single zone.&lt;/li>
&lt;/ul>
&lt;h2 id="example-shoot-manifest-one-availability-zone">Example &lt;code>Shoot&lt;/code> manifest (one availability zone)&lt;/h2>
&lt;p>Please find below an example &lt;code>Shoot&lt;/code> manifest for one availability zone:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Shoot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: johndoe-openstack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: garden-dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudProfileName: openstack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> region: europe-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> secretBindingName: core-openstack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> provider:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: openstack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> infrastructureConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiVersion: openstack.provider.extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: InfrastructureConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> floatingPoolName: MY-FLOATING-POOL
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> networks:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> workers: 10.250.0.0/19
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> controlPlaneConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiVersion: openstack.provider.extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: ControlPlaneConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> loadBalancerProvider: haproxy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> workers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: worker-xoluy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> machine:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: medium_4_8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> minimum: 2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> maximum: 2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zones:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - europe-1a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> networking:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nodes: 10.250.0.0/16
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: calico
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubernetes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> version: 1.16.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> maintenance:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> autoUpdate:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubernetesVersion: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> machineImageVersion: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> addons:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubernetes-dashboard:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> enabled: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nginx-ingress:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> enabled: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="csi-volume-provisioners">CSI volume provisioners&lt;/h2>
&lt;p>Every OpenStack shoot cluster that has at least Kubernetes v1.19 will be deployed with the OpenStack Cinder CSI driver.
It is compatible with the legacy in-tree volume provisioner that was deprecated by the Kubernetes community and will be removed in future versions of Kubernetes.
End-users might want to update their custom &lt;code>StorageClass&lt;/code>es to the new &lt;code>cinder.csi.openstack.org&lt;/code> provisioner.
Shoot clusters with Kubernetes v1.18 or less will use the in-tree &lt;code>kubernetes.io/cinder&lt;/code> volume provisioner in the kube-controller-manager and the kubelet.&lt;/p>
&lt;h2 id="kubernetes-versions-per-worker-pool">Kubernetes Versions per Worker Pool&lt;/h2>
&lt;p>This extension supports &lt;code>gardener/gardener&lt;/code>&amp;rsquo;s &lt;code>WorkerPoolKubernetesVersion&lt;/code> feature gate, i.e., having &lt;a href="https://github.com/gardener/gardener/blob/8a9c88866ec5fce59b5acf57d4227eeeb73669d7/example/90-shoot.yaml#L69-L70">worker pools with overridden Kubernetes versions&lt;/a> since &lt;code>gardener-extension-provider-openstack@v1.23&lt;/code>.
Note that this feature is only usable for &lt;code>Shoot&lt;/code>s whose &lt;code>.spec.kubernetes.version&lt;/code> is greater or equal than the CSI migration version (&lt;code>1.19&lt;/code>).&lt;/p></description></item><item><title>Docs: Usage As Operator</title><link>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-openstack/docs/usage-as-operator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-openstack/docs/usage-as-operator/</guid><description>
&lt;h1 id="using-the-openstack-provider-extension-with-gardener-as-operator">Using the OpenStack provider extension with Gardener as operator&lt;/h1>
&lt;p>The &lt;a href="https://github.com/gardener/gardener/blob/master/example/30-cloudprofile.yaml">&lt;code>core.gardener.cloud/v1alpha1.CloudProfile&lt;/code> resource&lt;/a> declares a &lt;code>providerConfig&lt;/code> field that is meant to contain provider-specific configuration.&lt;/p>
&lt;p>In this document we are describing how this configuration looks like for OpenStack and provide an example &lt;code>CloudProfile&lt;/code> manifest with minimal configuration that you can use to allow creating OpenStack shoot clusters.&lt;/p>
&lt;h2 id="cloudprofileconfig">&lt;code>CloudProfileConfig&lt;/code>&lt;/h2>
&lt;p>The cloud profile configuration contains information about the real machine image IDs in the OpenStack environment (image names).
You have to map every version that you specify in &lt;code>.spec.machineImages[].versions&lt;/code> here such that the OpenStack extension knows the image ID for every version you want to offer.&lt;/p>
&lt;p>It also contains optional default values for DNS servers that shall be used for shoots.
In the &lt;code>dnsServers[]&lt;/code> list you can specify IP addresses that are used as DNS configuration for created shoot subnets.&lt;/p>
&lt;p>Also, you have to specify the keystone URL in the &lt;code>keystoneURL&lt;/code> field to your environment.&lt;/p>
&lt;p>Additionally, you can influence the HTTP request timeout when talking to the OpenStack API in the &lt;code>requestTimeout&lt;/code> field.
This may help when you have for example a long list of load balancers in your environment.&lt;/p>
&lt;p>In case your OpenStack system uses &lt;a href="https://docs.openstack.org/octavia/latest/">Octavia&lt;/a> for network load balancing then you have to set the &lt;code>useOctavia&lt;/code> field to &lt;code>true&lt;/code> such that the cloud-controller-manager for OpenStack gets correctly configured (it defaults to &lt;code>false&lt;/code>).&lt;/p>
&lt;p>Some hypervisors (especially those which are VMware-based) don&amp;rsquo;t automatically send a new volume size to a Linux kernel when a volume is resized and in-use.
For those hypervisors you can enable the storage plugin interacting with Cinder to telling the SCSI block device to refresh its information to provide information about it&amp;rsquo;s updated size to the kernel. You might need to enable this behavior depending on the underlying hypervisor of your OpenStack installation. The &lt;code>rescanBlockStorageOnResize&lt;/code> field controls this. Please note that it only applies for Kubernetes versions where CSI is used.&lt;/p>
&lt;p>Some openstack configurations do not allow to attach more volumes than a specific amount to a single node.
To tell the k8s scheduler to not over schedule volumes on a node, you can set &lt;code>nodeVolumeAttachLimit&lt;/code> which defaults to 256.
Some openstack configurations have different names for volume and compute availability zones, which might cause pods to go into pending state as there are no nodes available in the detected volume AZ. To ignore the volume AZ when scheduling pods, you can set &lt;code>ignoreVolumeAZ&lt;/code> to &lt;code>true&lt;/code>, which is only supported for shoot kubernetes version 1.20.x and newer (it defaults to &lt;code>false&lt;/code>).
See &lt;a href="https://github.com/kubernetes/cloud-provider-openstack/blob/master/docs/cinder-csi-plugin/using-cinder-csi-plugin.md#block-storage">CSI Cinder driver&lt;/a>.&lt;/p>
&lt;p>The cloud profile config also contains constraints for floating pools and load balancer providers that can be used in shoots.&lt;/p>
&lt;p>If your OpenStack system supports server groups, the &lt;code>serverGroupPolicies&lt;/code> property will enable your end-users to create shoots with workers where the nodes are managed by Nova&amp;rsquo;s server groups.
Specifying &lt;code>serverGroupPolicies&lt;/code> is optional and can be omitted. If enabled, the end-user can choose whether or not to use this feature for a shoot&amp;rsquo;s workers. Gardener will handle the creation of the server group and node assignment.&lt;/p>
&lt;p>To enable this feature, an operator should:&lt;/p>
&lt;ul>
&lt;li>specify the allowed policy values (e.g. &lt;code>affintity&lt;/code>, &lt;code>anti-affinity&lt;/code>) in this section. Only the policies in the allow-list will be available for end-users.&lt;/li>
&lt;li>make sure that your OpenStack project has enough server group capacity. Otherwise, shoot creation will fail.&lt;/li>
&lt;/ul>
&lt;p>An example &lt;code>CloudProfileConfig&lt;/code> for the OpenStack extension looks as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: openstack.provider.extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: CloudProfileConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>machineImages:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- name: coreos
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> versions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - version: 2135.6.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> image: coreos-2135.6.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># keystoneURL: https://url-to-keystone/v3/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># keystoneURLs:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># - region: europe&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># url: https://europe.example.com/v3/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># - region: asia&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># url: https://asia.example.com/v3/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># dnsServers:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># - 10.10.10.11&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># - 10.10.10.12&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># requestTimeout: 60s&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># useOctavia: true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># useSNAT: true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># rescanBlockStorageOnResize: true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># ignoreVolumeAZ: true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># nodeVolumeAttachLimit: 30&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># serverGroupPolicies:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># - soft-anti-affinity&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># - anti-affinity&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># resolvConfOptions:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># - rotate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># - timeout:1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>constraints:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> floatingPools:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: fp-pool-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># region: europe&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># loadBalancerClasses:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># - name: lb-class-1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># floatingSubnetID: &amp;#34;1234&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># floatingNetworkID: &amp;#34;4567&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># subnetID: &amp;#34;7890&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># - name: &amp;#34;fp-pool-*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># region: europe&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># loadBalancerClasses:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># - name: lb-class-1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># floatingSubnetID: &amp;#34;1234&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># floatingNetworkID: &amp;#34;4567&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># subnetID: &amp;#34;7890&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># - name: &amp;#34;fp-pool-eu-demo&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># region: europe&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># domain: demo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># loadBalancerClasses:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># - name: lb-class-1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># floatingSubnetID: &amp;#34;1234&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># floatingNetworkID: &amp;#34;4567&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># subnetID: &amp;#34;7890&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># - name: &amp;#34;fp-pool-eu-dev&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># region: europe&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># domain: dev&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># nonConstraining: true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># loadBalancerClasses:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># - name: lb-class-1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># floatingSubnetID: &amp;#34;1234&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># floatingNetworkID: &amp;#34;4567&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># subnetID: &amp;#34;7890&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> loadBalancerProviders:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: haproxy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># region: europe&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># - name: f5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># region: asia&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Please note that it is possible to configure a region mapping for keystone URLs, floating pools, and load balancer providers.
Additionally, floating pools can be constrainted to a keystone domain by specifying the &lt;code>domain&lt;/code> field.
Floating pool names may also contains simple wildcard expressions, like &lt;code>*&lt;/code> or &lt;code>fp-pool-*&lt;/code> or &lt;code>*-fp-pool&lt;/code>. Please note that the &lt;code>*&lt;/code> must be either single or at the beginning or at the end. Consequently, &lt;code>fp-*-pool&lt;/code> is not possible/allowed.
The default behavior is that, if found, the regional (and/or domain restricted) entry is taken.
If no entry for the given region exists then the fallback value is the most matching entry (w.r.t. wildcard matching) in the list without a &lt;code>region&lt;/code> field (or the &lt;code>keystoneURL&lt;/code> value for the keystone URLs).
If an additional floating pool should be selectable for a region and/or domain, you can mark it as non constraining
with setting the optional field &lt;code>nonConstraining&lt;/code> to &lt;code>true&lt;/code>.&lt;/p>
&lt;p>The &lt;code>loadBalancerClasses&lt;/code> field is an optional list of load balancer classes which can be when the corresponding floating pool network is choosen. The load balancer classes can be configured in the same way as in the &lt;code>ControlPlaneConfig&lt;/code> in the &lt;code>Shoot&lt;/code> resource, therefore see &lt;a href="https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-openstack/docs/usage-as-end-user/#ControlPlaneConfig">here&lt;/a> for more details.&lt;/p>
&lt;p>Some OpenStack environments don&amp;rsquo;t need these regional mappings, hence, the &lt;code>region&lt;/code> and &lt;code>keystoneURLs&lt;/code> fields are optional.
If your OpenStack environment only has regional values and it doesn&amp;rsquo;t make sense to provide a (non-regional) fallback then simply
omit &lt;code>keystoneURL&lt;/code> and always specify &lt;code>region&lt;/code>.&lt;/p>
&lt;p>If Gardener creates and manages the router of a shoot cluster, it is additionally possible to specify that the &lt;a href="https://registry.terraform.io/providers/terraform-provider-openstack/openstack/latest/docs/resources/networking_router_v2#enable_snat">enable_snat&lt;/a> field is set to &lt;code>true&lt;/code> via &lt;code>useSNAT: true&lt;/code> in the &lt;code>CloudProfileConfig&lt;/code>.&lt;/p>
&lt;p>On some OpenStack enviroments, there may be the need to set options in the file &lt;code>/etc/resolv.conf&lt;/code> on worker nodes.
If the field &lt;code>resolvConfOptions&lt;/code> is set, a systemd service will be installed which copies &lt;code>/run/systemd/resolve/resolv.conf&lt;/code>
on every change to &lt;code>/etc/resolv.conf&lt;/code> and appends the given options.&lt;/p>
&lt;h2 id="example-cloudprofile-manifest">Example &lt;code>CloudProfile&lt;/code> manifest&lt;/h2>
&lt;p>Please find below an example &lt;code>CloudProfile&lt;/code> manifest:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: CloudProfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: openstack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: openstack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubernetes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> versions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - version: 1.16.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - version: 1.16.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> expirationDate: &lt;span style="color:#a31515">&amp;#34;2020-04-05T01:02:03Z&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> machineImages:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: coreos
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> versions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - version: 2135.6.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> machineTypes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: medium_4_8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cpu: &lt;span style="color:#a31515">&amp;#34;4&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> gpu: &lt;span style="color:#a31515">&amp;#34;0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> memory: 8Gi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> storage:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> class: standard
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> size: 40Gi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> regions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: europe-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zones:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: europe-1a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: europe-1b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: europe-1c
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> providerConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiVersion: openstack.provider.extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: CloudProfileConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> machineImages:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: coreos
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> versions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - version: 2135.6.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> image: coreos-2135.6.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> keystoneURL: https://url-to-keystone/v3/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> constraints:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> floatingPools:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: fp-pool-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> loadBalancerProviders:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: haproxy
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>