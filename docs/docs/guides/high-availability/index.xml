<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>High Availability on Gardener</title><link>https://gardener.cloud/docs/guides/high-availability/</link><description>Recent content in High Availability on Gardener</description><generator>Hugo</generator><language>en-US</language><lastBuildDate>Fri, 17 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://gardener.cloud/docs/guides/high-availability/index.xml" rel="self" type="application/rss+xml"/><item><title>Best Practices</title><link>https://gardener.cloud/docs/guides/high-availability/best-practices/</link><pubDate>Fri, 17 Mar 2023 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/guides/high-availability/best-practices/</guid><description>&lt;h1 id="implementing-high-availability-and-tolerating-zone-outages">Implementing High Availability and Tolerating Zone Outages&lt;a class="td-heading-self-link" href="#implementing-high-availability-and-tolerating-zone-outages" aria-label="Heading self-link">&lt;/a>&lt;/h1>&lt;p>Developing highly available workload that can tolerate a zone outage is no trivial task. You will find here various recommendations to get closer to that goal. While many recommendations are general enough, the examples are specific in how to achieve this in a Gardener-managed cluster and where/how to tweak the different control plane components. If you do not use Gardener, it may be still a worthwhile read.&lt;/p></description></item><item><title>Chaos Engineering</title><link>https://gardener.cloud/docs/guides/high-availability/chaos-engineering/</link><pubDate>Fri, 17 Mar 2023 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/guides/high-availability/chaos-engineering/</guid><description>&lt;!-- BEGIN of section that must be kept in sync with sibling tutorial -->
&lt;h2 id="overview">Overview&lt;a class="td-heading-self-link" href="#overview" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;p>Gardener provides &lt;a href="https://chaostoolkit.org">&lt;code>chaostoolkit&lt;/code>&lt;/a> modules to simulate &lt;em>compute&lt;/em> and &lt;em>network&lt;/em> outages for various cloud providers such as &lt;a href="https://github.com/gardener/chaos-engineering/tree/main/docs/aws">AWS&lt;/a>, &lt;a href="https://github.com/gardener/chaos-engineering/tree/main/docs/azure">Azure&lt;/a>, &lt;a href="https://github.com/gardener/chaos-engineering/tree/main/docs/gcp">GCP&lt;/a>, &lt;a href="https://github.com/gardener/chaos-engineering/tree/main/docs/openstack">OpenStack/Converged Cloud&lt;/a>, and &lt;a href="https://github.com/gardener/chaos-engineering/tree/main/docs/vsphere">VMware vSphere&lt;/a>, as well as &lt;em>pod disruptions&lt;/em> for &lt;a href="https://github.com/gardener/chaos-engineering/tree/main/docs/k8s">any Kubernetes cluster&lt;/a>.&lt;/p>
&lt;p>The API, parameterization, and implementation is as homogeneous as possible across the different cloud providers, so that you have only minimal effort. As a Gardener user, you benefit from an &lt;a href="https://github.com/gardener/chaos-engineering/tree/main/docs/garden">additional &lt;code>garden&lt;/code> module&lt;/a> that leverages the generic modules, but exposes their functionality in the most simple, homogeneous, and secure way (no need to specify cloud provider credentials, cluster credentials, or filters explicitly; retrieves credentials and stores them in memory only).&lt;/p></description></item><item><title>Control Plane</title><link>https://gardener.cloud/docs/guides/high-availability/control-plane/</link><pubDate>Fri, 17 Mar 2023 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/guides/high-availability/control-plane/</guid><description>&lt;h1 id="highly-available-shoot-control-plane">Highly Available Shoot Control Plane&lt;a class="td-heading-self-link" href="#highly-available-shoot-control-plane" aria-label="Heading self-link">&lt;/a>&lt;/h1>&lt;p>Shoot resource offers a way to request for a highly available control plane.&lt;/p>
&lt;h2 id="failure-tolerance-types">Failure Tolerance Types&lt;a class="td-heading-self-link" href="#failure-tolerance-types" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;p>A highly available shoot control plane can be setup with either a failure tolerance of &lt;code>zone&lt;/code> or &lt;code>node&lt;/code>.&lt;/p>
&lt;h3 id="node-failure-tolerance">&lt;code>Node&lt;/code> Failure Tolerance&lt;a class="td-heading-self-link" href="#node-failure-tolerance" aria-label="Heading self-link">&lt;/a>&lt;/h3>&lt;p>The failure tolerance of a &lt;code>node&lt;/code> will have the following characteristics:&lt;/p>
&lt;ul>
&lt;li>Control plane components will be spread across different nodes within a single availability zone. There will not be
more than one replica per node for each control plane component which has more than one replica.&lt;/li>
&lt;li>&lt;code>Worker pool&lt;/code> should have a minimum of 3 nodes.&lt;/li>
&lt;li>A multi-node etcd (quorum size of 3) will be provisioned, offering zero-downtime capabilities with each member in a
different node within a single availability zone.&lt;/li>
&lt;/ul>
&lt;h3 id="zone-failure-tolerance">&lt;code>Zone&lt;/code> Failure Tolerance&lt;a class="td-heading-self-link" href="#zone-failure-tolerance" aria-label="Heading self-link">&lt;/a>&lt;/h3>&lt;p>The failure tolerance of a &lt;code>zone&lt;/code> will have the following characteristics:&lt;/p></description></item></channel></rss>