<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gardener – Security</title><link>https://gardener.cloud/docs/gardener/security/</link><description>Recent content in Security on Gardener</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://gardener.cloud/docs/gardener/security/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Admission Configuration for the `PodSecurity` Admission Plugin</title><link>https://gardener.cloud/docs/gardener/security/pod-security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/security/pod-security/</guid><description>
&lt;h2 id="admission-configuration-for-the-podsecurity-admission-plugin">Admission Configuration for the &lt;code>PodSecurity&lt;/code> Admission Plugin&lt;/h2>
&lt;p>If you wish to add your custom configuration for the &lt;code>PodSecurity&lt;/code> plugin, you can do so in the Shoot spec under &lt;code>.spec.kubernetes.kubeAPIServer.admissionPlugins&lt;/code> by adding:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>admissionPlugins:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- name: PodSecurity
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> config:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiVersion: pod-security.admission.config.k8s.io/v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: PodSecurityConfiguration
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># Defaults applied when a mode label is not set.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># Level label values must be one of:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># - &amp;#34;privileged&amp;#34; (default)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># - &amp;#34;baseline&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># - &amp;#34;restricted&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># Version label values must be one of:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># - &amp;#34;latest&amp;#34; (default) &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># - specific version like &amp;#34;v1.25&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> defaults:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> enforce: &lt;span style="color:#a31515">&amp;#34;privileged&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> enforce-version: &lt;span style="color:#a31515">&amp;#34;latest&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> audit: &lt;span style="color:#a31515">&amp;#34;privileged&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> audit-version: &lt;span style="color:#a31515">&amp;#34;latest&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> warn: &lt;span style="color:#a31515">&amp;#34;privileged&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> warn-version: &lt;span style="color:#a31515">&amp;#34;latest&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exemptions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># Array of authenticated usernames to exempt.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> usernames: []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># Array of runtime class names to exempt.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> runtimeClasses: []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># Array of namespaces to exempt.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespaces: []
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For proper functioning of Gardener, &lt;code>kube-system&lt;/code> namespace will also be automatically added to the &lt;code>exemptions.namespaces&lt;/code> list.&lt;/p></description></item><item><title>Docs: Audit a Kubernetes Cluster</title><link>https://gardener.cloud/docs/gardener/security/shoot_auditpolicy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/security/shoot_auditpolicy/</guid><description>
&lt;h1 id="audit-a-kubernetes-cluster">Audit a Kubernetes Cluster&lt;/h1>
&lt;p>The shoot cluster is a Kubernetes cluster and its &lt;code>kube-apiserver&lt;/code> handles the audit events. In order to define which audit events must be logged, a proper audit policy file must be passed to the Kubernetes API server. You could find more information about auditing a kubernetes cluster in the &lt;a href="https://kubernetes.io/docs/tasks/debug-application-cluster/audit/">Auditing&lt;/a> topic.&lt;/p>
&lt;h2 id="default-audit-policy">Default Audit Policy&lt;/h2>
&lt;p>By default, the Gardener will deploy the shoot cluster with audit policy defined in the &lt;a href="https://github.com/gardener/gardener/blob/master/pkg/component/kubernetes/apiserver/secrets.go">kube-apiserver package&lt;/a>.&lt;/p>
&lt;h2 id="custom-audit-policy">Custom Audit Policy&lt;/h2>
&lt;p>If you need specific audit policy for your shoot cluster, then you could deploy the required audit policy in the garden cluster as &lt;code>ConfigMap&lt;/code> resource and set up your shoot to refer this &lt;code>ConfigMap&lt;/code>. Note that the policy must be stored under the key &lt;code>policy&lt;/code> in the data section of the &lt;code>ConfigMap&lt;/code>.&lt;/p>
&lt;p>For example, deploy the auditpolicy &lt;code>ConfigMap&lt;/code> in the same namespace as your &lt;code>Shoot&lt;/code> resource:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl apply -f example/95-configmap-custom-audit-policy.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>then set your shoot to refer that &lt;code>ConfigMap&lt;/code> (only related fields are shown):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubernetes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubeAPIServer:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> auditConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> auditPolicy:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> configMapRef:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: auditpolicy
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Gardener validate the &lt;code>Shoot&lt;/code> resource to refer only existing &lt;code>ConfigMap&lt;/code> containing valid audit policy, and rejects the &lt;code>Shoot&lt;/code> on failure.
If you want to switch back to the default audit policy, you have to remove the section&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>auditPolicy:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> configMapRef:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: &amp;lt;configmap-name&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>from the shoot spec.&lt;/p>
&lt;h2 id="rolling-out-changes-to-the-audit-policy">Rolling Out Changes to the Audit Policy&lt;/h2>
&lt;p>Gardener is not automatically rolling out changes to the Audit Policy to minimize the amount of Shoot reconciliations in order to prevent cloud provider rate limits, etc.
Gardener will pick up the changes on the next reconciliation of Shoots referencing the Audit Policy ConfigMap.
If users want to immediately rollout Audit Policy changes, they can manually trigger a Shoot reconciliation as described in &lt;a href="https://gardener.cloud/docs/gardener/shoot-operations/shoot_operations/#immediate-reconciliation">triggering an immediate reconciliation&lt;/a>.
This is similar to changes to the cloud provider secret referenced by Shoots.&lt;/p></description></item><item><title>Docs: Default Seccomp Profile</title><link>https://gardener.cloud/docs/gardener/security/default_seccomp_profile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/security/default_seccomp_profile/</guid><description>
&lt;h1 id="default-seccomp-profile-and-configuration">Default Seccomp Profile and Configuration&lt;/h1>
&lt;p>This is a short guide describing how to enable the defaulting of seccomp profiles for Gardener managed workloads in the seed. Running pods in &lt;code>Unconfined&lt;/code> (seccomp disabled) mode is undesirable since this is the least restrictive profile. Also, mind that any privileged container will always run as &lt;code>Unconfined&lt;/code>. More information about seccomp can be found in this &lt;a href="https://kubernetes.io/docs/tutorials/security/seccomp/">Kubernetes tutorial&lt;/a>.&lt;/p>
&lt;h2 id="setting-the-seccomp-profile-to-runtimedefault-for-seed-clusters">Setting the Seccomp Profile to RuntimeDefault for Seed Clusters&lt;/h2>
&lt;p>To address the above issue, Gardener provides a webhook that is capable of mutating pods in the seed clusters, explicitly providing them with a seccomp profile type of &lt;code>RuntimeDefault&lt;/code>. This profile is defined by the container runtime and represents a set of default syscalls that are allowed or not.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> securityContext:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> seccompProfile:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: RuntimeDefault
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>A &lt;code>Pod&lt;/code> is mutated when all of the following preconditions are fulfilled:&lt;/p>
&lt;ol>
&lt;li>The &lt;code>Pod&lt;/code> is created in a Gardener managed namespace.&lt;/li>
&lt;li>The &lt;code>Pod&lt;/code> is NOT labeled with &lt;code>seccompprofile.resources.gardener.cloud/skip&lt;/code>.&lt;/li>
&lt;li>The &lt;code>Pod&lt;/code> does NOT explicitly specify &lt;code>.spec.securityContext.seccompProfile.type&lt;/code>.&lt;/li>
&lt;/ol>
&lt;h3 id="how-to-configure">How to Configure&lt;/h3>
&lt;p>To enable this feature, the gardenlet &lt;code>DefaultSeccompProfile&lt;/code> feature gate must be set to &lt;code>true&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>featureGates:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DefaultSeccompProfile: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Please refer to the examples in this &lt;a href="https://github.com/gardener/gardener/blob/master/example/20-componentconfig-gardenlet.yaml">yaml file&lt;/a> for more information.&lt;/p>
&lt;p>Once the feature gate is enabled, the webhook will be registered and configured for the seed cluster. Newly created pods will be mutated to have their seccomp profile set to &lt;code>RuntimeDefault&lt;/code>.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Note:&lt;/strong> Please note that this feature is still in Alpha, so you might see instabilities every now and then.&lt;/p>
&lt;/blockquote>
&lt;h2 id="setting-the-seccomp-profile-to-runtimedefault-for-shoot-clusters">Setting the Seccomp Profile to RuntimeDefault for Shoot Clusters&lt;/h2>
&lt;p>You can enable the use of &lt;code>RuntimeDefault&lt;/code> as the default seccomp profile for all workloads. If enabled, the kubelet will use the &lt;code>RuntimeDefault&lt;/code> seccomp profile by default, which is defined by the container runtime, instead of using the &lt;code>Unconfined&lt;/code> mode. More information for this feature can be found in the &lt;a href="https://kubernetes.io/docs/tutorials/security/seccomp/#enable-the-use-of-runtimedefault-as-the-default-seccomp-profile-for-all-workloads">Kubernetes documentation&lt;/a>.&lt;/p>
&lt;p>To use seccomp profile defaulting, you must run the kubelet with the &lt;code>SeccompDefault&lt;/code> feature gate enabled (this is the default).&lt;/p>
&lt;h3 id="how-to-configure-1">How to Configure&lt;/h3>
&lt;p>To enable this feature, the kubelet &lt;code>seccompDefault&lt;/code> configuration parameter must be set to &lt;code>true&lt;/code> in the shoot&amp;rsquo;s spec.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubernetes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> version: 1.25.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubelet:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> seccompDefault: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Please refer to the examples in this &lt;a href="https://github.com/gardener/gardener/blob/master/example/90-shoot.yaml">yaml file&lt;/a> for more information.&lt;/p></description></item><item><title>Docs: ETCD Encryption Config</title><link>https://gardener.cloud/docs/gardener/security/etcd_encryption_config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/security/etcd_encryption_config/</guid><description>
&lt;h1 id="etcd-encryption-config">ETCD Encryption Config&lt;/h1>
&lt;p>The &lt;code>spec.kubernetes.kubeAPIServer.encryptionConfig&lt;/code> field in the Shoot API allows users to customize encryption configurations for the API server. It provides options to specify additional resources for encryption beyond secrets.&lt;/p>
&lt;h2 id="usage-guidelines">Usage Guidelines&lt;/h2>
&lt;ul>
&lt;li>The &lt;code>resources&lt;/code> field can be used to specify resources that should be encrypted in addition to secrets. Secrets are always encrypted.&lt;/li>
&lt;li>Each item is a Kubernetes resource name in plural (resource or resource.group). Wild cards are not supported.&lt;/li>
&lt;li>Adding an item to this list will cause patch requests for all the resources of that kind to encrypt them in the etcd. See &lt;a href="https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data">Encrypting Confidential Data at Rest&lt;/a> for more details.&lt;/li>
&lt;li>Removing an item from this list will cause patch requests for all the resources of that type to decrypt and rewrite the resource as plain text. See &lt;a href="https://kubernetes.io/docs/tasks/administer-cluster/decrypt-data/">Decrypt Confidential Data that is Already Encrypted at Rest&lt;/a> for more details.&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>ℹ️ Note that configuring encryption for a custom resource is only supported for Kubernetes versions &amp;gt;= 1.26.&lt;/p>
&lt;/blockquote>
&lt;h2 id="example-usage-in-a-shoot">Example Usage in a &lt;code>Shoot&lt;/code>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubernetes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubeAPIServer:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> encryptionConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resources:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - configmaps
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - statefulsets.apps
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - customresource.fancyoperator.io
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: OpenIDConnect Presets</title><link>https://gardener.cloud/docs/gardener/security/openidconnect-presets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/security/openidconnect-presets/</guid><description>
&lt;h1 id="clusteropenidconnectpreset-and-openidconnectpreset">ClusterOpenIDConnectPreset and OpenIDConnectPreset&lt;/h1>
&lt;p>This page provides an overview of ClusterOpenIDConnectPresets and OpenIDConnectPresets, which are objects for injecting &lt;a href="https://openid.net/connect/">OpenIDConnect Configuration&lt;/a> into &lt;code>Shoot&lt;/code> at creation time. The injected information contains configuration for the Kube API Server and optionally configuration for kubeconfig generation using said configuration.&lt;/p>
&lt;h2 id="openidconnectpreset">OpenIDConnectPreset&lt;/h2>
&lt;p>An OpenIDConnectPreset is an API resource for injecting additional runtime OIDC requirements into a Shoot at creation time. You use label selectors to specify the &lt;code>Shoot&lt;/code> to which a given OpenIDConnectPreset applies.&lt;/p>
&lt;p>Using a OpenIDConnectPresets allows project owners to not have to explicitly provide the same OIDC configuration for every &lt;code>Shoot&lt;/code> in their &lt;code>Project&lt;/code>.&lt;/p>
&lt;p>For more information about the background, see the &lt;a href="https://github.com/gardener/gardener/issues/1161">issue&lt;/a> for OpenIDConnectPreset.&lt;/p>
&lt;h3 id="how-openidconnectpreset-works">How OpenIDConnectPreset Works&lt;/h3>
&lt;p>Gardener provides an admission controller (OpenIDConnectPreset) which, when enabled, applies OpenIDConnectPresets to incoming &lt;code>Shoot&lt;/code> creation requests. When a &lt;code>Shoot&lt;/code> creation request occurs, the system does the following:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Retrieve all OpenIDConnectPreset available for use in the &lt;code>Shoot&lt;/code> namespace.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Check if the shoot label selectors of any OpenIDConnectPreset matches the labels on the Shoot being created.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If multiple presets are matched then only one is chosen and results are sorted based on:&lt;/p>
&lt;ol>
&lt;li>&lt;code>.spec.weight&lt;/code> value.&lt;/li>
&lt;li>lexicographically ordering their names (e.g., &lt;code>002preset&lt;/code> &amp;gt; &lt;code>001preset&lt;/code>)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>If the &lt;code>Shoot&lt;/code> already has a &lt;code>.spec.kubernetes.kubeAPIServer.oidcConfig&lt;/code>, then no mutation occurs.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="simple-openidconnectpreset-example">Simple OpenIDConnectPreset Example&lt;/h3>
&lt;p>This is a simple example to show how a &lt;code>Shoot&lt;/code> is modified by the OpenIDConnectPreset:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: settings.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: OpenIDConnectPreset
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: test-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> shootSelector:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> matchLabels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> oidc: enabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> clientID: test-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> issuerURL: https://foo.bar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># caBundle: |&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># -----BEGIN CERTIFICATE-----&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># Li4u&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># -----END CERTIFICATE-----&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> groupsClaim: groups-claim
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> groupsPrefix: groups-prefix
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> usernameClaim: username-claim
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> usernamePrefix: username-prefix
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> signingAlgs:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - RS256
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> requiredClaims:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key: value
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> weight: 90
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create the OpenIDConnectPreset:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-console" data-lang="console">&lt;span style="display:flex;">&lt;span>kubectl apply -f preset.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Examine the created OpenIDConnectPreset:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-console" data-lang="console">&lt;span style="display:flex;">&lt;span>kubectl get openidconnectpresets
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NAME ISSUER SHOOT-SELECTOR AGE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test-1 https://foo.bar oidc=enabled 1s
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Simple &lt;code>Shoot&lt;/code> example:&lt;/p>
&lt;p>This is a sample of a &lt;code>Shoot&lt;/code> with some fields omitted:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Shoot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: preset
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> labels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> oidc: enabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubernetes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> version: 1.20.2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create the Shoot:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-console" data-lang="console">&lt;span style="display:flex;">&lt;span>kubectl apply -f shoot.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Examine the created Shoot:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-console" data-lang="console">&lt;span style="display:flex;">&lt;span>kubectl get shoot preset -o yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Shoot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: preset
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> labels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> oidc: enabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubernetes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubeAPIServer:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> oidcConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> clientID: test-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> groupsClaim: groups-claim
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> groupsPrefix: groups-prefix
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> issuerURL: https://foo.bar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> requiredClaims:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key: value
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> signingAlgs:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - RS256
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> usernameClaim: username-claim
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> usernamePrefix: username-prefix
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> version: 1.20.2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="disable-openidconnectpreset">Disable OpenIDConnectPreset&lt;/h3>
&lt;p>The OpenIDConnectPreset admission control is enabled by default. To disable it, use the &lt;code>--disable-admission-plugins&lt;/code> flag on the gardener-apiserver.&lt;/p>
&lt;p>For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>--disable-admission-plugins=OpenIDConnectPreset
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="clusteropenidconnectpreset">ClusterOpenIDConnectPreset&lt;/h2>
&lt;p>A ClusterOpenIDConnectPreset is an API resource for injecting additional runtime OIDC requirements into a Shoot at creation time. In contrast to OpenIDConnect, it&amp;rsquo;s a cluster-scoped resource. You use label selectors to specify the &lt;code>Project&lt;/code> and &lt;code>Shoot&lt;/code> to which a given OpenIDCConnectPreset applies.&lt;/p>
&lt;p>Using a OpenIDConnectPresets allows cluster owners to not have to explicitly provide the same OIDC configuration for every &lt;code>Shoot&lt;/code> in specific &lt;code>Project&lt;/code>.&lt;/p>
&lt;p>For more information about the background, see the &lt;a href="https://github.com/gardener/gardener/issues/1161">issue&lt;/a> for ClusterOpenIDConnectPreset.&lt;/p>
&lt;h3 id="how-clusteropenidconnectpreset-works">How ClusterOpenIDConnectPreset Works&lt;/h3>
&lt;p>Gardener provides an admission controller (ClusterOpenIDConnectPreset) which, when enabled, applies ClusterOpenIDConnectPresets to incoming &lt;code>Shoot&lt;/code> creation requests. When a &lt;code>Shoot&lt;/code> creation request occurs, the system does the following:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Retrieve all ClusterOpenIDConnectPresets available.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Check if the project label selector of any ClusterOpenIDConnectPreset matches the labels of the &lt;code>Project&lt;/code> in which the &lt;code>Shoot&lt;/code> is being created.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Check if the shoot label selectors of any ClusterOpenIDConnectPreset matches the labels on the &lt;code>Shoot&lt;/code> being created.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If multiple presets are matched then only one is chosen and results are sorted based on:&lt;/p>
&lt;ol>
&lt;li>&lt;code>.spec.weight&lt;/code> value.&lt;/li>
&lt;li>lexicographically ordering their names ( e.g. &lt;code>002preset&lt;/code> &amp;gt; &lt;code>001preset&lt;/code> )&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>If the &lt;code>Shoot&lt;/code> already has a &lt;code>.spec.kubernetes.kubeAPIServer.oidcConfig&lt;/code> then no mutation occurs.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;strong>Note:&lt;/strong> Due to the previous requirement, if a &lt;code>Shoot&lt;/code> is matched by both &lt;code>OpenIDConnectPreset&lt;/code> and &lt;code>ClusterOpenIDConnectPreset&lt;/code>, then &lt;code>OpenIDConnectPreset&lt;/code> takes precedence over &lt;code>ClusterOpenIDConnectPreset&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;h3 id="simple-clusteropenidconnectpreset-example">Simple ClusterOpenIDConnectPreset Example&lt;/h3>
&lt;p>This is a simple example to show how a &lt;code>Shoot&lt;/code> is modified by the ClusterOpenIDConnectPreset:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: settings.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: ClusterOpenIDConnectPreset
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> shootSelector:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> matchLabels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> oidc: enabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> projectSelector: {} &lt;span style="color:#008000"># selects all projects.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> clientID: cluster-preset
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> issuerURL: https://foo.bar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># caBundle: |&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># -----BEGIN CERTIFICATE-----&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># Li4u&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># -----END CERTIFICATE-----&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> groupsClaim: groups-claim
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> groupsPrefix: groups-prefix
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> usernameClaim: username-claim
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> usernamePrefix: username-prefix
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> signingAlgs:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - RS256
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> requiredClaims:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key: value
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> weight: 90
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create the ClusterOpenIDConnectPreset:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-console" data-lang="console">&lt;span style="display:flex;">&lt;span>kubectl apply -f preset.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Examine the created ClusterOpenIDConnectPreset:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl get clusteropenidconnectpresets
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NAME ISSUER PROJECT-SELECTOR SHOOT-SELECTOR AGE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test https://foo.bar &amp;lt;none&amp;gt; oidc=enabled 1s
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is a sample of a &lt;code>Shoot&lt;/code>, with some fields omitted:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>kind: Shoot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: preset
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> labels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> oidc: enabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubernetes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> version: 1.20.2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create the Shoot:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-console" data-lang="console">&lt;span style="display:flex;">&lt;span>kubectl apply -f shoot.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Examine the created Shoot:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-console" data-lang="console">&lt;span style="display:flex;">&lt;span>kubectl get shoot preset -o yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Shoot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: preset
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> labels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> oidc: enabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubernetes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubeAPIServer:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> oidcConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> clientID: cluster-preset
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> groupsClaim: groups-claim
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> groupsPrefix: groups-prefix
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> issuerURL: https://foo.bar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> requiredClaims:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key: value
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> signingAlgs:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - RS256
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> usernameClaim: username-claim
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> usernamePrefix: username-prefix
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> version: 1.20.2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="disable-clusteropenidconnectpreset">Disable ClusterOpenIDConnectPreset&lt;/h3>
&lt;p>The ClusterOpenIDConnectPreset admission control is enabled by default. To disable it, use the &lt;code>--disable-admission-plugins&lt;/code> flag on the gardener-apiserver.&lt;/p>
&lt;p>For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>--disable-admission-plugins=ClusterOpenIDConnectPreset
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Shoot Serviceaccounts</title><link>https://gardener.cloud/docs/gardener/security/shoot_serviceaccounts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/security/shoot_serviceaccounts/</guid><description>
&lt;h1 id="serviceaccount-configurations-for-shoot-clusters">&lt;code>ServiceAccount&lt;/code> Configurations for Shoot Clusters&lt;/h1>
&lt;p>The &lt;code>Shoot&lt;/code> specification allows to configure some of the settings for the handling of &lt;code>ServiceAccount&lt;/code>s:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Shoot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubernetes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubeAPIServer:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> serviceAccountConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> issuer: foo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> acceptedIssuers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - foo1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - foo2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> extendTokenExpiration: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> maxTokenExpiration: 45d
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="issuer-and-accepted-issuers">Issuer and Accepted Issuers&lt;/h2>
&lt;p>The &lt;code>.spec.kubernetes.kubeAPIServer.serviceAccountConfig.{issuer,acceptedIssuers}&lt;/code> fields are translated to the &lt;code>--service-account-issuer&lt;/code> flag for the &lt;code>kube-apiserver&lt;/code>.
The issuer will assert its identifier in the &lt;code>iss&lt;/code> claim of the issued tokens.
According to the &lt;a href="https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/">upstream specification&lt;/a>, values need to meet the following requirements:&lt;/p>
&lt;blockquote>
&lt;p>This value is a string or URI. If this option is not a valid URI per the OpenID Discovery 1.0 spec, the ServiceAccountIssuerDiscovery feature will remain disabled, even if the feature gate is set to true. It is highly recommended that this value comply with the OpenID spec: &lt;a href="https://openid.net/specs/openid-connect-discovery-1_0.html">https://openid.net/specs/openid-connect-discovery-1_0.html&lt;/a>. In practice, this means that service-account-issuer must be an https URL. It is also highly recommended that this URL be capable of serving OpenID discovery documents at {service-account-issuer}/.well-known/openid-configuration.&lt;/p>
&lt;/blockquote>
&lt;p>By default, Gardener uses the internal cluster domain as issuer (e.g., &lt;code>https://api.foo.bar.example.com&lt;/code>).
If you specify the &lt;code>issuer&lt;/code>, then this default issuer will always be part of the list of accepted issuers (you don&amp;rsquo;t need to specify it yourself).&lt;/p>
&lt;blockquote>
&lt;p>[!CAUTION]
If you change from the default issuer to a custom &lt;code>issuer&lt;/code>, all previously issued tokens will still be valid/accepted.
However, if you change from a custom &lt;code>issuer&lt;/code> &lt;code>A&lt;/code> to another &lt;code>issuer&lt;/code> &lt;code>B&lt;/code> (custom or default), then you have to add &lt;code>A&lt;/code> to the &lt;code>acceptedIssuers&lt;/code> so that previously issued tokens are not invalidated.
Otherwise, the control plane components as well as system components and your workload pods might fail.
You can remove &lt;code>A&lt;/code> from the &lt;code>acceptedIssuers&lt;/code> when all currently active tokens have been issued solely by &lt;code>B&lt;/code>.
This can be ensured by using &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#service-account-token-volume-projection">projected token volumes&lt;/a> with a short validity, or by rolling out all pods.
Additionally, all &lt;a href="https://kubernetes.io/docs/concepts/configuration/secret/#service-account-token-secrets">&lt;code>ServiceAccount&lt;/code> token secrets&lt;/a> should be recreated.
Apart from this, you should wait for at least &lt;code>12h&lt;/code> to make sure the control plane and system components have received a new token from Gardener.&lt;/p>
&lt;/blockquote>
&lt;h2 id="token-expirations">Token Expirations&lt;/h2>
&lt;p>The &lt;code>.spec.kubernetes.kubeAPIServer.serviceAccountConfig.extendTokenExpiration&lt;/code> configures the &lt;code>--service-account-extend-token-expiration&lt;/code> flag of the &lt;code>kube-apiserver&lt;/code>.
It is enabled by default and has the following specification:&lt;/p>
&lt;blockquote>
&lt;p>Turns on projected service account expiration extension during token generation, which helps safe transition from legacy token to bound service account token feature. If this flag is enabled, admission injected tokens would be extended up to 1 year to prevent unexpected failure during transition, ignoring value of service-account-max-token-expiration.&lt;/p>
&lt;/blockquote>
&lt;p>The &lt;code>.spec.kubernetes.kubeAPIServer.serviceAccountConfig.maxTokenExpiration&lt;/code> configures the &lt;code>--service-account-max-token-expiration&lt;/code> flag of the &lt;code>kube-apiserver&lt;/code>.
It has the following specification:&lt;/p>
&lt;blockquote>
&lt;p>The maximum validity duration of a token created by the service account token issuer. If an otherwise valid TokenRequest with a validity duration larger than this value is requested, a token will be issued with a validity duration of this value.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>[!NOTE]
The value for this field must be in the &lt;code>[30d,90d]&lt;/code> range.
The background for this limitation is that all Gardener components rely on the &lt;code>TokenRequest&lt;/code> API and the Kubernetes service account token projection feature with short-lived, auto-rotating tokens.
Any values lower than &lt;code>30d&lt;/code> risk impacting the SLO for shoot clusters, and any values above &lt;code>90d&lt;/code> violate security best practices with respect to maximum validity of credentials before they must be rotated.
Given that the field just specifies the upper bound, end-users can still use lower values for their individual workload by specifying the &lt;code>.spec.volumes[].projected.sources[].serviceAccountToken.expirationSeconds&lt;/code> in the &lt;code>PodSpec&lt;/code>s.&lt;/p>
&lt;/blockquote>
&lt;h2 id="managed-service-account-issuer">Managed Service Account Issuer&lt;/h2>
&lt;p>Gardener also provides a way to manage the service account issuer of a shoot cluster as well as serving its OIDC discovery documents from a centrally managed server called &lt;a href="https://github.com/gardener/gardener-discovery-server">Gardener Discovery Server&lt;/a>.
This ability removes the need for changing the &lt;code>.spec.kubernetes.kubeAPIServer.serviceAccountConfig.issuer&lt;/code> and exposing it separately.&lt;/p>
&lt;h3 id="prerequisites">Prerequisites&lt;/h3>
&lt;blockquote>
&lt;p>[!NOTE]
The following prerequisites are responsibility of the Gardener Administrators and are not something that end users can configure by themselves.
If uncertain that these requirements are met, please contact your Gardener Administrator.&lt;/p>
&lt;/blockquote>
&lt;p>Prerequisites:&lt;/p>
&lt;ul>
&lt;li>The Garden Cluster should have the Gardener Discovery Server deployed and configured.
The easiest way to handle this is by using the &lt;a href="https://gardener.cloud/docs/gardener/concepts/operator/#gardener-discovery-server">gardener-operator&lt;/a>.&lt;/li>
&lt;li>The &lt;a href="https://gardener.cloud/docs/gardener/deployment/feature_gates/#list-of-feature-gates">&lt;code>ShootManagedIssuer&lt;/code>&lt;/a> feature gate should be enabled.&lt;/li>
&lt;/ul>
&lt;h3 id="enablement">Enablement&lt;/h3>
&lt;p>If the prerequisites are met then the feature can be enabled for a shoot cluster by annotating it with &lt;code>authentication.gardener.cloud/issuer=managed&lt;/code>. Mind that once enabled, this feature cannot be disabled. After the shoot is reconciled, you can retrieve the new shoot service account issuer value from the shoot&amp;rsquo;s status. A sample query that will retrieve the managed issuer looks like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl -n my-project get shoot my-shoot -o jsonpath=&lt;span style="color:#a31515">&amp;#39;{.status.advertisedAddresses[?(@.name==&amp;#34;service-account-issuer&amp;#34;)].url}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once retrieved, the shoot&amp;rsquo;s OIDC discovery documents can be explored by querying the &lt;code>/.well-known/openid-configuration&lt;/code> endpoint of the issuer.&lt;/p>
&lt;p>Mind that this annotation is incompatible with the &lt;code>.spec.kubernetes.kubeAPIServer.serviceAccountConfig.issuer&lt;/code> field, so if you want to enable it then the &lt;code>issuer&lt;/code> field should not be set in the shoot specification.&lt;/p>
&lt;blockquote>
&lt;p>[!CAUTION]
If you change from the default issuer to a managed issuer, all previously issued tokens will still be valid/accepted.
However, if you change from a custom &lt;code>issuer&lt;/code> &lt;code>A&lt;/code> to a managed issuer, then you have to add &lt;code>A&lt;/code> to the &lt;code>.spec.kubernetes.kubeAPIServer.serviceAccountConfig.acceptedIssuers&lt;/code> so that previously issued tokens are not invalidated.
Otherwise, the control plane components as well as system components and your workload pods might fail.
You can remove &lt;code>A&lt;/code> from the &lt;code>acceptedIssuers&lt;/code> when all currently active tokens have been issued solely by the managed issuer.
This can be ensured by using &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#service-account-token-volume-projection">projected token volumes&lt;/a> with a short validity, or by rolling out all pods.
Additionally, all &lt;a href="https://kubernetes.io/docs/concepts/configuration/secret/#service-account-token-secrets">&lt;code>ServiceAccount&lt;/code> token secrets&lt;/a> should be recreated.
Apart from this, you should wait for at least &lt;code>12h&lt;/code> to make sure the control plane and system components have received a new token from Gardener.&lt;/p>
&lt;/blockquote></description></item></channel></rss>