<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gardener – Gardener</title><link>https://gardener.cloud/docs/gardener/</link><description>Recent content on Gardener</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Thu, 19 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://gardener.cloud/docs/gardener/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Hibernate a Cluster</title><link>https://gardener.cloud/docs/gardener/shoot_hibernate/</link><pubDate>Thu, 19 Nov 2020 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/shoot_hibernate/</guid><description>
&lt;h1 id="hibernate-a-cluster">Hibernate a Cluster&lt;/h1>
&lt;p>Clusters are only needed 24 hours a day if they run productive workload. So whenever you do development in a cluster, or just use it for tests or demo purposes, you can save a lot of money if you scale-down your Kubernetes resources whenever you don&amp;rsquo;t need them. However, scaling them down manually can become time-consuming the more resources you have.&lt;/p>
&lt;p>Gardener offers a clever way to automatically scale-down all resources to zero: cluster hibernation. You can either hibernate a cluster by pushing a button, or by defining a hibernation schedule.&lt;/p>
&lt;blockquote>
&lt;p>To save costs, it&amp;rsquo;s recommended to define a hibernation schedule before the creation of a cluster. You can hibernate your cluster or wake up your cluster manually even if there&amp;rsquo;s a schedule for its hibernation.&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;a href="#hibernate-a-cluster">Hibernate a Cluster&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#what-is-hibernation">What Is Hibernation?&lt;/a>&lt;/li>
&lt;li>&lt;a href="#what-isnt-affected-by-the-hibernation">What Isn’t Affected by the Hibernation?&lt;/a>&lt;/li>
&lt;li>&lt;a href="#hibernate-your-cluster-manually">Hibernate Your Cluster Manually&lt;/a>&lt;/li>
&lt;li>&lt;a href="#wake-up-your-cluster-manually">Wake Up Your Cluster Manually&lt;/a>&lt;/li>
&lt;li>&lt;a href="#create-a-schedule-to-hibernate-your-cluster">Create a Schedule to Hibernate Your Cluster&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="what-is-hibernation">What Is Hibernation?&lt;/h2>
&lt;p>When a cluster is hibernated, Gardener scales down the worker nodes and the cluster&amp;rsquo;s control plane to free resources at the IaaS provider. This affects:&lt;/p>
&lt;ul>
&lt;li>Your workload, for example, pods, deployments, custom resources.&lt;/li>
&lt;li>The virtual machines running your workload.&lt;/li>
&lt;li>The resources of the control plane of your cluster.&lt;/li>
&lt;/ul>
&lt;h2 id="what-isnt-affected-by-the-hibernation">What Isn’t Affected by the Hibernation?&lt;/h2>
&lt;p>To scale up everything where it was before hibernation, Gardener doesn’t delete state-related information, that is, information stored in persistent volumes. The cluster state as persistent in &lt;code>etcd&lt;/code> is also preserved.&lt;/p>
&lt;h2 id="hibernate-your-cluster-manually">Hibernate Your Cluster Manually&lt;/h2>
&lt;p>The &lt;code>.spec.hibernation.enabled&lt;/code> field specifies whether the cluster needs to be hibernated or not. If the field is set to &lt;code>true&lt;/code>, the cluster&amp;rsquo;s desired state is to be hibernated. If it is set to &lt;code>false&lt;/code> or not specified at all, the cluster&amp;rsquo;s desired state is to be awakened.&lt;/p>
&lt;p>To hibernate your cluster, you can run the following &lt;code>kubectl&lt;/code> command:&lt;/p>
&lt;pre tabindex="0">&lt;code>$ kubectl patch shoot -n $NAMESPACE $SHOOT_NAME -p &amp;#39;{&amp;#34;spec&amp;#34;:{&amp;#34;hibernation&amp;#34;:{&amp;#34;enabled&amp;#34;: true}}}&amp;#39;
&lt;/code>&lt;/pre>&lt;h2 id="wake-up-your-cluster-manually">Wake Up Your Cluster Manually&lt;/h2>
&lt;p>To wake up your cluster, you can run the following &lt;code>kubectl&lt;/code> command:&lt;/p>
&lt;pre tabindex="0">&lt;code>$ kubectl patch shoot -n $NAMESPACE $SHOOT_NAME -p &amp;#39;{&amp;#34;spec&amp;#34;:{&amp;#34;hibernation&amp;#34;:{&amp;#34;enabled&amp;#34;: false}}}&amp;#39;
&lt;/code>&lt;/pre>&lt;h2 id="create-a-schedule-to-hibernate-your-cluster">Create a Schedule to Hibernate Your Cluster&lt;/h2>
&lt;p>You can specify a hibernation schedule to automatically hibernate/wake up a cluster.&lt;/p>
&lt;p>Let&amp;rsquo;s have a look into the following example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span> hibernation:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> enabled: &lt;span style="color:#00f">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> schedules:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - start: &lt;span style="color:#a31515">&amp;#34;0 20 * * *&amp;#34;&lt;/span> &lt;span style="color:#008000"># Start hibernation every day at 8PM&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> end: &lt;span style="color:#a31515">&amp;#34;0 6 * * *&amp;#34;&lt;/span> &lt;span style="color:#008000"># Stop hibernation every day at 6AM&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> location: &lt;span style="color:#a31515">&amp;#34;America/Los_Angeles&amp;#34;&lt;/span> &lt;span style="color:#008000"># Specify a location for the cron to run in&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The above section configures a hibernation schedule that hibernates the cluster every day at 08:00 PM and wakes it up at 06:00 AM. The &lt;code>start&lt;/code> or &lt;code>end&lt;/code> fields can be omitted, though at least one of them has to be specified. Hence, it is possible to configure a hibernation schedule that only hibernates or wakes up a cluster. The &lt;code>location&lt;/code> field is the time location used to evaluate the cron expressions.&lt;/p></description></item><item><title>Docs: Access to the Garden Cluster for Extensions</title><link>https://gardener.cloud/docs/gardener/extensions/garden-api-access/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/extensions/garden-api-access/</guid><description>
&lt;h1 id="access-to-the-garden-cluster-for-extensions">Access to the Garden Cluster for Extensions&lt;/h1>
&lt;p>Extensions that are installed on seed clusters via a &lt;code>ControllerInstallation&lt;/code> can simply read the kubeconfig file specified by the &lt;code>GARDEN_KUBECONFIG&lt;/code> environment variable to create a garden cluster client.
With this, they use a short-lived token (valid for &lt;code>12h&lt;/code>) associated with a dedicated &lt;code>ServiceAccount&lt;/code> in the &lt;code>seed-&amp;lt;seed-name&amp;gt;&lt;/code> namespace to securely access the garden cluster.
The used &lt;code>ServiceAccounts&lt;/code> are granted permissions in the garden cluster similar to gardenlet clients.&lt;/p>
&lt;h2 id="background">Background&lt;/h2>
&lt;p>Historically, &lt;code>gardenlet&lt;/code> has been the only component running in the seed cluster that has access to both the seed cluster and the garden cluster.
Accordingly, extensions running on the seed cluster didn&amp;rsquo;t have access to the garden cluster.&lt;/p>
&lt;p>Starting from Gardener &lt;a href="https://github.com/gardener/gardener/releases/v1.74.0">&lt;code>v1.74.0&lt;/code>&lt;/a>, there is a new mechanism for components running on seed clusters to get access to the garden cluster.
For this, &lt;code>gardenlet&lt;/code> runs an instance of the &lt;a href="https://gardener.cloud/docs/gardener/concepts/gardenlet/#tokenrequestor-controller">&lt;code>TokenRequestor&lt;/code>&lt;/a> for requesting tokens that can be used to communicate with the garden cluster.&lt;/p>
&lt;h2 id="manually-requesting-a-token-for-the-garden-cluster">Manually Requesting a Token for the Garden Cluster&lt;/h2>
&lt;p>Seed components that need to communicate with the garden cluster can request a token in the garden cluster by creating a garden access secret.
This secret has to be labelled with &lt;code>resources.gardener.cloud/purpose=token-requestor&lt;/code> and &lt;code>resources.gardener.cloud/class=garden&lt;/code>, e.g.:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Secret
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: garden-access-example
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: example
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> labels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resources.gardener.cloud/purpose: token-requestor
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resources.gardener.cloud/class: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> annotations:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> serviceaccount.resources.gardener.cloud/name: example
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>type: Opaque
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will instruct gardenlet to create a new &lt;code>ServiceAccount&lt;/code> named &lt;code>example&lt;/code> in its own &lt;code>seed-&amp;lt;seed-name&amp;gt;&lt;/code> namespace in the garden cluster, request a token for it, and populate the token in the secret&amp;rsquo;s data under the &lt;code>token&lt;/code> key.&lt;/p>
&lt;h2 id="using-gardenlet-managed-garden-access">Using Gardenlet-Managed Garden Access&lt;/h2>
&lt;p>By default, extensions are equipped with secure access to the garden cluster using a dedicated &lt;code>ServiceAccount&lt;/code> without requiring any additional action.
They can simply read the file specified by the &lt;code>GARDEN_KUBECONFIG&lt;/code> and construct a garden client with it.&lt;/p>
&lt;p>When installing a &lt;a href="https://gardener.cloud/docs/gardener/extensions/controllerregistration/">&lt;code>ControllerInstallation&lt;/code>&lt;/a>, gardenlet creates two secrets in the installation&amp;rsquo;s namespace: a generic garden kubeconfig (&lt;code>generic-garden-kubeconfig-&amp;lt;hash&amp;gt;&lt;/code>) and a garden access secret (&lt;code>garden-access-extension&lt;/code>).
Additionally, it injects &lt;code>volume&lt;/code>, &lt;code>volumeMounts&lt;/code>, and two environment variables into all (init) containers in all objects in the &lt;code>apps&lt;/code> and &lt;code>batch&lt;/code> API groups:&lt;/p>
&lt;ul>
&lt;li>&lt;code>GARDEN_KUBECONFIG&lt;/code>: points to the path where the generic garden kubeconfig is mounted.&lt;/li>
&lt;li>&lt;code>SEED_NAME&lt;/code>: set to the name of the &lt;code>Seed&lt;/code> where the extension is installed.
This is useful for restricting watches in the garden cluster to relevant objects.&lt;/li>
&lt;/ul>
&lt;p>If an object already contains the &lt;code>GARDEN_KUBECONFIG&lt;/code> environment variable, it is not overwritten and injection of &lt;code>volume&lt;/code> and &lt;code>volumeMounts&lt;/code> is skipped.&lt;/p>
&lt;p>For example, a &lt;code>Deployment&lt;/code> deployed via a &lt;code>ControllerInstallation&lt;/code> will be mutated as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: apps/v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Deployment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: gardener-extension-provider-local
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> annotations:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> reference.resources.gardener.cloud/secret-795f7ca6: garden-access-extension
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> reference.resources.gardener.cloud/secret-d5f5a834: generic-garden-kubeconfig-81fb3a88
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> template:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> annotations:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> reference.resources.gardener.cloud/secret-795f7ca6: garden-access-extension
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> reference.resources.gardener.cloud/secret-d5f5a834: generic-garden-kubeconfig-81fb3a88
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> containers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: gardener-extension-provider-local
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> env:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: GARDEN_KUBECONFIG
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> value: /var/run/secrets/gardener.cloud/garden/generic-kubeconfig/kubeconfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: SEED_NAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> value: local
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> volumeMounts:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - mountPath: /var/run/secrets/gardener.cloud/garden/generic-kubeconfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: garden-kubeconfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> readOnly: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> volumes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: garden-kubeconfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> projected:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> defaultMode: 420
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sources:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - secret:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> items:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - key: kubeconfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> path: kubeconfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: generic-garden-kubeconfig-81fb3a88
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> optional: &lt;span style="color:#00f">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - secret:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> items:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - key: token
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> path: token
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: garden-access-extension
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> optional: &lt;span style="color:#00f">false&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The generic garden kubeconfig will look like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>clusters:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- cluster:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> certificate-authority-data: LS0t...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server: https://garden.local.gardener.cloud:6443
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>contexts:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- context:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cluster: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user: extension
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>current-context: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>users:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- name: extension
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tokenFile: /var/run/secrets/gardener.cloud/garden/generic-kubeconfig/token
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="permissions-in-the-garden-cluster">Permissions in the Garden Cluster&lt;/h2>
&lt;p>Both the &lt;a href="https://gardener.cloud/docs/gardener/deployment/gardenlet_api_access/">&lt;code>SeedAuthorizer&lt;/code> and the &lt;code>SeedRestriction&lt;/code> plugin&lt;/a> handle extensions clients and generally grant the same permissions in the garden cluster to them as to gardenlet clients.
With this, extensions are restricted to work with objects in the garden cluster that are related to seed they are running one just like gardenlet.
Note that if the plugins are not enabled, extension clients are only granted read access to global resources like &lt;code>CloudProfiles&lt;/code> (this is granted to all authenticated users).
There are a few exceptions to the granted permissions as documented &lt;a href="https://gardener.cloud/docs/gardener/deployment/gardenlet_api_access/#rule-exceptions-for-extension-clients">here&lt;/a>.&lt;/p>
&lt;p>If an extension needs access to additional resources in the garden cluster (e.g., extension-specific custom resources), permissions need to be granted via the usual RBAC means.
Note that this is done outside of Gardener and might require an additional controller that manages RBAC for extension clients in the garden cluster.&lt;/p>
&lt;h2 id="renewing-all-garden-access-secrets">Renewing All Garden Access Secrets&lt;/h2>
&lt;p>Operators can trigger an automatic renewal of all garden access secrets in a given &lt;code>Seed&lt;/code> and their requested &lt;code>ServiceAccount&lt;/code> tokens, e.g., when rotating the garden cluster&amp;rsquo;s &lt;code>ServiceAccount&lt;/code> signing key.
For this, the &lt;code>Seed&lt;/code> has to be annotated with &lt;code>gardener.cloud/operation=renew-garden-access-secrets&lt;/code>.&lt;/p></description></item><item><title>Docs: Admission</title><link>https://gardener.cloud/docs/gardener/extensions/admission/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/extensions/admission/</guid><description>
&lt;h1 id="extension-admission">Extension Admission&lt;/h1>
&lt;p>The extensions are expected to validate their respective resources for their extension specific configurations, when the resources are newly created or updated. For example, &lt;a href="https://github.com/gardener/gardener/blob/master/extensions/README.md#infrastructure-provider">provider extensions&lt;/a> would validate &lt;code>spec.provider.infrastructureConfig&lt;/code> and &lt;code>spec.provider.controlPlaneConfig&lt;/code> in the &lt;code>Shoot&lt;/code> resource and &lt;code>spec.providerConfig&lt;/code> in the &lt;code>CloudProfile&lt;/code> resource, &lt;a href="https://github.com/gardener/gardener/blob/master/extensions/README.md#network-plugin">networking extensions&lt;/a> would validate &lt;code>spec.networking.providerConfig&lt;/code> in the &lt;code>Shoot&lt;/code> resource. As best practice, the validation should be performed only if there is a change in the &lt;code>spec&lt;/code> of the resource. Please find an exemplary implementation in the &lt;a href="https://github.com/gardener/gardener-extension-provider-aws/tree/master/pkg/admission/validator">gardener/gardener-extension-provider-aws&lt;/a> repository.&lt;/p>
&lt;p>When a resource is newly created or updated, Gardener adds an extension label for all the extension types referenced in the &lt;code>spec&lt;/code> of the resource. This label is of the form &lt;code>&amp;lt;extension-type&amp;gt;.extensions.gardener.cloud/&amp;lt;extension-name&amp;gt; : &amp;quot;true&amp;quot;&lt;/code>. For example, an extension label for a provider extension type &lt;code>aws&lt;/code> looks like &lt;code>provider.extensions.gardener.cloud/aws : &amp;quot;true&amp;quot;&lt;/code>. The extensions should add object selectors in their admission webhooks for these labels, to filter out the objects they are responsible for. At present, these labels are added to &lt;code>BackupEntry&lt;/code>s, &lt;code>BackupBucket&lt;/code>s, &lt;code>CloudProfile&lt;/code>s, &lt;code>Seed&lt;/code>s, &lt;code>SecretBinding&lt;/code>s and &lt;code>Shoot&lt;/code>s. Please see the &lt;a href="https://github.com/gardener/gardener/blob/master/pkg/apis/core/v1beta1/constants/types_constants.go">types_constants.go&lt;/a> file for the full list of extension labels.&lt;/p></description></item><item><title>Docs: Admission Controller</title><link>https://gardener.cloud/docs/gardener/concepts/admission-controller/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/concepts/admission-controller/</guid><description>
&lt;h1 id="gardener-admission-controller">Gardener Admission Controller&lt;/h1>
&lt;p>While the Gardener API server works with &lt;a href="https://gardener.cloud/docs/gardener/concepts/apiserver_admission_plugins/">admission plugins&lt;/a> to validate and mutate resources belonging to Gardener related API groups, e.g. &lt;code>core.gardener.cloud&lt;/code>, the same is needed for resources belonging to non-Gardener API groups as well, e.g. secrets in the &lt;code>core&lt;/code> API group.
Therefore, the Gardener Admission Controller runs a http(s) server with the following handlers which serve as validating/mutating endpoints for &lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/">admission webhooks&lt;/a>.
It is also used to serve http(s) handlers for authorization webhooks.&lt;/p>
&lt;h2 id="admission-webhook-handlers">Admission Webhook Handlers&lt;/h2>
&lt;p>This section describes the admission webhook handlers that are currently served.&lt;/p>
&lt;h3 id="admission-plugin-secret-validator">Admission Plugin Secret Validator&lt;/h3>
&lt;p>In &lt;code>Shoot&lt;/code>, &lt;code>AdmissionPlugin&lt;/code> can have reference to other files. This validation handler validates the referred admission plugin secret and ensures that the secret always contains the required data &lt;code>kubeconfig&lt;/code>.&lt;/p>
&lt;h3 id="kubeconfig-secret-validator">Kubeconfig Secret Validator&lt;/h3>
&lt;p>&lt;a href="https://github.com/kubernetes/kubectl/issues/697">Malicious Kubeconfigs&lt;/a> applied by end users may cause a leakage of sensitive data.
This handler checks if the incoming request contains a Kubernetes secret with a &lt;code>.data.kubeconfig&lt;/code> field and denies the request if the Kubeconfig structure violates Gardener&amp;rsquo;s security standards.&lt;/p>
&lt;h3 id="namespace-validator">Namespace Validator&lt;/h3>
&lt;p>Namespaces are the backing entities of Gardener projects in which shoot cluster objects reside.
This validation handler protects active namespaces against premature deletion requests.
Therefore, it denies deletion requests if a namespace still contains shoot clusters or if it belongs to a non-deleting Gardener project (without &lt;code>.metadata.deletionTimestamp&lt;/code>).&lt;/p>
&lt;h3 id="resource-size-validator">Resource Size Validator&lt;/h3>
&lt;p>Since users directly apply Kubernetes native objects to the Garden cluster, it also involves the risk of being vulnerable to DoS attacks because these resources are continuously watched and read by controllers.
One example is the creation of shoot resources with large annotation values (up to 256 kB per value), which can cause severe out-of-memory issues for the gardenlet component.
&lt;a href="https://github.com/kubernetes/autoscaler/tree/master/vertical-pod-autoscaler">Vertical autoscaling&lt;/a> can help to mitigate such situations, but we cannot expect to scale infinitely, and thus need means to block the attack itself.&lt;/p>
&lt;p>The Resource Size Validator checks arbitrary incoming admission requests against a configured maximum size for the resource&amp;rsquo;s group-version-kind combination. It denies the request if the object exceeds the quota.&lt;/p>
&lt;p>Example for Gardener Admission Controller configuration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>server:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resourceAdmissionConfiguration:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> limits:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - apiGroups: [&lt;span style="color:#a31515">&amp;#34;core.gardener.cloud&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiVersions: [&lt;span style="color:#a31515">&amp;#34;*&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resources: [&lt;span style="color:#a31515">&amp;#34;shoots&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> size: 100k
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - apiGroups: [&lt;span style="color:#a31515">&amp;#34;&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiVersions: [&lt;span style="color:#a31515">&amp;#34;v1&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resources: [&lt;span style="color:#a31515">&amp;#34;secrets&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> size: 100k
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> unrestrictedSubjects:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - kind: Group
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: gardener.cloud:system:seeds
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiGroup: rbac.authorization.k8s.io
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># - kind: User&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># name: admin&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># apiGroup: rbac.authorization.k8s.io&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># - kind: ServiceAccount&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># name: &amp;#34;*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># namespace: garden&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># apiGroup: &amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> operationMode: block &lt;span style="color:#008000">#log&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>With the configuration above, the Resource Size Validator denies requests for shoots with Gardener&amp;rsquo;s core API group which exceed a size of 100 kB. The same is done for Kubernetes secrets.&lt;/p>
&lt;p>As this feature is meant to protect the system from malicious requests sent by users, it is recommended to exclude trusted groups, users or service accounts from the size restriction via &lt;code>resourceAdmissionConfiguration.unrestrictedSubjects&lt;/code>.
For example, the backing user for the gardenlet should always be capable of changing the shoot resource instead of being blocked due to size restrictions.
This is because the gardenlet itself occasionally changes the shoot specification, labels or annotations, and might violate the quota if the existing resource is already close to the quota boundary.
Also, operators are supposed to be trusted users and subjecting them to a size limitation can inhibit important operational tasks.
Wildcard (&amp;quot;*&amp;quot;) in subject &lt;code>name&lt;/code> is supported.&lt;/p>
&lt;p>Size limitations depend on the individual Gardener setup and choosing the wrong values can affect the availability of your Gardener service.
&lt;code>resourceAdmissionConfiguration.operationMode&lt;/code> allows to control if a violating request is actually denied (default) or only logged.
It&amp;rsquo;s recommended to start with &lt;code>log&lt;/code>, check the logs for exceeding requests, adjust the limits if necessary and finally switch to &lt;code>block&lt;/code>.&lt;/p>
&lt;h3 id="seedrestriction">SeedRestriction&lt;/h3>
&lt;p>Please refer to &lt;a href="https://gardener.cloud/docs/gardener/deployment/gardenlet_api_access/">Scoped API Access for Gardenlets&lt;/a> for more information.&lt;/p>
&lt;h2 id="authorization-webhook-handlers">Authorization Webhook Handlers&lt;/h2>
&lt;p>This section describes the authorization webhook handlers that are currently served.&lt;/p>
&lt;h3 id="seedauthorization">SeedAuthorization&lt;/h3>
&lt;p>Please refer to &lt;a href="https://gardener.cloud/docs/gardener/deployment/gardenlet_api_access/">Scoped API Access for Gardenlets&lt;/a> for more information.&lt;/p></description></item><item><title>Docs: Alerting</title><link>https://gardener.cloud/docs/gardener/monitoring/alerting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/monitoring/alerting/</guid><description>
&lt;h1 id="alerting">Alerting&lt;/h1>
&lt;p>Gardener uses &lt;a href="https://prometheus.io/">Prometheus&lt;/a> to gather metrics from each component. A Prometheus is deployed in each shoot control plane (on the seed) which is responsible for gathering control plane and cluster metrics. Prometheus can be configured to fire alerts based on these metrics and send them to an &lt;a href="https://prometheus.io/docs/alerting/alertmanager/">Alertmanager&lt;/a>. The Alertmanager is responsible for sending the alerts to users and operators. This document describes how to setup alerting for:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#alerting-for-users">end-users/stakeholders/customers&lt;/a>&lt;/li>
&lt;li>&lt;a href="#alerting-for-operators">operators/administrators&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="alerting-for-users">Alerting for Users&lt;/h1>
&lt;p>To receive email alerts as a user, set the following values in the shoot spec:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> monitoring:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> alerting:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> emailReceivers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - john.doe@example.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>emailReceivers&lt;/code> is a list of emails that will receive alerts if something is wrong with the shoot cluster. A list of alerts for users can be found in the &lt;a href="https://gardener.cloud/docs/gardener/monitoring/user_alerts/">User Alerts&lt;/a> topic.&lt;/p>
&lt;h1 id="alerting-for-operators">Alerting for Operators&lt;/h1>
&lt;p>Currently, Gardener supports two options for alerting:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#email-alerting">Email Alerting&lt;/a>&lt;/li>
&lt;li>&lt;a href="#external-alertmanager">Sending Alerts to an External Alertmanager&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>A list of operator alerts can be found in the &lt;a href="https://gardener.cloud/docs/gardener/monitoring/operator_alerts/">Operator Alerts&lt;/a> topic.&lt;/p>
&lt;h2 id="email-alerting">Email Alerting&lt;/h2>
&lt;p>Gardener provides the option to deploy an Alertmanager into each seed. This Alertmanager is responsible for sending out alerts to operators for each shoot cluster in the seed. Only email alerts are supported by the Alertmanager managed by Gardener. This is configurable by setting the Gardener controller manager configuration values &lt;code>alerting&lt;/code>. See &lt;a href="https://gardener.cloud/docs/gardener/configuration/">Gardener Configuration and Usage&lt;/a> on how to configure the Gardener&amp;rsquo;s SMTP secret. If the values are set, a secret with the label &lt;code>gardener.cloud/role: alerting&lt;/code> will be created in the garden namespace of the garden cluster. This secret will be used by each Alertmanager in each seed.&lt;/p>
&lt;h2 id="external-alertmanager">External Alertmanager&lt;/h2>
&lt;p>The Alertmanager supports different kinds of &lt;a href="https://prometheus.io/docs/alerting/configuration/">alerting configurations&lt;/a>. The Alertmanager provided by Gardener only supports email alerts. If email is not sufficient, then alerts can be sent to an external Alertmanager. Prometheus will send alerts to a URL and then alerts will be handled by the external Alertmanager. This external Alertmanager is operated and configured by the operator (i.e. Gardener does not configure or deploy this Alertmanager). To configure sending alerts to an external Alertmanager, create a secret in the virtual garden cluster in the garden namespace with the label: &lt;code>gardener.cloud/role: alerting&lt;/code>. This secret needs to contain a URL to the external Alertmanager and information regarding authentication. Supported authentication types are:&lt;/p>
&lt;ul>
&lt;li>No Authentication (none)&lt;/li>
&lt;li>Basic Authentication (basic)&lt;/li>
&lt;li>Mutual TLS (certificate)&lt;/li>
&lt;/ul>
&lt;h3 id="remote-alertmanager-examples">Remote Alertmanager Examples&lt;/h3>
&lt;blockquote>
&lt;p>&lt;strong>Note:&lt;/strong> The &lt;code>url&lt;/code> value cannot be prepended with &lt;code>http&lt;/code> or &lt;code>https&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># No Authentication&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Secret
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> labels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> gardener.cloud/role: alerting
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: alerting-auth
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>data:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># No Authentication&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> auth_type: base64(none)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> url: base64(external.alertmanager.foo)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># Basic Auth&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> auth_type: base64(basic)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> url: base64(extenal.alertmanager.foo)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> username: base64(admin)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> password: base64(password)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># Mutual TLS&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> auth_type: base64(certificate)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> url: base64(external.alertmanager.foo)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ca.crt: base64(ca)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tls.crt: base64(certificate)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tls.key: base64(key)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> insecure_skip_verify: base64(false)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># Email Alerts (internal alertmanager)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> auth_type: base64(smtp)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> auth_identity: base64(internal.alertmanager.auth_identity)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> auth_password: base64(internal.alertmanager.auth_password)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> auth_username: base64(internal.alertmanager.auth_username)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> from: base64(internal.alertmanager.from)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> smarthost: base64(internal.alertmanager.smarthost)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> to: base64(internal.alertmanager.to)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>type: Opaque
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="configuring-your-external-alertmanager">Configuring Your External Alertmanager&lt;/h3>
&lt;p>Please refer to the &lt;a href="https://prometheus.io/docs/alerting/alertmanager/">Alertmanager&lt;/a> documentation on how to configure an Alertmanager.&lt;/p>
&lt;p>We recommend you use at least the following inhibition rules in your Alertmanager configuration to prevent excessive alerts:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>inhibit_rules:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># Apply inhibition if the alert name is the same.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- source_match:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> severity: critical
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> target_match:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> severity: warning
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> equal: [&lt;span style="color:#a31515">&amp;#39;alertname&amp;#39;&lt;/span>, &lt;span style="color:#a31515">&amp;#39;service&amp;#39;&lt;/span>, &lt;span style="color:#a31515">&amp;#39;cluster&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># Stop all alerts for type=shoot if there are VPN problems.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- source_match:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service: vpn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> target_match_re:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: shoot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> equal: [&lt;span style="color:#a31515">&amp;#39;type&amp;#39;&lt;/span>, &lt;span style="color:#a31515">&amp;#39;cluster&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># Stop warning and critical alerts if there is a blocker&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- source_match:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> severity: blocker
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> target_match_re:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> severity: ^(critical|warning)$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> equal: [&lt;span style="color:#a31515">&amp;#39;cluster&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># If the API server is down inhibit no worker nodes alert. No worker nodes depends on kube-state-metrics which depends on the API server.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- source_match:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service: kube-apiserver
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> target_match_re:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service: nodes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> equal: [&lt;span style="color:#a31515">&amp;#39;cluster&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># If API server is down inhibit kube-state-metrics alerts.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- source_match:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service: kube-apiserver
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> target_match_re:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> severity: info
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> equal: [&lt;span style="color:#a31515">&amp;#39;cluster&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># No Worker nodes depends on kube-state-metrics. Inhibit no worker nodes if kube-state-metrics is down.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- source_match:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service: kube-state-metrics-shoot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> target_match_re:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service: nodes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> equal: [&lt;span style="color:#a31515">&amp;#39;cluster&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Below is a graph visualizing the inhibition rules:&lt;/p>
&lt;p>&lt;img src="https://gardener.cloud/__resources/alertInhibitionGraph_ceaef0.png" alt="inhibitionGraph">&lt;/p></description></item><item><title>Docs: Api Reference</title><link>https://gardener.cloud/docs/gardener/api-reference/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/api-reference/readme/</guid><description>
&lt;h1 id="gardener-api-reference">Gardener API Reference&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/gardener/api-reference/authentication/">&lt;code>authentication.gardener.cloud&lt;/code> API Group&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/gardener/api-reference/core/">&lt;code>core.gardener.cloud&lt;/code> API Group&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/gardener/api-reference/extensions/">&lt;code>extensions.gardener.cloud&lt;/code> API Group&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/gardener/api-reference/operations/">&lt;code>operations.gardener.cloud&lt;/code> API Group&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/gardener/api-reference/resources/">&lt;code>resources.gardener.cloud&lt;/code> API Group&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/gardener/api-reference/seedmanagement/">&lt;code>seedmanagement.gardener.cloud&lt;/code> API Group&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/gardener/api-reference/settings/">&lt;code>settings.gardener.cloud&lt;/code> API Group&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docs: API Server</title><link>https://gardener.cloud/docs/gardener/concepts/apiserver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/concepts/apiserver/</guid><description>
&lt;h1 id="gardener-api-server">Gardener API Server&lt;/h1>
&lt;p>The Gardener API server is a Kubernetes-native extension based on its &lt;a href="https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/apiserver-aggregation/">aggregation layer&lt;/a>.
It is registered via an &lt;code>APIService&lt;/code> object and designed to run inside a Kubernetes cluster whose API it wants to extend.&lt;/p>
&lt;p>After registration, it exposes the following resources:&lt;/p>
&lt;h2 id="cloudprofiles">&lt;code>CloudProfile&lt;/code>s&lt;/h2>
&lt;p>&lt;code>CloudProfile&lt;/code>s are resources that describe a specific environment of an underlying infrastructure provider, e.g. AWS, Azure, etc.
Each shoot has to reference a &lt;code>CloudProfile&lt;/code> to declare the environment it should be created in.
In a &lt;code>CloudProfile&lt;/code>, the gardener operator specifies certain constraints like available machine types, regions, which Kubernetes versions they want to offer, etc.
End-users can read &lt;code>CloudProfile&lt;/code>s to see these values, but only operators can change the content or create/delete them.
When a shoot is created or updated, then an admission plugin checks that only allowed values are used via the referenced &lt;code>CloudProfile&lt;/code>.&lt;/p>
&lt;p>Additionally, a &lt;code>CloudProfile&lt;/code> may contain a &lt;code>providerConfig&lt;/code>, which is a special configuration dedicated for the infrastructure provider.
Gardener does not evaluate or understand this config, but extension controllers might need it for declaration of provider-specific constraints, or global settings.&lt;/p>
&lt;p>Please see &lt;a href="https://github.com/gardener/gardener/blob/master/example/30-cloudprofile.yaml">this&lt;/a> example manifest and consult the documentation of your provider extension controller to get information about its &lt;code>providerConfig&lt;/code>.&lt;/p>
&lt;h2 id="internalsecrets">&lt;code>InternalSecret&lt;/code>s&lt;/h2>
&lt;p>End-users can read and/or write &lt;code>Secret&lt;/code>s in their project namespaces in the garden cluster. This prevents Gardener components from storing such &amp;ldquo;Gardener-internal&amp;rdquo; secrets in the respective project namespace.
&lt;code>InternalSecret&lt;/code>s are resources that contain shoot or project-related secrets that are &amp;ldquo;Gardener-internal&amp;rdquo;, i.e., secrets used and managed by the system that end-users don&amp;rsquo;t have access to.
&lt;code>InternalSecret&lt;/code>s are defined like plain Kubernetes &lt;code>Secret&lt;/code>s, behave exactly like them, and can be used in the same manners. The only difference is, that the &lt;code>InternalSecret&lt;/code> resource is a dedicated API resource (exposed by gardener-apiserver).
This allows separating access to &amp;ldquo;normal&amp;rdquo; secrets and internal secrets by the usual RBAC means.&lt;/p>
&lt;p>Gardener uses an &lt;code>InternalSecret&lt;/code> per Shoot for syncing the client CA to the project namespace in the garden cluster (named &lt;code>&amp;lt;shoot-name&amp;gt;.ca-client&lt;/code>). The &lt;a href="https://gardener.cloud/docs/gardener/shoot_access/#shootsadminkubeconfig-subresource">&lt;code>shoots/adminkubeconfig&lt;/code> subresource&lt;/a> signs short-lived client certificates by retrieving the CA from the &lt;code>InternalSecret&lt;/code>.&lt;/p>
&lt;p>Operators should configure &lt;code>gardener-apiserver&lt;/code> to encrypt the &lt;code>internalsecrets.core.gardener.cloud&lt;/code> resource in etcd.&lt;/p>
&lt;p>Please see &lt;a href="https://github.com/gardener/gardener/blob/master/example/11-internal-secret.yaml">this&lt;/a> example manifest.&lt;/p>
&lt;h2 id="seeds">&lt;code>Seed&lt;/code>s&lt;/h2>
&lt;p>&lt;code>Seed&lt;/code>s are resources that represent seed clusters.
Gardener does not care about how a seed cluster got created - the only requirement is that it is of at least Kubernetes v1.24 and passes the Kubernetes conformance tests.
The Gardener operator has to either deploy the gardenlet into the cluster they want to use as seed (recommended, then the gardenlet will create the &lt;code>Seed&lt;/code> object itself after bootstrapping) or provide the kubeconfig to the cluster inside a secret (that is referenced by the &lt;code>Seed&lt;/code> resource) and create the &lt;code>Seed&lt;/code> resource themselves.&lt;/p>
&lt;p>Please see &lt;a href="https://github.com/gardener/gardener/blob/master/example/45-secret-seed-backup.yaml">this&lt;/a>, &lt;a href="https://github.com/gardener/gardener/blob/master/example/50-seed.yaml">this&lt;/a>, and optionally &lt;a href="https://github.com/gardener/gardener/blob/master/example/40-secret-seed.yaml">this&lt;/a> example manifests.&lt;/p>
&lt;h2 id="shoot-quotas">Shoot &lt;code>Quota&lt;/code>s&lt;/h2>
&lt;p>To allow end-users not having their dedicated infrastructure account to try out Gardener, the operator can register an account owned by them that they allow to be used for trial clusters.
Trial clusters can be put under quota so that they don&amp;rsquo;t consume too many resources (resulting in costs) and that one user cannot consume all resources on their own.
These clusters are automatically terminated after a specified time, but end-users may extend the lifetime manually if needed.&lt;/p>
&lt;p>Please see &lt;a href="https://github.com/gardener/gardener/blob/master/example/60-quota.yaml">this&lt;/a> example manifest.&lt;/p>
&lt;h2 id="projects">&lt;code>Project&lt;/code>s&lt;/h2>
&lt;p>The first thing before creating a shoot cluster is to create a &lt;code>Project&lt;/code>.
A project is used to group multiple shoot clusters together.
End-users can invite colleagues to the project to enable collaboration, and they can either make them &lt;code>admin&lt;/code> or &lt;code>viewer&lt;/code>.
After an end-user has created a project, they will get a dedicated namespace in the garden cluster for all their shoots.&lt;/p>
&lt;p>Please see &lt;a href="https://github.com/gardener/gardener/blob/master/example/05-project-dev.yaml">this&lt;/a> example manifest.&lt;/p>
&lt;h2 id="secretbindings">&lt;code>SecretBinding&lt;/code>s&lt;/h2>
&lt;p>Now that the end-user has a namespace the next step is registering their infrastructure provider account.&lt;/p>
&lt;p>Please see &lt;a href="https://github.com/gardener/gardener/blob/master/example/70-secret-provider.yaml">this&lt;/a> example manifest and consult the documentation of the extension controller for the respective infrastructure provider to get information about which keys are required in this secret.&lt;/p>
&lt;p>After the secret has been created, the end-user has to create a special &lt;code>SecretBinding&lt;/code> resource that binds this secret.
Later, when creating shoot clusters, they will reference such binding.&lt;/p>
&lt;p>Please see &lt;a href="https://github.com/gardener/gardener/blob/master/example/80-secretbinding.yaml">this&lt;/a> example manifest.&lt;/p>
&lt;h2 id="shoots">&lt;code>Shoot&lt;/code>s&lt;/h2>
&lt;p>Shoot cluster contain various settings that influence how end-user Kubernetes clusters will look like in the end.
As Gardener heavily relies on extension controllers for operating system configuration, networking, and infrastructure specifics, the end-user has the possibility (and responsibility) to provide these provider-specific configurations as well.
Such configurations are not evaluated by Gardener (because it doesn&amp;rsquo;t know/understand them), but they are only transported to the respective extension controller.&lt;/p>
&lt;p>⚠️ This means that any configuration issues/mistake on the end-user side that relates to a provider-specific flag or setting cannot be caught during the update request itself but only later during the reconciliation (unless a validator webhook has been registered in the garden cluster by an operator).&lt;/p>
&lt;p>Please see &lt;a href="https://github.com/gardener/gardener/blob/master/example/90-shoot.yaml">this&lt;/a> example manifest and consult the documentation of the provider extension controller to get information about its &lt;code>spec.provider.controlPlaneConfig&lt;/code>, &lt;code>.spec.provider.infrastructureConfig&lt;/code>, and &lt;code>.spec.provider.workers[].providerConfig&lt;/code>.&lt;/p>
&lt;h2 id="clusteropenidconnectpresets">&lt;code>(Cluster)OpenIDConnectPreset&lt;/code>s&lt;/h2>
&lt;p>Please see &lt;a href="https://gardener.cloud/docs/gardener/openidconnect-presets/">this&lt;/a> separate documentation file.&lt;/p>
&lt;h2 id="overview-data-model">Overview Data Model&lt;/h2>
&lt;p>&lt;img src="https://gardener.cloud/__resources/gardener-data-model-overview_c5b559.png" alt="Gardener Overview Data Model">&lt;/p></description></item><item><title>Docs: APIServer Admission Plugins</title><link>https://gardener.cloud/docs/gardener/concepts/apiserver_admission_plugins/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/concepts/apiserver_admission_plugins/</guid><description>
&lt;h1 id="admission-plugins">Admission Plugins&lt;/h1>
&lt;p>Similar to the kube-apiserver, the gardener-apiserver comes with a few in-tree managed admission plugins.
If you want to get an overview of the what and why of admission plugins then &lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/">this document&lt;/a> might be a good start.&lt;/p>
&lt;p>This document lists all existing admission plugins with a short explanation of what it is responsible for.&lt;/p>
&lt;h2 id="clusteropenidconnectpreset-openidconnectpreset">&lt;code>ClusterOpenIDConnectPreset&lt;/code>, &lt;code>OpenIDConnectPreset&lt;/code>&lt;/h2>
&lt;p>&lt;em>(both enabled by default)&lt;/em>&lt;/p>
&lt;p>These admission controllers react on &lt;code>CREATE&lt;/code> operations for &lt;code>Shoot&lt;/code>s.
If the &lt;code>Shoot&lt;/code> does not specify any OIDC configuration (&lt;code>.spec.kubernetes.kubeAPIServer.oidcConfig=nil&lt;/code>), then it tries to find a matching &lt;code>ClusterOpenIDConnectPreset&lt;/code> or &lt;code>OpenIDConnectPreset&lt;/code>, respectively.
If there are multiple matches, then the one with the highest weight &amp;ldquo;wins&amp;rdquo;.
In this case, the admission controller will default the OIDC configuration in the &lt;code>Shoot&lt;/code>.&lt;/p>
&lt;h2 id="controllerregistrationresources">&lt;code>ControllerRegistrationResources&lt;/code>&lt;/h2>
&lt;p>&lt;em>(enabled by default)&lt;/em>&lt;/p>
&lt;p>This admission controller reacts on &lt;code>CREATE&lt;/code> and &lt;code>UPDATE&lt;/code> operations for &lt;code>ControllerRegistration&lt;/code>s.
It validates that there exists only one &lt;code>ControllerRegistration&lt;/code> in the system that is primarily responsible for a given kind/type resource combination.
This prevents misconfiguration by the Gardener administrator/operator.&lt;/p>
&lt;h2 id="customverbauthorizer">&lt;code>CustomVerbAuthorizer&lt;/code>&lt;/h2>
&lt;p>&lt;em>(enabled by default)&lt;/em>&lt;/p>
&lt;p>This admission controller reacts on &lt;code>CREATE&lt;/code> and &lt;code>UPDATE&lt;/code> operations for &lt;code>Project&lt;/code>s.
It validates whether the user is bound to a RBAC role with the &lt;code>modify-spec-tolerations-whitelist&lt;/code> verb in case the user tries to change the &lt;code>.spec.tolerations.whitelist&lt;/code> field of the respective &lt;code>Project&lt;/code> resource.
Usually, regular project members are not bound to this custom verb, allowing the Gardener administrator to manage certain toleration whitelists on &lt;code>Project&lt;/code> basis.&lt;/p>
&lt;h2 id="deletionconfirmation">&lt;code>DeletionConfirmation&lt;/code>&lt;/h2>
&lt;p>&lt;em>(enabled by default)&lt;/em>&lt;/p>
&lt;p>This admission controller reacts on &lt;code>DELETE&lt;/code> operations for &lt;code>Project&lt;/code>s and &lt;code>Shoot&lt;/code>s and &lt;code>ShootState&lt;/code>s.
It validates that the respective resource is annotated with a deletion confirmation annotation, namely &lt;code>confirmation.gardener.cloud/deletion=true&lt;/code>.
Only if this annotation is present it allows the &lt;code>DELETE&lt;/code> operation to pass.
This prevents users from accidental/undesired deletions.&lt;/p>
&lt;h2 id="exposureclass">&lt;code>ExposureClass&lt;/code>&lt;/h2>
&lt;p>&lt;em>(enabled by default)&lt;/em>&lt;/p>
&lt;p>This admission controller reacts on &lt;code>Create&lt;/code> operations for &lt;code>Shoot&lt;/code>s.
It mutates &lt;code>Shoot&lt;/code> resources which have an &lt;code>ExposureClass&lt;/code> referenced by merging both their &lt;code>shootSelectors&lt;/code> and/or &lt;code>tolerations&lt;/code> into the &lt;code>Shoot&lt;/code> resource.&lt;/p>
&lt;h2 id="extensionvalidator">&lt;code>ExtensionValidator&lt;/code>&lt;/h2>
&lt;p>&lt;em>(enabled by default)&lt;/em>&lt;/p>
&lt;p>This admission controller reacts on &lt;code>CREATE&lt;/code> and &lt;code>UPDATE&lt;/code> operations for &lt;code>BackupEntry&lt;/code>s, &lt;code>BackupBucket&lt;/code>s, &lt;code>Seed&lt;/code>s, and &lt;code>Shoot&lt;/code>s.
For all the various extension types in the specifications of these objects, it validates whether there exists a &lt;code>ControllerRegistration&lt;/code> in the system that is primarily responsible for the stated extension type(s).
This prevents misconfigurations that would otherwise allow users to create such resources with extension types that don&amp;rsquo;t exist in the cluster, effectively leading to failing reconciliation loops.&lt;/p>
&lt;h2 id="extensionlabels">&lt;code>ExtensionLabels&lt;/code>&lt;/h2>
&lt;p>&lt;em>(enabled by default)&lt;/em>&lt;/p>
&lt;p>This admission controller reacts on &lt;code>CREATE&lt;/code> and &lt;code>UPDATE&lt;/code> operations for &lt;code>BackupBucket&lt;/code>s, &lt;code>BackupEntry&lt;/code>s, &lt;code>CloudProfile&lt;/code>s, &lt;code>Seed&lt;/code>s, &lt;code>SecretBinding&lt;/code>s and &lt;code>Shoot&lt;/code>s. For all the various extension types in the specifications of these objects, it adds a corresponding label in the resource. This would allow extension admission webhooks to filter out the resources they are responsible for and ignore all others. This label is of the form &lt;code>&amp;lt;extension-type&amp;gt;.extensions.gardener.cloud/&amp;lt;extension-name&amp;gt; : &amp;quot;true&amp;quot;&lt;/code>. For example, an extension label for provider extension type &lt;code>aws&lt;/code>, looks like &lt;code>provider.extensions.gardener.cloud/aws : &amp;quot;true&amp;quot;&lt;/code>.&lt;/p>
&lt;h2 id="projectvalidator">&lt;code>ProjectValidator&lt;/code>&lt;/h2>
&lt;p>&lt;em>(enabled by default)&lt;/em>&lt;/p>
&lt;p>This admission controller reacts on &lt;code>CREATE&lt;/code> operations for &lt;code>Project&lt;/code>s.
It prevents creating &lt;code>Project&lt;/code>s with a non-empty &lt;code>.spec.namespace&lt;/code> if the value in &lt;code>.spec.namespace&lt;/code> does not start with &lt;code>garden-&lt;/code>.&lt;/p>
&lt;p>⚠️ This admission plugin will be removed in a future release and its business logic will be incorporated into the static validation of the &lt;code>gardener-apiserver&lt;/code>.&lt;/p>
&lt;h2 id="resourcequota">&lt;code>ResourceQuota&lt;/code>&lt;/h2>
&lt;p>&lt;em>(enabled by default)&lt;/em>&lt;/p>
&lt;p>This admission controller enables &lt;a href="https://kubernetes.io/docs/concepts/policy/resource-quotas/#object-count-quota">object count ResourceQuotas&lt;/a> for Gardener resources, e.g. &lt;code>Shoots&lt;/code>, &lt;code>SecretBindings&lt;/code>, &lt;code>Projects&lt;/code>, etc.&lt;/p>
&lt;blockquote>
&lt;p>⚠️ In addition to this admission plugin, the &lt;a href="https://github.com/kubernetes/kubernetes/blob/release-1.2/docs/design/admission_control_resource_quota.md#resource-quota-controller">ResourceQuota controller&lt;/a> must be enabled for the Kube-Controller-Manager of your Garden cluster.&lt;/p>
&lt;/blockquote>
&lt;h2 id="resourcereferencemanager">&lt;code>ResourceReferenceManager&lt;/code>&lt;/h2>
&lt;p>&lt;em>(enabled by default)&lt;/em>&lt;/p>
&lt;p>This admission controller reacts on &lt;code>CREATE&lt;/code> and &lt;code>UPDATE&lt;/code> operations for &lt;code>CloudProfile&lt;/code>s, &lt;code>Project&lt;/code>s, &lt;code>SecretBinding&lt;/code>s, &lt;code>Seed&lt;/code>s, and &lt;code>Shoot&lt;/code>s.
Generally, it checks whether referred resources stated in the specifications of these objects exist in the system (e.g., if a referenced &lt;code>Secret&lt;/code> exists).
However, it also has some special behaviours for certain resources:&lt;/p>
&lt;ul>
&lt;li>&lt;code>CloudProfile&lt;/code>s: It rejects removing Kubernetes or machine image versions if there is at least one &lt;code>Shoot&lt;/code> that refers to them.&lt;/li>
&lt;li>&lt;code>Project&lt;/code>s: It sets the &lt;code>.spec.createdBy&lt;/code> field for newly created &lt;code>Project&lt;/code> resources, and defaults the &lt;code>.spec.owner&lt;/code> field in case it is empty (to the same value of &lt;code>.spec.createdBy&lt;/code>).&lt;/li>
&lt;li>&lt;code>Shoot&lt;/code>s: It sets the &lt;code>gardener.cloud/created-by=&amp;lt;username&amp;gt;&lt;/code> annotation for newly created &lt;code>Shoot&lt;/code> resources.&lt;/li>
&lt;/ul>
&lt;h2 id="seedvalidator">&lt;code>SeedValidator&lt;/code>&lt;/h2>
&lt;p>&lt;em>(enabled by default)&lt;/em>&lt;/p>
&lt;p>This admission controller reacts on &lt;code>DELETE&lt;/code> operations for &lt;code>Seed&lt;/code>s.
Rejects the deletion if &lt;code>Shoot&lt;/code>(s) reference the seed cluster.&lt;/p>
&lt;h2 id="shootdns">&lt;code>ShootDNS&lt;/code>&lt;/h2>
&lt;p>&lt;em>(enabled by default)&lt;/em>&lt;/p>
&lt;p>This admission controller reacts on &lt;code>CREATE&lt;/code> and &lt;code>UPDATE&lt;/code> operations for &lt;code>Shoot&lt;/code>s.
It tries to assign a default domain to the &lt;code>Shoot&lt;/code>.
It also validates the DNS configuration (&lt;code>.spec.dns&lt;/code>) for shoots.&lt;/p>
&lt;h2 id="shootnodelocaldnsenabledbydefault">&lt;code>ShootNodeLocalDNSEnabledByDefault&lt;/code>&lt;/h2>
&lt;p>&lt;em>(disabled by default)&lt;/em>&lt;/p>
&lt;p>This admission controller reacts on &lt;code>CREATE&lt;/code> operations for &lt;code>Shoot&lt;/code>s.
If enabled, it will enable node local dns within the shoot cluster (for more information, see &lt;a href="https://gardener.cloud/docs/gardener/node-local-dns/">NodeLocalDNS Configuration&lt;/a>) by setting &lt;code>spec.systemComponents.nodeLocalDNS.enabled=true&lt;/code> for newly created Shoots.
Already existing Shoots and new Shoots that explicitly disable node local dns (&lt;code>spec.systemComponents.nodeLocalDNS.enabled=false&lt;/code>)
will not be affected by this admission plugin.&lt;/p>
&lt;h2 id="shootquotavalidator">&lt;code>ShootQuotaValidator&lt;/code>&lt;/h2>
&lt;p>&lt;em>(enabled by default)&lt;/em>&lt;/p>
&lt;p>This admission controller reacts on &lt;code>CREATE&lt;/code> and &lt;code>UPDATE&lt;/code> operations for &lt;code>Shoot&lt;/code>s.
It validates the resource consumption declared in the specification against applicable &lt;code>Quota&lt;/code> resources.
Only if the applicable &lt;code>Quota&lt;/code> resources admit the configured resources in the &lt;code>Shoot&lt;/code> then it allows the request.
Applicable &lt;code>Quota&lt;/code>s are referred in the &lt;code>SecretBinding&lt;/code> that is used by the &lt;code>Shoot&lt;/code>.&lt;/p>
&lt;h2 id="shootvpaenabledbydefault">&lt;code>ShootVPAEnabledByDefault&lt;/code>&lt;/h2>
&lt;p>&lt;em>(disabled by default)&lt;/em>&lt;/p>
&lt;p>This admission controller reacts on &lt;code>CREATE&lt;/code> operations for &lt;code>Shoot&lt;/code>s.
If enabled, it will enable the managed &lt;code>VerticalPodAutoscaler&lt;/code> components (for more information, see &lt;a href="https://gardener.cloud/docs/gardener/shoot_autoscaling/#vertical-pod-auto-scaling">Vertical Pod Auto-Scaling&lt;/a>)
by setting &lt;code>spec.kubernetes.verticalPodAutoscaler.enabled=true&lt;/code> for newly created Shoots.
Already existing Shoots and new Shoots that explicitly disable VPA (&lt;code>spec.kubernetes.verticalPodAutoscaler.enabled=false&lt;/code>)
will not be affected by this admission plugin.&lt;/p>
&lt;h2 id="shoottolerationrestriction">&lt;code>ShootTolerationRestriction&lt;/code>&lt;/h2>
&lt;p>&lt;em>(enabled by default)&lt;/em>&lt;/p>
&lt;p>This admission controller reacts on &lt;code>CREATE&lt;/code> and &lt;code>UPDATE&lt;/code> operations for &lt;code>Shoot&lt;/code>s.
It validates the &lt;code>.spec.tolerations&lt;/code> used in &lt;code>Shoot&lt;/code>s against the whitelist of its &lt;code>Project&lt;/code>, or against the whitelist configured in the admission controller&amp;rsquo;s configuration, respectively.
Additionally, it defaults the &lt;code>.spec.tolerations&lt;/code> in &lt;code>Shoot&lt;/code>s with those configured in its &lt;code>Project&lt;/code>, and those configured in the admission controller&amp;rsquo;s configuration, respectively.&lt;/p>
&lt;h2 id="shootvalidator">&lt;code>ShootValidator&lt;/code>&lt;/h2>
&lt;p>&lt;em>(enabled by default)&lt;/em>&lt;/p>
&lt;p>This admission controller reacts on &lt;code>CREATE&lt;/code>, &lt;code>UPDATE&lt;/code> and &lt;code>DELETE&lt;/code> operations for &lt;code>Shoot&lt;/code>s.
It validates certain configurations in the specification against the referred &lt;code>CloudProfile&lt;/code> (e.g., machine images, machine types, used Kubernetes version, &amp;hellip;).
Generally, it performs validations that cannot be handled by the static API validation due to their dynamic nature (e.g., when something needs to be checked against referred resources).
Additionally, it takes over certain defaulting tasks (e.g., default machine image for worker pools, default Kubernetes version).&lt;/p>
&lt;h2 id="shootmanagedseed">&lt;code>ShootManagedSeed&lt;/code>&lt;/h2>
&lt;p>&lt;em>(enabled by default)&lt;/em>&lt;/p>
&lt;p>This admission controller reacts on &lt;code>UPDATE&lt;/code> and &lt;code>DELETE&lt;/code> operations for &lt;code>Shoot&lt;/code>s.
It validates certain configuration values in the specification that are specific to &lt;code>ManagedSeed&lt;/code>s (e.g. the nginx-addon of the Shoot has to be disabled, the Shoot VPA has to be enabled).
It rejects the deletion if the &lt;code>Shoot&lt;/code> is referred to by a &lt;code>ManagedSeed&lt;/code>.&lt;/p>
&lt;h2 id="managedseedvalidator">&lt;code>ManagedSeedValidator&lt;/code>&lt;/h2>
&lt;p>&lt;em>(enabled by default)&lt;/em>&lt;/p>
&lt;p>This admission controller reacts on &lt;code>CREATE&lt;/code> and &lt;code>UPDATE&lt;/code> operations for &lt;code>ManagedSeeds&lt;/code>s.
It validates certain configuration values in the specification against the referred &lt;code>Shoot&lt;/code>, for example Seed provider, network ranges, DNS domain, etc.
Similar to &lt;code>ShootValidator&lt;/code>, it performs validations that cannot be handled by the static API validation due to their dynamic nature.
Additionally, it performs certain defaulting tasks, making sure that configuration values that are not specified are defaulted to the values of the referred &lt;code>Shoot&lt;/code>, for example Seed provider, network ranges, DNS domain, etc.&lt;/p>
&lt;h2 id="managedseedshoot">&lt;code>ManagedSeedShoot&lt;/code>&lt;/h2>
&lt;p>&lt;em>(enabled by default)&lt;/em>&lt;/p>
&lt;p>This admission controller reacts on &lt;code>DELETE&lt;/code> operations for &lt;code>ManagedSeed&lt;/code>s.
It rejects the deletion if there are &lt;code>Shoot&lt;/code>s that are scheduled onto the &lt;code>Seed&lt;/code> that is registered by the &lt;code>ManagedSeed&lt;/code>.&lt;/p>
&lt;h2 id="shootdnsrewriting">&lt;code>ShootDNSRewriting&lt;/code>&lt;/h2>
&lt;p>&lt;em>(disabled by default)&lt;/em>&lt;/p>
&lt;p>This admission controller reacts on &lt;code>CREATE&lt;/code> operations for &lt;code>Shoot&lt;/code>s.
If enabled, it adds a set of common suffixes configured in its admission plugin configuration to the &lt;code>Shoot&lt;/code> (&lt;code>spec.systemComponents.coreDNS.rewriting.commonSuffixes&lt;/code>) (for more information, see &lt;a href="https://gardener.cloud/docs/gardener/dns-search-path-optimization/">DNS Search Path Optimization&lt;/a>).
Already existing &lt;code>Shoot&lt;/code>s will not be affected by this admission plugin.&lt;/p></description></item><item><title>Docs: Architecture</title><link>https://gardener.cloud/docs/gardener/concepts/architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/concepts/architecture/</guid><description>
&lt;h2 id="official-definition---what-is-kubernetes">Official Definition - What is Kubernetes?&lt;/h2>
&lt;blockquote>
&lt;p>&amp;ldquo;Kubernetes is an open-source system for automating deployment, scaling, and management of containerized applications.&amp;rdquo;&lt;/p>
&lt;/blockquote>
&lt;h2 id="introduction---basic-principle">Introduction - Basic Principle&lt;/h2>
&lt;p>The foundation of the Gardener (providing &lt;strong>Kubernetes Clusters as a Service&lt;/strong>) is Kubernetes itself, because Kubernetes is the go-to solution to manage software in the Cloud, even when it&amp;rsquo;s Kubernetes itself (see also OpenStack which is provisioned more and more on top of Kubernetes as well).&lt;/p>
&lt;p>While self-hosting, meaning to run Kubernetes components inside Kubernetes, is a popular topic in the community, we apply a special pattern catering to the needs of our cloud platform to provision hundreds or even thousands of clusters. We take a so-called &amp;ldquo;seed&amp;rdquo; cluster and seed the control plane (such as the API server, scheduler, controllers, etcd persistence and others) of an end-user cluster, which we call &amp;ldquo;shoot&amp;rdquo; cluster, as pods into the &amp;ldquo;seed&amp;rdquo; cluster. That means that one &amp;ldquo;seed&amp;rdquo; cluster, of which we will have one per IaaS and region, hosts the control planes of multiple &amp;ldquo;shoot&amp;rdquo; clusters. That allows us to avoid dedicated hardware/virtual machines for the &amp;ldquo;shoot&amp;rdquo; cluster control planes. We simply put the control plane into pods/containers and since the &amp;ldquo;seed&amp;rdquo; cluster watches them, they can be deployed with a replica count of 1 and only need to be scaled out when the control plane gets under pressure, but no longer for HA reasons. At the same time, the deployments get simpler (standard Kubernetes deployment) and easier to update (standard Kubernetes rolling update). The actual &amp;ldquo;shoot&amp;rdquo; cluster consists only of the worker nodes (no control plane) and therefore the users may get full administrative access to their clusters.&lt;/p>
&lt;h2 id="setting-the-scene---components-and-procedure">Setting The Scene - Components and Procedure&lt;/h2>
&lt;p>We provide a central operator UI, which we call the &amp;ldquo;Gardener Dashboard&amp;rdquo;. It talks to a dedicated cluster, which we call the &amp;ldquo;Garden&amp;rdquo; cluster, and uses custom resources managed by an &lt;a href="https://kubernetes.io/docs/concepts/api-extension/custom-resources/#api-server-aggregation">aggregated API server&lt;/a> (one of the general extension concepts of Kubernetes) to represent &amp;ldquo;shoot&amp;rdquo; clusters. In this &amp;ldquo;Garden&amp;rdquo; cluster runs the &amp;ldquo;Gardener&amp;rdquo;, which is basically a Kubernetes controller that watches the custom resources and acts upon them, i.e. creates, updates/modifies, or deletes &amp;ldquo;shoot&amp;rdquo; clusters. The creation follows basically these steps:&lt;/p>
&lt;ul>
&lt;li>Create a namespace in the &amp;ldquo;seed&amp;rdquo; cluster for the &amp;ldquo;shoot&amp;rdquo; cluster, which will host the &amp;ldquo;shoot&amp;rdquo; cluster control plane.&lt;/li>
&lt;li>Generate secrets and credentials, which the worker nodes will need to talk to the control plane.&lt;/li>
&lt;li>Create the infrastructure (using &lt;a href="https://www.terraform.io/">Terraform&lt;/a>), which basically consists out of the network setup.&lt;/li>
&lt;li>Deploy the &amp;ldquo;shoot&amp;rdquo; cluster control plane into the &amp;ldquo;shoot&amp;rdquo; namespace in the &amp;ldquo;seed&amp;rdquo; cluster, containing the &amp;ldquo;machine-controller-manager&amp;rdquo; pod.&lt;/li>
&lt;li>Create machine CRDs in the &amp;ldquo;seed&amp;rdquo; cluster, describing the configuration and the number of worker machines for the &amp;ldquo;shoot&amp;rdquo; (the machine-controller-manager watches the CRDs and creates virtual machines out of it).&lt;/li>
&lt;li>Wait for the &amp;ldquo;shoot&amp;rdquo; cluster API server to become responsive (pods will be scheduled, persistent volumes and load balancers are created by Kubernetes via the respective cloud provider).&lt;/li>
&lt;li>Finally, we deploy &lt;code>kube-system&lt;/code> daemons like &lt;code>kube-proxy&lt;/code> and further add-ons like the &lt;code>dashboard&lt;/code> into the &amp;ldquo;shoot&amp;rdquo; cluster and the cluster becomes active.&lt;/li>
&lt;/ul>
&lt;h2 id="overview-architecture-diagram">Overview Architecture Diagram&lt;/h2>
&lt;p>&lt;img src="https://gardener.cloud/__resources/gardener-architecture-overview_2bd462.png" alt="Gardener Overview Architecture Diagram">&lt;/p>
&lt;h2 id="detailed-architecture-diagram">Detailed Architecture Diagram&lt;/h2>
&lt;p>&lt;img src="https://gardener.cloud/__resources/gardener-architecture-detailed_945c90.png" alt="Gardener Detailed Architecture Diagram">&lt;/p>
&lt;p>Note: The &lt;code>kubelet&lt;/code>, as well as the pods inside the &amp;ldquo;shoot&amp;rdquo; cluster, talks through the front-door (load balancer IP; public Internet) to its &amp;ldquo;shoot&amp;rdquo; cluster API server running in the &amp;ldquo;seed&amp;rdquo; cluster. The reverse communication from the API server to the pod, service, and node networks happens through a VPN connection that we deploy into the &amp;ldquo;seed&amp;rdquo; and &amp;ldquo;shoot&amp;rdquo; clusters.&lt;/p></description></item><item><title>Docs: Authentication</title><link>https://gardener.cloud/docs/gardener/api-reference/authentication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/api-reference/authentication/</guid><description>
&lt;p>Packages:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="#authentication.gardener.cloud%2fv1alpha1">authentication.gardener.cloud/v1alpha1&lt;/a>
&lt;/li>
&lt;/ul>
&lt;h2 id="authentication.gardener.cloud/v1alpha1">authentication.gardener.cloud/v1alpha1&lt;/h2>
&lt;p>
&lt;p>Package v1alpha1 is a version of the API.&lt;/p>
&lt;/p>
Resource Types:
&lt;ul>&lt;li>
&lt;a href="#authentication.gardener.cloud/v1alpha1.AdminKubeconfigRequest">AdminKubeconfigRequest&lt;/a>
&lt;/li>&lt;/ul>
&lt;h3 id="authentication.gardener.cloud/v1alpha1.AdminKubeconfigRequest">AdminKubeconfigRequest
&lt;/h3>
&lt;p>
&lt;p>AdminKubeconfigRequest can be used to request a kubeconfig with admin credentials
for a Shoot cluster.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>apiVersion&lt;/code>&lt;/br>
string&lt;/td>
&lt;td>
&lt;code>
authentication.gardener.cloud/v1alpha1
&lt;/code>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
string
&lt;/td>
&lt;td>&lt;code>AdminKubeconfigRequest&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Standard object metadata.&lt;/p>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>spec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#authentication.gardener.cloud/v1alpha1.AdminKubeconfigRequestSpec">
AdminKubeconfigRequestSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Spec is the specification of the AdminKubeconfigRequest.&lt;/p>
&lt;br/>
&lt;br/>
&lt;table>
&lt;tr>
&lt;td>
&lt;code>expirationSeconds&lt;/code>&lt;/br>
&lt;em>
int64
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ExpirationSeconds is the requested validity duration of the credential. The
credential issuer may return a credential with a different validity duration so a
client needs to check the &amp;lsquo;expirationTimestamp&amp;rsquo; field in a response.
Defaults to 1 hour.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>status&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#authentication.gardener.cloud/v1alpha1.AdminKubeconfigRequestStatus">
AdminKubeconfigRequestStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Status is the status of the AdminKubeconfigRequest.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="authentication.gardener.cloud/v1alpha1.AdminKubeconfigRequestSpec">AdminKubeconfigRequestSpec
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#authentication.gardener.cloud/v1alpha1.AdminKubeconfigRequest">AdminKubeconfigRequest&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>AdminKubeconfigRequestSpec contains the expiration time of the kubeconfig.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>expirationSeconds&lt;/code>&lt;/br>
&lt;em>
int64
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ExpirationSeconds is the requested validity duration of the credential. The
credential issuer may return a credential with a different validity duration so a
client needs to check the &amp;lsquo;expirationTimestamp&amp;rsquo; field in a response.
Defaults to 1 hour.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="authentication.gardener.cloud/v1alpha1.AdminKubeconfigRequestStatus">AdminKubeconfigRequestStatus
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#authentication.gardener.cloud/v1alpha1.AdminKubeconfigRequest">AdminKubeconfigRequest&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>AdminKubeconfigRequestStatus is the status of the AdminKubeconfigRequest containing
the kubeconfig and expiration of the credential.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>kubeconfig&lt;/code>&lt;/br>
&lt;em>
[]byte
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Kubeconfig contains the kubeconfig with cluster-admin privileges for the shoot cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>expirationTimestamp&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>ExpirationTimestamp is the expiration timestamp of the returned credential.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr/>
&lt;p>&lt;em>
Generated with &lt;a href="https://github.com/ahmetb/gen-crd-api-reference-docs">gen-crd-api-reference-docs&lt;/a>
&lt;/em>&lt;/p></description></item><item><title>Docs: Authentication Gardener Control Plane</title><link>https://gardener.cloud/docs/gardener/deployment/authentication_gardener_control_plane/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/deployment/authentication_gardener_control_plane/</guid><description>
&lt;h1 id="authentication-of-gardener-control-plane-components-against-the-garden-cluster">Authentication of Gardener Control Plane Components Against the Garden Cluster&lt;/h1>
&lt;blockquote>
&lt;p>&lt;strong>Note:&lt;/strong> This document refers to Gardener&amp;rsquo;s API server, admission controller, controller manager and scheduler components. Any reference to the term &lt;strong>Gardener control plane component&lt;/strong> can be replaced with any of the mentioned above.&lt;/p>
&lt;/blockquote>
&lt;p>There are several authentication possibilities depending on whether or not &lt;a href="https://github.com/gardener/garden-setup#concept-the-virtual-cluster">the concept of Virtual Garden&lt;/a> is used.&lt;/p>
&lt;h2 id="virtual-garden-is-not-used-ie-the-runtime-garden-cluster-is-also-the-target-garden-cluster">Virtual Garden is not used, i.e., the &lt;code>runtime&lt;/code> Garden cluster is also the &lt;code>target&lt;/code> Garden cluster.&lt;/h2>
&lt;h3 id="automounted-service-account-token">Automounted Service Account Token&lt;/h3>
&lt;p>The easiest way to deploy a &lt;strong>Gardener control plane component&lt;/strong> is to not provide a &lt;code>kubeconfig&lt;/code> at all. This way in-cluster configuration and an automounted service account token will be used. The drawback of this approach is that the automounted token will not be automatically rotated.&lt;/p>
&lt;h3 id="service-account-token-volume-projection">Service Account Token Volume Projection&lt;/h3>
&lt;p>Another solution is to use &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#service-account-token-volume-projection">Service Account Token Volume Projection&lt;/a> combined with a &lt;code>kubeconfig&lt;/code> referencing a token file (see the example below).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>clusters:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- cluster:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> certificate-authority-data: &amp;lt;CA-DATA&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server: https://default.kubernetes.svc.cluster.local
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>contexts:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- context:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cluster: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>current-context: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>users:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- name: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tokenFile: /var/run/secrets/projected/serviceaccount/token
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will allow for automatic rotation of the service account token by the &lt;code>kubelet&lt;/code>. The configuration can be achieved by setting both &lt;code>.Values.global.&amp;lt;GardenerControlPlaneComponent&amp;gt;.serviceAccountTokenVolumeProjection.enabled: true&lt;/code> and &lt;code>.Values.global.&amp;lt;GardenerControlPlaneComponent&amp;gt;.kubeconfig&lt;/code> in the respective chart&amp;rsquo;s &lt;code>values.yaml&lt;/code> file.&lt;/p>
&lt;h2 id="virtual-garden-is-used-ie-the-runtime-garden-cluster-is-different-from-the-target-garden-cluster">Virtual Garden is used, i.e., the &lt;code>runtime&lt;/code> Garden cluster is different from the &lt;code>target&lt;/code> Garden cluster.&lt;/h2>
&lt;h3 id="service-account">Service Account&lt;/h3>
&lt;p>The easiest way to setup the authentication is to create a service account and the respective roles will be bound to this service account in the &lt;code>target&lt;/code> cluster. Then use the generated service account token and craft a &lt;code>kubeconfig&lt;/code>, which will be used by the workload in the &lt;code>runtime&lt;/code> cluster. This approach does not provide a solution for the rotation of the service account token. However, this setup can be achieved by setting &lt;code>.Values.global.deployment.virtualGarden.enabled: true&lt;/code> and following these steps:&lt;/p>
&lt;ol>
&lt;li>Deploy the &lt;code>application&lt;/code> part of the charts in the &lt;code>target&lt;/code> cluster.&lt;/li>
&lt;li>Get the service account token and craft the &lt;code>kubeconfig&lt;/code>.&lt;/li>
&lt;li>Set the crafted &lt;code>kubeconfig&lt;/code> and deploy the &lt;code>runtime&lt;/code> part of the charts in the &lt;code>runtime&lt;/code> cluster.&lt;/li>
&lt;/ol>
&lt;h3 id="client-certificate">Client Certificate&lt;/h3>
&lt;p>Another solution is to bind the roles in the &lt;code>target&lt;/code> cluster to a &lt;code>User&lt;/code> subject instead of a service account and use a client certificate for authentication. This approach does not provide a solution for the client certificate rotation. However, this setup can be achieved by setting both &lt;code>.Values.global.deployment.virtualGarden.enabled: true&lt;/code> and &lt;code>.Values.global.deployment.virtualGarden.&amp;lt;GardenerControlPlaneComponent&amp;gt;.user.name&lt;/code>, then following these steps:&lt;/p>
&lt;ol>
&lt;li>Generate a client certificate for the &lt;code>target&lt;/code> cluster for the respective user.&lt;/li>
&lt;li>Deploy the &lt;code>application&lt;/code> part of the charts in the &lt;code>target&lt;/code> cluster.&lt;/li>
&lt;li>Craft a &lt;code>kubeconfig&lt;/code> using the already generated client certificate.&lt;/li>
&lt;li>Set the crafted &lt;code>kubeconfig&lt;/code> and deploy the &lt;code>runtime&lt;/code> part of the charts in the &lt;code>runtime&lt;/code> cluster.&lt;/li>
&lt;/ol>
&lt;h3 id="projected-service-account-token">Projected Service Account Token&lt;/h3>
&lt;p>This approach requires an already deployed and configured &lt;a href="https://github.com/gardener/oidc-webhook-authenticator">oidc-webhook-authenticator&lt;/a> for the &lt;code>target&lt;/code> cluster. Also, the &lt;code>runtime&lt;/code> cluster should be registered as a trusted identity provider in the &lt;code>target&lt;/code> cluster. Then, projected service accounts tokens from the &lt;code>runtime&lt;/code> cluster can be used to authenticate against the &lt;code>target&lt;/code> cluster. The needed steps are as follows:&lt;/p>
&lt;ol>
&lt;li>Deploy &lt;a href="https://github.com/gardener/oidc-webhook-authenticator">OWA&lt;/a> and establish the needed trust.&lt;/li>
&lt;li>Set &lt;code>.Values.global.deployment.virtualGarden.enabled: true&lt;/code> and &lt;code>.Values.global.deployment.virtualGarden.&amp;lt;GardenerControlPlaneComponent&amp;gt;.user.name&lt;/code>.
&lt;blockquote>
&lt;p>&lt;strong>Note:&lt;/strong> username value will depend on the trust configuration, e.g., &lt;code>&amp;lt;prefix&amp;gt;:system:serviceaccount:&amp;lt;namespace&amp;gt;:&amp;lt;serviceaccount&amp;gt;&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>Set &lt;code>.Values.global.&amp;lt;GardenerControlPlaneComponent&amp;gt;.serviceAccountTokenVolumeProjection.enabled: true&lt;/code> and &lt;code>.Values.global.&amp;lt;GardenerControlPlaneComponent&amp;gt;.serviceAccountTokenVolumeProjection.audience&lt;/code>.
&lt;blockquote>
&lt;p>&lt;strong>Note:&lt;/strong> audience value will depend on the trust configuration, e.g., &lt;code>&amp;lt;cliend-id-from-trust-config&amp;gt;&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>Craft a kubeconfig (see the example below).&lt;/li>
&lt;li>Deploy the &lt;code>application&lt;/code> part of the charts in the &lt;code>target&lt;/code> cluster.&lt;/li>
&lt;li>Deploy the &lt;code>runtime&lt;/code> part of the charts in the &lt;code>runtime&lt;/code> cluster.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>clusters:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- cluster:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> certificate-authority-data: &amp;lt;CA-DATA&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server: https://virtual-garden.api
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: virtual-garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>contexts:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- context:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cluster: virtual-garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user: virtual-garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: virtual-garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>current-context: virtual-garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>users:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- name: virtual-garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tokenFile: /var/run/secrets/projected/serviceaccount/token
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Backup and Restore</title><link>https://gardener.cloud/docs/gardener/concepts/backup-restore/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/concepts/backup-restore/</guid><description>
&lt;h1 id="backup-and-restore">Backup and Restore&lt;/h1>
&lt;p>Kubernetes uses &lt;a href="https://etcd.io/">etcd&lt;/a> as the key-value store for its resource definitions. Gardener supports the backup and restore of etcd. It is the responsibility of the shoot owners to backup the workload data.&lt;/p>
&lt;p>Gardener uses an &lt;a href="https://github.com/gardener/etcd-backup-restore">etcd-backup-restore&lt;/a> component to backup the etcd backing the Shoot cluster regularly and restore it in case of disaster. It is deployed as sidecar via &lt;a href="https://github.com/gardener/etcd-druid">etcd-druid&lt;/a>. This doc mainly focuses on the backup and restore configuration used by Gardener when deploying these components. For more details on the design and internal implementation details, please refer to &lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/06-etcd-druid.md">GEP-06&lt;/a> and the documentation on individual repositories.&lt;/p>
&lt;h2 id="bucket-provisioning">Bucket Provisioning&lt;/h2>
&lt;p>Refer to the &lt;a href="https://gardener.cloud/docs/gardener/extensions/backupbucket/">backup bucket extension document&lt;/a> to find out details about configuring the backup bucket.&lt;/p>
&lt;h2 id="backup-policy">Backup Policy&lt;/h2>
&lt;p>etcd-backup-restore supports full snapshot and delta snapshots over full snapshot. In Gardener, this configuration is currently hard-coded to the following parameters:&lt;/p>
&lt;ul>
&lt;li>Full Snapshot schedule:
&lt;ul>
&lt;li>Daily, &lt;code>24hr&lt;/code> interval.&lt;/li>
&lt;li>For each Shoot, the schedule time in a day is randomized based on the configured Shoot maintenance window.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Delta Snapshot schedule:
&lt;ul>
&lt;li>At &lt;code>5min&lt;/code> interval.&lt;/li>
&lt;li>If aggregated events size since last snapshot goes beyond &lt;code>100Mib&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Backup History / Garbage backup deletion policy:
&lt;ul>
&lt;li>Gardener configures backup restore to have &lt;code>Exponential&lt;/code> garbage collection policy.&lt;/li>
&lt;li>As per policy, the following backups are retained:
&lt;ul>
&lt;li>All full backups and delta backups for the previous hour.&lt;/li>
&lt;li>Latest full snapshot of each previous hour for the day.&lt;/li>
&lt;li>Latest full snapshot of each previous day for 7 days.&lt;/li>
&lt;li>Latest full snapshot of the previous 4 weeks.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Garbage Collection is configured at &lt;code>12hr&lt;/code> interval.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Listing:
&lt;ul>
&lt;li>Gardener doesn&amp;rsquo;t have any API to list out the backups.&lt;/li>
&lt;li>To find the backups list, an admin can checkout the &lt;code>BackupEntry&lt;/code> resource associated with the Shoot which holds the bucket and prefix details on the object store.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="restoration">Restoration&lt;/h2>
&lt;p>The restoration process of etcd is automated through the etcd-backup-restore component from the latest snapshot. Gardener doesn&amp;rsquo;t support Point-In-Time-Recovery (PITR) of etcd. In case of an etcd disaster, the etcd is recovered from the latest backup automatically. For further details, please refer the &lt;a href="https://github.com/gardener/etcd-backup-restore/blob/master/docs/proposals/restoration.md">Restoration&lt;/a> topic. Post restoration of etcd, the Shoot reconciliation loop brings the cluster back to its previous state.&lt;/p>
&lt;p>Again, the Shoot owner is responsible for maintaining the backup/restore of his workload. Gardener only takes care of the cluster&amp;rsquo;s etcd.&lt;/p></description></item><item><title>Docs: BackupBucket</title><link>https://gardener.cloud/docs/gardener/extensions/backupbucket/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/extensions/backupbucket/</guid><description>
&lt;h1 id="contract-backupbucket-resource">Contract: &lt;code>BackupBucket&lt;/code> Resource&lt;/h1>
&lt;p>The Gardener project features a sub-project called &lt;a href="https://github.com/gardener/etcd-backup-restore">etcd-backup-restore&lt;/a> to take periodic backups of etcd backing Shoot clusters. It demands the bucket (or its equivalent in different object store providers) to be created and configured externally with appropriate credentials. The &lt;code>BackupBucket&lt;/code> resource takes this responsibility in Gardener.&lt;/p>
&lt;p>Before introducing the &lt;code>BackupBucket&lt;/code> extension resource, Gardener was using Terraform in order to create and manage these provider-specific resources (e.g., see &lt;a href="https://github.com/gardener/gardener/tree/0.27.0/charts/seed-terraformer/charts/aws-backup">AWS Backup&lt;/a>).
Now, Gardener commissions an external, provider-specific controller to take over this task. You can also refer to &lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/02-backupinfra.md">backupInfra proposal documentation&lt;/a> to get an idea about how the transition was done and understand the resource in a broader scope.&lt;/p>
&lt;h2 id="what-is-the-scope-of-a-bucket">What Is the Scope of a Bucket?&lt;/h2>
&lt;p>A bucket will be provisioned per &lt;code>Seed&lt;/code>. So, a backup of every &lt;code>Shoot&lt;/code> created on that &lt;code>Seed&lt;/code> will be stored under a different shoot specific prefix under the bucket.
For the backup of the &lt;code>Shoot&lt;/code> rescheduled on different &lt;code>Seed&lt;/code>, it will continue to use the same bucket.&lt;/p>
&lt;h2 id="what-is-the-lifespan-of-a-backupbucket">What Is the Lifespan of a &lt;code>BackupBucket&lt;/code>?&lt;/h2>
&lt;p>The bucket associated with &lt;code>BackupBucket&lt;/code> will be created at the creation of the &lt;code>Seed&lt;/code>. And as per current implementation, it will also be deleted on deletion of the &lt;code>Seed&lt;/code>, if there isn&amp;rsquo;t any &lt;code>BackupEntry&lt;/code> resource associated with it.&lt;/p>
&lt;p>In the future, we plan to introduce a schedule for &lt;code>BackupBucket&lt;/code> - the deletion logic for the &lt;code>BackupBucket&lt;/code> resource, which will reschedule it on different available &lt;code>Seed&lt;/code>s on deletion or failure of a health check for the currently associated &lt;code>seed&lt;/code>. In that case, the &lt;code>BackupBucket&lt;/code> will be deleted only if there isn&amp;rsquo;t any schedulable &lt;code>Seed&lt;/code> available and there isn&amp;rsquo;t any associated &lt;code>BackupEntry&lt;/code> resource.&lt;/p>
&lt;h2 id="what-needs-to-be-implemented-to-support-a-new-infrastructure-provider">What Needs to Be Implemented to Support a New Infrastructure Provider?&lt;/h2>
&lt;p>As part of the seed flow, Gardener will create a special CRD in the seed cluster that needs to be reconciled by an extension controller, for example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: BackupBucket
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: foo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: azure
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> providerConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;some-optional-provider-specific-backupbucket-configuration&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> region: eu-west-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> secretRef:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: backupprovider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: shoot--foo--bar
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>.spec.secretRef&lt;/code> contains a reference to the provider secret pointing to the account that shall be used to create the needed resources. This provider secret will be configured by the Gardener operator in the &lt;code>Seed&lt;/code> resource and propagated over there by the seed controller.&lt;/p>
&lt;p>After your controller has created the required bucket, if required, it generates the secret to access the objects in the bucket and put a reference to it in &lt;code>status&lt;/code>. This secret is supposed to be used by Gardener, or eventually a &lt;code>BackupEntry&lt;/code> resource and etcd-backup-restore component, to backup the etcd.&lt;/p>
&lt;p>In order to support a new infrastructure provider, you need to write a controller that watches all &lt;code>BackupBucket&lt;/code>s with &lt;code>.spec.type=&amp;lt;my-provider-name&amp;gt;&lt;/code>. You can take a look at the below referenced example implementation for the Azure provider.&lt;/p>
&lt;h2 id="references-and-additional-resources">References and Additional Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/gardener/api-reference/extensions/#backupbucket">&lt;code>BackupBucket&lt;/code> API Reference&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gardener/gardener-extension-provider-azure/tree/master/pkg/controller/backupbucket">Exemplary Implementation for the Azure Provider&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/gardener/extensions/backupentry/">&lt;code>BackupEntry&lt;/code> Resource Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/02-backupinfra.md">Shared Bucket Proposal&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docs: BackupEntry</title><link>https://gardener.cloud/docs/gardener/extensions/backupentry/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/extensions/backupentry/</guid><description>
&lt;h1 id="contract-backupentry-resource">Contract: &lt;code>BackupEntry&lt;/code> Resource&lt;/h1>
&lt;p>The Gardener project features a sub-project called &lt;a href="https://github.com/gardener/etcd-backup-restore">etcd-backup-restore&lt;/a> to take periodic backups of etcd backing Shoot clusters. It demands the bucket (or its equivalent in different object store providers) access credentials to be created and configured externally with appropriate credentials. The &lt;code>BackupEntry&lt;/code> resource takes this responsibility in Gardener to provide this information by creating a secret specific to the component.&lt;/p>
&lt;p>That being said, the core motivation for introducing this resource was to support retention of backups post deletion of &lt;code>Shoot&lt;/code>. The etcd-backup-restore components take responsibility of garbage collecting old backups out of the defined period. Once a shoot is deleted, we need to persist the backups for few days. Hence, Gardener uses the &lt;code>BackupEntry&lt;/code> resource for this housekeeping work post deletion of a &lt;code>Shoot&lt;/code>. The &lt;code>BackupEntry&lt;/code> resource is responsible for shoot specific prefix under referred bucket.&lt;/p>
&lt;p>Before introducing the &lt;code>BackupEntry&lt;/code> extension resource, Gardener was using Terraform in order to create and manage these provider-specific resources (e.g., see &lt;a href="https://github.com/gardener/gardener/tree/0.27.0/charts/seed-terraformer/charts/aws-backup">AWS Backup&lt;/a>).
Now, Gardener commissions an external, provider-specific controller to take over this task. You can also refer to &lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/02-backupinfra.md">backupInfra proposal documentation&lt;/a> to get idea about how the transition was done and understand the resource in broader scope.&lt;/p>
&lt;h2 id="what-is-the-lifespan-of-a-backupentry">What Is the Lifespan of a &lt;code>BackupEntry&lt;/code>?&lt;/h2>
&lt;p>The bucket associated with &lt;code>BackupEntry&lt;/code> will be created by using a &lt;code>BackupBucket&lt;/code> resource. The &lt;code>BackupEntry&lt;/code> resource will be created as a part of the &lt;code>Shoot&lt;/code> creation. But resources might continue to exist post deletion of a &lt;code>Shoot&lt;/code> (see &lt;a href="https://gardener.cloud/docs/gardener/concepts/gardenlet/#backupentry-controller">gardenlet&lt;/a> for more details).&lt;/p>
&lt;h2 id="what-needs-to-be-implemented-to-support-a-new-infrastructure-provider">What Needs to be Implemented to Support a New Infrastructure Provider?&lt;/h2>
&lt;p>As part of the shoot flow, Gardener will create a special CRD in the seed cluster that needs to be reconciled by an extension controller, for example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: BackupEntry
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: shoot--foo--bar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: azure
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> providerConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;some-optional-provider-specific-backup-bucket-configuration&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> backupBucketProviderStatus:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;some-optional-provider-specific-backup-bucket-status&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> region: eu-west-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> bucketName: foo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> secretRef:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: backupprovider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: shoot--foo--bar
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>.spec.secretRef&lt;/code> contains a reference to the provider secret pointing to the account that shall be used to create the needed resources. This provider secret will be propagated from the &lt;code>BackupBucket&lt;/code> resource by the shoot controller.&lt;/p>
&lt;p>Your controller is supposed to create the &lt;code>etcd-backup&lt;/code> secret in the control plane namespace of a shoot. This secret is supposed to be used by Gardener or eventually by the etcd-backup-restore component to backup the etcd. The controller implementation should clean up the objects created under the shoot specific prefix in the bucket equivalent to the name of the &lt;code>BackupEntry&lt;/code> resource.&lt;/p>
&lt;p>In order to support a new infrastructure provider, you need to write a controller that watches all the &lt;code>BackupBucket&lt;/code>s with &lt;code>.spec.type=&amp;lt;my-provider-name&amp;gt;&lt;/code>. You can take a look at the below referenced example implementation for the Azure provider.&lt;/p>
&lt;h2 id="references-and-additional-resources">References and Additional Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/gardener/api-reference/extensions/#backupbucket">&lt;code>BackupEntry&lt;/code> API Reference&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gardener/gardener-extension-provider-azure/tree/master/pkg/controller/backupentry">Exemplary Implementation for the Azure Provider&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/gardener/extensions/backupbucket/">&lt;code>BackupBucket&lt;/code> Resource Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/02-backupinfra.md">Shared Bucket Proposal&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gardener/gardener/blob/master/pkg/controllermanager/apis/config/types.go#L101-%23L107">Gardener-controller-manager-component-config API Specification&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docs: Bastion</title><link>https://gardener.cloud/docs/gardener/extensions/bastion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/extensions/bastion/</guid><description>
&lt;h1 id="contract-bastion-resource">Contract: &lt;code>Bastion&lt;/code> Resource&lt;/h1>
&lt;p>The Gardener project allows users to connect to Shoot worker nodes via SSH. As nodes are usually firewalled and not directly accessible from the public internet, &lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/15-manage-bastions-and-ssh-key-pair-rotation.md">GEP-15&lt;/a> introduced the concept of &amp;ldquo;Bastions&amp;rdquo;. A bastion is a dedicated server that only serves to allow SSH ingress to the worker nodes.&lt;/p>
&lt;p>&lt;code>Bastion&lt;/code> resources contain the user&amp;rsquo;s public SSH key and IP address, in order to provision the server accordingly: The public key is put onto the Bastion and SSH ingress is only authorized for the given IP address (in fact, it&amp;rsquo;s not a single IP address, but a set of IP ranges, however for most purposes a single IP is be used).&lt;/p>
&lt;h2 id="what-is-the-lifespan-of-a-bastion">What Is the Lifespan of a &lt;code>Bastion&lt;/code>?&lt;/h2>
&lt;p>Once a &lt;code>Bastion&lt;/code> has been created in the garden, it will be replicated to the appropriate seed cluster, where a controller then reconciles a server and firewall rules etc., on the cloud provider used by the target Shoot. When the Bastion is ready (i.e. has a public IP), that IP is stored in the &lt;code>Bastion&lt;/code>&amp;rsquo;s status and from there it is picked up by the garden cluster and &lt;code>gardenctl&lt;/code> eventually.&lt;/p>
&lt;p>To make multiple SSH sessions possible, the existence of the &lt;code>Bastion&lt;/code> is not directly tied to the execution of &lt;code>gardenctl&lt;/code>: users can exit out of &lt;code>gardenctl&lt;/code> and use &lt;code>ssh&lt;/code> manually to connect to the bastion and worker nodes.&lt;/p>
&lt;p>However, &lt;code>Bastion&lt;/code>s have an expiry date, after which they will be garbage collected.&lt;/p>
&lt;p>When SSH access is set to &lt;code>false&lt;/code> for the &lt;code>Shoot&lt;/code> in the workers settings (see &lt;a href="https://gardener.cloud/docs/gardener/shoot_workers_settings/">Shoot Worker Nodes Settings&lt;/a>), &lt;code>Bastion&lt;/code> resources are deleted during &lt;code>Shoot&lt;/code> reconciliation and new &lt;code>Bastion&lt;/code>s are prevented from being created.&lt;/p>
&lt;h2 id="what-needs-to-be-implemented-to-support-a-new-infrastructure-provider">What Needs to Be Implemented to Support a New Infrastructure Provider?&lt;/h2>
&lt;p>As part of the shoot flow, Gardener will create a special CRD in the seed cluster that needs to be reconciled by an extension controller, for example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Bastion
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: mybastion
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: shoot--foo--bar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: aws
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># userData is base64-encoded cloud provider user data; this contains the&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># user&amp;#39;s SSH key&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> userData: IyEvYmluL2Jhc2ggL....Nlcgo=
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ingress:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - ipBlock:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cidr: 192.88.99.0/32 &lt;span style="color:#008000"># this is most likely the user&amp;#39;s IP address&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Your controller is supposed to create a new instance at the given cloud provider, firewall it to only allow SSH (TCP port 22) from the given IP blocks, and then configure the firewall for the worker nodes to allow SSH from the bastion instance. When a &lt;code>Bastion&lt;/code> is deleted, all these changes need to be reverted.&lt;/p>
&lt;h2 id="implementation-details">Implementation Details&lt;/h2>
&lt;h3 id="configvalidator-interface">&lt;code>ConfigValidator&lt;/code> Interface&lt;/h3>
&lt;p>For bastion controllers, the generic &lt;code>Reconciler&lt;/code> also delegates to a &lt;a href="https://github.com/gardener/gardener/blob/master/extensions/pkg/controller/bastion/configvalidator.go">&lt;code>ConfigValidator&lt;/code> interface&lt;/a> that contains a single &lt;code>Validate&lt;/code> method. This method is called by the generic &lt;code>Reconciler&lt;/code> at the beginning of every reconciliation, and can be implemented by the extension to validate the &lt;code>.spec.providerConfig&lt;/code> part of the &lt;code>Bastion&lt;/code> resource with the respective cloud provider, typically the existence and validity of cloud provider resources such as VPCs, images, etc.&lt;/p>
&lt;p>The &lt;code>Validate&lt;/code> method returns a list of errors. If this list is non-empty, the generic &lt;code>Reconciler&lt;/code> will fail with an error. This error will have the error code &lt;code>ERR_CONFIGURATION_PROBLEM&lt;/code>, unless there is at least one error in the list that has its &lt;code>ErrorType&lt;/code> field set to &lt;code>field.ErrorTypeInternal&lt;/code>.&lt;/p>
&lt;h2 id="references-and-additional-resources">References and Additional Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/gardener/api-reference/extensions/#bastion">&lt;code>Bastion&lt;/code> API Reference&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gardener/gardener-extension-provider-aws/tree/master/pkg/controller/bastion">Exemplary Implementation for the AWS Provider&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/15-manage-bastions-and-ssh-key-pair-rotation.md">GEP-15&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docs: CA Rotation</title><link>https://gardener.cloud/docs/gardener/extensions/ca-rotation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/extensions/ca-rotation/</guid><description>
&lt;h1 id="ca-rotation-in-extensions">CA Rotation in Extensions&lt;/h1>
&lt;p>&lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/18-shoot-CA-rotation.md">GEP-18&lt;/a> proposes adding support for automated rotation of Shoot cluster certificate authorities (CAs).
This document outlines all the requirements that Gardener extensions need to fulfill in order to support the CA rotation feature.&lt;/p>
&lt;h2 id="requirements-for-shoot-cluster-ca-rotation">Requirements for Shoot Cluster CA Rotation&lt;/h2>
&lt;ul>
&lt;li>Extensions must not rely on static CA &lt;code>Secret&lt;/code> names managed by the gardenlet, because their names are changing during CA rotation.&lt;/li>
&lt;li>Extensions cannot issue or use client certificates for authenticating against shoot API servers. Instead, they should use short-lived auto-rotated &lt;code>ServiceAccount&lt;/code> tokens via gardener-resource-manager&amp;rsquo;s &lt;code>TokenRequestor&lt;/code>. Also see &lt;a href="https://gardener.cloud/docs/gardener/extensions/conventions/">Conventions&lt;/a> and &lt;a href="https://gardener.cloud/docs/gardener/concepts/resource-manager/#tokenrequestor">&lt;code>TokenRequestor&lt;/code>&lt;/a> documents.&lt;/li>
&lt;li>Extensions need to generate dedicated CAs for signing server certificates (e.g. &lt;code>cloud-controller-manager&lt;/code>). There should be one CA per controller and purpose in order to bind the lifecycle to the reconciliation cycle of the respective object for which it is created.&lt;/li>
&lt;li>CAs managed by extensions should be rotated in lock-step with the shoot cluster CA.
When the user triggers a rotation, the gardenlet writes phase and initiation time to &lt;code>Shoot.status.credentials.rotation.certificateAuthorities.{phase,lastInitiationTime}&lt;/code>. See &lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/18-shoot-CA-rotation.md#rotation-sequence-for-cluster-and-client-ca">GEP-18&lt;/a> for a detailed description on what needs to happen in each phase.
Extensions can retrieve this information from &lt;a href="https://gardener.cloud/docs/gardener/extensions/cluster/">&lt;code>Cluster.shoot.status&lt;/code>&lt;/a>.&lt;/li>
&lt;/ul>
&lt;h2 id="utilities-for-secrets-management">Utilities for Secrets Management&lt;/h2>
&lt;p>In order to fulfill the requirements listed above, extension controllers can reuse the &lt;a href="https://gardener.cloud/docs/gardener/secrets_management/">&lt;code>SecretsManager&lt;/code>&lt;/a> that the gardenlet uses to manage all shoot cluster CAs, certificates, and other secrets as well.
It implements the core logic for managing secrets that need to be rotated, auto-renewed, etc.&lt;/p>
&lt;p>Additionally, there are utilities for reusing &lt;code>SecretsManager&lt;/code> in extension controllers.
They already implement the above requirements based on the &lt;code>Cluster&lt;/code> resource and allow focusing on the extension controllers&amp;rsquo; business logic.&lt;/p>
&lt;p>For example, a simple &lt;code>SecretsManager&lt;/code> usage in an extension controller could look like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">const&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000">// identity for SecretsManager instance in ControlPlane controller
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">&lt;/span> identity = &lt;span style="color:#a31515">&amp;#34;provider-foo-controlplane&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000">// secret config name of the dedicated CA
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">&lt;/span> caControlPlaneName = &lt;span style="color:#a31515">&amp;#34;ca-provider-foo-controlplane&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">func&lt;/span> Reconcile() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">var&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cluster *extensionscontroller.Cluster
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> client client.Client
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000">// define wanted secrets with options
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">&lt;/span> secretConfigs = []extensionssecretsmanager.SecretConfigWithOptions{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000">// dedicated CA for ControlPlane controller
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">&lt;/span> Config: &amp;amp;secretutils.CertificateSecretConfig{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Name: caControlPlaneName,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CommonName: &lt;span style="color:#a31515">&amp;#34;ca-provider-foo-controlplane&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CertType: secretutils.CACert,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000">// persist CA so that it gets restored on control plane migration
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">&lt;/span> Options: []secretsmanager.GenerateOption{secretsmanager.Persist()},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000">// server cert for control plane component
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">&lt;/span> Config: &amp;amp;secretutils.CertificateSecretConfig{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Name: &lt;span style="color:#a31515">&amp;#34;cloud-controller-manager&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CommonName: &lt;span style="color:#a31515">&amp;#34;cloud-controller-manager&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DNSNames: kutil.DNSNamesForService(&lt;span style="color:#a31515">&amp;#34;cloud-controller-manager&amp;#34;&lt;/span>, namespace),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CertType: secretutils.ServerCert,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000">// sign with our dedicated CA
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">&lt;/span> Options: []secretsmanager.GenerateOption{secretsmanager.SignedByCA(caControlPlaneName)},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000">// initialize SecretsManager based on Cluster object
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">&lt;/span> sm, err := extensionssecretsmanager.SecretsManagerForCluster(ctx, logger.WithName(&lt;span style="color:#a31515">&amp;#34;secretsmanager&amp;#34;&lt;/span>), clock.RealClock{}, client, cluster, identity, secretConfigs)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000">// generate all wanted secrets (first CAs, then the rest)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">&lt;/span> secrets, err := extensionssecretsmanager.GenerateAllSecrets(ctx, sm, secretConfigs)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000">// cleanup any secrets that are not needed any more (e.g. after rotation)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">&lt;/span> err = sm.Cleanup(ctx)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Please pay attention to the following points:&lt;/p>
&lt;ul>
&lt;li>There should be one &lt;code>SecretsManager&lt;/code> identity per controller (and purpose if applicable) in order to prevent conflicts between different instances.
E.g., there should be different identities for &lt;code>Infrastructrue&lt;/code>, &lt;code>Worker&lt;/code> controller, etc., and the &lt;code>ControlPlane&lt;/code> controller should use dedicated &lt;code>SecretsManager&lt;/code> identities per purpose (e.g. &lt;code>provider-foo-controlplane&lt;/code> and &lt;code>provider-foo-controlplane-exposure&lt;/code>).&lt;/li>
&lt;li>All other points in &lt;a href="https://gardener.cloud/docs/gardener/secrets_management/#reusing-the-secretsmanager-in-other-components">Reusing the SecretsManager in Other Components&lt;/a>.&lt;/li>
&lt;/ul></description></item><item><title>Docs: Changing the API</title><link>https://gardener.cloud/docs/gardener/changing-the-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/changing-the-api/</guid><description>
&lt;h1 id="changing-the-api">Changing the API&lt;/h1>
&lt;p>This document describes the steps that need to be performed when changing the API.
It provides guidance for API changes to both (Gardener system in general or component configurations).&lt;/p>
&lt;p>Generally, as Gardener is a Kubernetes-native extension, it follows the same API conventions and guidelines like Kubernetes itself. The Kubernetes
&lt;a href="https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md">API Conventions&lt;/a> as well as &lt;a href="https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api_changes.md">Changing the API&lt;/a> topics already provide a good overview and general explanation of the basic concepts behind it.
We are following the same approaches.&lt;/p>
&lt;h2 id="gardener-api">Gardener API&lt;/h2>
&lt;p>The Gardener API is defined in the &lt;code>pkg/apis/{core,extensions,settings}&lt;/code> directories and is the main point of interaction with the system.
It must be ensured that the API is always backwards-compatible.&lt;/p>
&lt;h3 id="changing-the-api-1">Changing the API&lt;/h3>
&lt;p>&lt;strong>Checklist&lt;/strong> when changing the API:&lt;/p>
&lt;ol>
&lt;li>Modify the field(s) in the respective Golang files of all external versions and the internal version.
&lt;ol>
&lt;li>Make sure new fields are being added as &amp;ldquo;optional&amp;rdquo; fields, i.e., they are of pointer types, they have the &lt;code>// +optional&lt;/code> comment, and they have the &lt;code>omitempty&lt;/code> JSON tag.&lt;/li>
&lt;li>Make sure that the existing field numbers in the protobuf tags are not changed.&lt;/li>
&lt;li>Do not copy protobuf tags from other fields but create them with &lt;code>make generate WHAT=&amp;quot;protobuf&amp;quot;&lt;/code>.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>If necessary, implement/adapt the conversion logic defined in the versioned APIs (e.g., &lt;code>pkg/apis/core/v1beta1/conversions*.go&lt;/code>).&lt;/li>
&lt;li>If necessary, implement/adapt defaulting logic defined in the versioned APIs (e.g., &lt;code>pkg/apis/core/v1beta1/defaults*.go&lt;/code>).&lt;/li>
&lt;li>Run the code generation: &lt;code>make generate&lt;/code>&lt;/li>
&lt;li>If necessary, implement/adapt validation logic defined in the internal API (e.g., &lt;code>pkg/apis/core/validation/validation*.go&lt;/code>).&lt;/li>
&lt;li>If necessary, adapt the exemplary YAML manifests of the Gardener resources defined in &lt;code>example/*.yaml&lt;/code>.&lt;/li>
&lt;li>In most cases, it makes sense to add/adapt the documentation for administrators/operators and/or end-users in the &lt;code>docs&lt;/code> folder to provide information on purpose and usage of the added/changed fields.&lt;/li>
&lt;li>When opening the pull request, always add a release note so that end-users are becoming aware of the changes.&lt;/li>
&lt;/ol>
&lt;h3 id="removing-a-field">Removing a Field&lt;/h3>
&lt;p>If fields shall be removed permanently from the API, then a proper deprecation period must be adhered to so that end-users have enough time to adapt their clients.&lt;/p>
&lt;p>Once the deprecation period is over, the field should be dropped from the API in a two-step process, i.e., in two release cycles. In the first step, all the usages in the code base should be dropped. In the second step, the field should be dropped from API. We need to follow this two-step process cause there can be the case where &lt;code>gardener-apiserver&lt;/code> is upgraded to a new version in which the field has been removed but other controllers are still on the old version of Gardener. This can lead to &lt;code>nil&lt;/code> pointer exceptions or other unexpected behaviour.&lt;/p>
&lt;p>The steps for removing a field from the code base is:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>The field in the external version(s) has to be commented out with appropriate doc string that the protobuf number of the corresponding field is reserved. Example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-diff" data-lang="diff">&lt;span style="display:flex;">&lt;span>- SeedTemplate *gardencorev1beta1.SeedTemplate `json:&amp;#34;seedTemplate,omitempty&amp;#34; protobuf:&amp;#34;bytes,2,opt,name=seedTemplate&amp;#34;`
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+ // SeedTemplate is tombstoned to show why 2 is reserved protobuf tag.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+ // SeedTemplate *gardencorev1beta1.SeedTemplate `json:&amp;#34;seedTemplate,omitempty&amp;#34; protobuf:&amp;#34;bytes,2,opt,name=seedTemplate&amp;#34;`
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The reasoning behind this is to prevent the same protobuf number being used by a new field. Introducing a new field with the same protobuf number would be a breaking change for clients still using the old protobuf definitions that have the old field for the given protobuf number.
The field in the internal version can be removed.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A unit test has to be added to make sure that a new field does not reuse the already reserved protobuf tag.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Example of field removal can be found in the &lt;a href="https://github.com/gardener/gardener/pull/6972">Remove &lt;code>seedTemplate&lt;/code> field from ManagedSeed API&lt;/a> PR.&lt;/p>
&lt;h2 id="component-configuration-apis">Component Configuration APIs&lt;/h2>
&lt;p>Most Gardener components have a component configuration that follows similar principles to the Gardener API.
Those component configurations are defined in &lt;code>pkg/{controllermanager,gardenlet,scheduler},pkg/apis/config&lt;/code>.
Hence, the above checklist also applies for changes to those APIs.
However, since these APIs are only used internally and only during the deployment of Gardener, the guidelines with respect to changes and backwards-compatibility are slightly relaxed.
If necessary, it is allowed to remove fields without a proper deprecation period if the release note uses the &lt;code>breaking operator&lt;/code> keywords.&lt;/p>
&lt;p>In addition to the above checklist:&lt;/p>
&lt;ol>
&lt;li>If necessary, then adapt the Helm chart of Gardener defined in &lt;code>charts/gardener&lt;/code>. Adapt the &lt;code>values.yaml&lt;/code> file as well as the manifest templates.&lt;/li>
&lt;/ol></description></item><item><title>Docs: Cluster</title><link>https://gardener.cloud/docs/gardener/extensions/cluster/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/extensions/cluster/</guid><description>
&lt;h1 id="cluster-resource">&lt;code>Cluster&lt;/code> Resource&lt;/h1>
&lt;p>As part of the extensibility epic, a lot of responsibility that was previously taken over by Gardener directly has now been shifted to extension controllers running in the seed clusters.
These extensions often serve a well-defined purpose, e.g. the management of &lt;a href="https://gardener.cloud/docs/gardener/extensions/dnsrecord/">DNS records&lt;/a>, &lt;a href="https://gardener.cloud/docs/gardener/extensions/infrastructure/">infrastructure&lt;/a>, etc.
We have introduced a couple of extension CRDs in the seeds whose specification is written by Gardener, and which are acted up by the extensions.&lt;/p>
&lt;p>However, the extensions sometimes require more information that is not directly part of the specification.
One example of that is the GCP infrastructure controller which needs to know the shoot&amp;rsquo;s pod and service network.
Another example is the Azure infrastructure controller which requires some information out of the &lt;code>CloudProfile&lt;/code> resource.
The problem is that Gardener does not know which extension requires which information so that it can write it into their specific CRDs.&lt;/p>
&lt;p>In order to deal with this problem we have introduced the &lt;code>Cluster&lt;/code> extension resource.
This CRD is written into the seeds, however, it does not contain a &lt;code>status&lt;/code>, so it is not expected that something acts upon it.
Instead, you can treat it like a &lt;code>ConfigMap&lt;/code> which contains data that might be interesting for you.
In the context of Gardener, seeds and shoots, and extensibility the &lt;code>Cluster&lt;/code> resource contains the &lt;code>CloudProfile&lt;/code>, &lt;code>Seed&lt;/code>, and &lt;code>Shoot&lt;/code> manifest.
Extension controllers can take whatever information they want out of it that might help completing their individual tasks.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Cluster
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: shoot--foo--bar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudProfile:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: CloudProfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> seed:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: Seed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> shoot:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: Shoot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The resource is written by Gardener before it starts the reconciliation flow of the shoot.&lt;/p>
&lt;p>⚠️ All Gardener components use the &lt;code>core.gardener.cloud/v1beta1&lt;/code> version, i.e., the &lt;code>Cluster&lt;/code> resource will contain the objects in this version.&lt;/p>
&lt;h2 id="important-information-that-should-be-taken-into-account">Important Information that Should Be Taken into Account&lt;/h2>
&lt;p>There are some fields in the &lt;code>Shoot&lt;/code> specification that might be interesting to take into account.&lt;/p>
&lt;ul>
&lt;li>&lt;code>.spec.hibernation.enabled={true,false}&lt;/code>: Extension controllers might want to behave differently if the shoot is hibernated or not (probably they might want to scale down their control plane components, for example).&lt;/li>
&lt;li>&lt;code>.status.lastOperation.state=Failed&lt;/code>: If Gardener sets the shoot&amp;rsquo;s last operation state to &lt;code>Failed&lt;/code>, it means that Gardener won&amp;rsquo;t automatically retry to finish the reconciliation/deletion flow because an error occurred that could not be resolved within the last &lt;code>24h&lt;/code> (default). In this case, end-users are expected to manually re-trigger the reconciliation flow in case they want Gardener to try again. Extension controllers are expected to follow the same principle. This means they have to read the shoot state out of the &lt;code>Cluster&lt;/code> resource.&lt;/li>
&lt;/ul>
&lt;h2 id="extension-resources-not-associated-with-a-shoot">Extension Resources Not Associated with a Shoot&lt;/h2>
&lt;p>In some cases, Gardener may create extension resources that are not associated with a shoot, but are needed to support some functionality internal to Gardener. Such resources will be created in the &lt;code>garden&lt;/code> namespace of a seed cluster.&lt;/p>
&lt;p>For example, if the &lt;a href="https://gardener.cloud/docs/gardener/deployment/deploy_gardenlet_manually/">managed ingress controller&lt;/a> is active on the seed, Gardener will create a &lt;a href="https://gardener.cloud/docs/gardener/extensions/dnsrecord/">DNSRecord&lt;/a> resource(s) in the &lt;code>garden&lt;/code> namespace of the seed cluster for the ingress DNS record.&lt;/p>
&lt;p>Extension controllers that may be expected to reconcile extension resources in the &lt;code>garden&lt;/code> namespace should make sure that they can tolerate the absence of a cluster resource. This means that they should not attempt to read the cluster resource in such cases, or if they do they should ignore the &amp;ldquo;not found&amp;rdquo; error.&lt;/p>
&lt;h2 id="references-and-additional-resources">References and Additional Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/gardener/gardener/blob/master/pkg/apis/extensions/v1alpha1/types_cluster.go">&lt;code>Cluster&lt;/code> API (Golang Specification)&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docs: Cluster API</title><link>https://gardener.cloud/docs/gardener/concepts/cluster-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/concepts/cluster-api/</guid><description>
&lt;h1 id="relation-between-gardener-api-and-cluster-api-sig-cluster-lifecycle">Relation Between Gardener API and Cluster API (SIG Cluster Lifecycle)&lt;/h1>
&lt;p>In essence, the Cluster API harmonizes how to get to clusters, while Gardener goes one step further and also harmonizes the clusters themselves. The Cluster API delegates the specifics to so-called providers for infrastructures or control planes via specific CR(D)s, while Gardener only has one cluster CR(D). Different Cluster API providers, e.g. for AWS, Azure, GCP, etc., give you vastly different Kubernetes clusters. In contrast, Gardener gives you the exact same clusters with the exact same K8s version, operating system, control plane configuration like for API server or kubelet, add-ons like overlay network, HPA/VPA, DNS and certificate controllers, ingress and network policy controllers, control plane monitoring and logging stacks, down to the behavior of update procedures, auto-scaling, self-healing, etc., on all supported infrastructures. These homogeneous clusters are an essential goal for Gardener, as its main purpose is to simplify operations for teams that need to develop and ship software on Kubernetes clusters on a plethora of infrastructures (a.k.a. multi-cloud).&lt;/p>
&lt;p>Incidentally, Gardener influenced the Machine API in the Cluster API with its &lt;a href="https://github.com/gardener/machine-controller-manager">Machine Controller Manager&lt;/a> and was the &lt;a href="https://github.com/kubernetes-sigs/cluster-api/commit/00b1ead264aea6f88585559056c180771cce3815">first to adopt it&lt;/a>. You can find more information on that in the &lt;a href="https://www.youtube.com/watch?v=Mtg8jygK3Hs">joint SIG Cluster Lifecycle KubeCon talk&lt;/a> where @hardikdr from our Gardener team in India spoke.&lt;/p>
&lt;p>That means that we follow the &lt;a href="https://github.com/kubernetes-sigs/cluster-api#cluster-api">Cluster API&lt;/a> with great interest and are active members. It was completely overhauled from &lt;code>v1alpha1&lt;/code> to &lt;code>v1alpha2&lt;/code>. But because &lt;code>v1alpha2&lt;/code> made too many assumptions about the bring-up of masters and was enforcing master machine operations (for more information, see &lt;a href="https://cluster-api.sigs.k8s.io/user/concepts.html#control-plane">The Cluster API Book&lt;/a>: “As of &lt;code>v1alpha2&lt;/code>, Machine-Based is the only control plane type that Cluster API supports”), services that managed their control planes differently like GKE or Gardener couldn&amp;rsquo;t adopt it (e.g. &lt;a href="https://cloud.google.com/anthos/gke/docs/on-prem/concepts/cluster-api">Google only supports &lt;code>v1alpha1&lt;/code>&lt;/a>). In 2020 &lt;a href="https://kubernetes.io/blog/2020/04/21/cluster-api-v1alpha3-delivers-new-features-and-an-improved-user-experience/">&lt;code>v1alpha3&lt;/code>&lt;/a> was introduced and made it possible (again) to integrate managed services like GKE or Gardener. The mapping from the Gardener API to the Cluster API is mostly syntactic.&lt;/p>
&lt;p>To wrap it up, while the Cluster API knows about clusters, it doesn&amp;rsquo;t know about their make-up. With Gardener, we wanted to go beyond that and harmonize the make-up of the clusters themselves and make them homogeneous across all supported infrastructures. Gardener can therefore deliver homogeneous clusters with exactly the same configuration and behavior on all infrastructures (see also &lt;a href="https://testgrid.k8s.io/conformance-gardener">Gardener&amp;rsquo;s coverage in the official conformance test grid&lt;/a>).&lt;/p>
&lt;p>With &lt;a href="https://kubernetes.io/blog/2020/04/21/cluster-api-v1alpha3-delivers-new-features-and-an-improved-user-experience">Cluster API &lt;code>v1alpha3&lt;/code>&lt;/a> and the support for declarative control plane management, it has became possible (again) to enable Kubernetes managed services like GKE or Gardener. We would be more than happy if the community would be interested to contribute a Gardener control plane provider.&lt;/p></description></item><item><title>Docs: Component Checklist</title><link>https://gardener.cloud/docs/gardener/component-checklist/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/component-checklist/</guid><description>
&lt;h1 id="checklist-for-adding-new-components">Checklist For Adding New Components&lt;/h1>
&lt;p>Adding new components that run in the garden, seed, or shoot cluster is theoretically quite simple - we just need a &lt;code>Deployment&lt;/code> (or other similar workload resource), the respective container image, and maybe a bit of configuration.
In practice, however, there are a couple of things to keep in mind in order to make the deployment production-ready.
This document provides a checklist for them that you can walk through.&lt;/p>
&lt;h2 id="general">General&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Avoid usage of Helm charts&lt;/strong> (&lt;a href="https://github.com/gardener/gardener/tree/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/metricsserver">example&lt;/a>)&lt;/p>
&lt;p>Nowadays, we use &lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/interfaces.go">Golang components&lt;/a> instead of Helm charts for deploying components to a cluster.
Please find a typical structure of such components in the provided &lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/metricsserver/metrics_server.go#L80-L97">metrics_server.go&lt;/a> file (configuration values are typically managed in a &lt;code>Values&lt;/code> structure).
There are a few exceptions (e.g., &lt;a href="https://github.com/gardener/gardener/tree/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/istio">Istio&lt;/a>) still using charts, however the default should be using a Golang-based implementation.
For the exceptional cases, use Golang&amp;rsquo;s &lt;a href="https://pkg.go.dev/embed">embed&lt;/a> package to embed the Helm chart directory (&lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/istio/istiod.go#L59-L60">example 1&lt;/a>, &lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/istio/istiod.go#L297-L313">example 2&lt;/a>).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Choose the proper deployment way&lt;/strong> (&lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/kubescheduler/kube_scheduler.go#L212-L232">example 1 (direct application w/ client)&lt;/a>, &lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/kubescheduler/kube_scheduler.go#L447-L488">example 2 (using &lt;code>ManagedResource&lt;/code>)&lt;/a>, &lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/kubestatemetrics/kube_state_metrics.go#L120">example 3 (mixed scenario)&lt;/a>)&lt;/p>
&lt;p>For historic reasons, resources related to shoot control plane components are applied directly with the client.
All other resources (seed or shoot system components) are deployed via &lt;code>gardener-resource-manager&lt;/code>&amp;rsquo;s &lt;a href="https://gardener.cloud/docs/gardener/concepts/resource-manager/#managedresource-controller">Resource controller&lt;/a> (&lt;code>ManagedResource&lt;/code>s) since it performs health checks out-of-the-box and has a lot of other features (see its documentation for more information).
Components that can run as both seed system component or shoot control plane component (e.g., VPA or &lt;code>kube-state-metrics&lt;/code>) can make use of &lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/resourceconfig.go">these utility functions&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Do not hard-code container image references&lt;/strong> (&lt;a href="https://github.com/gardener/gardener/blob/6a0fea86850ffec8937d1956bdf1a8ca6d074f3b/charts/images.yaml#L130-L133">example 1&lt;/a>, &lt;a href="https://github.com/gardener/gardener/blob/6a0fea86850ffec8937d1956bdf1a8ca6d074f3b/pkg/operation/botanist/metricsserver.go#L28-L31">example 2&lt;/a>, &lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/metricsserver/metrics_server.go#L82-L83">example 3&lt;/a>)&lt;/p>
&lt;p>We define all image references centrally in the &lt;a href="https://github.com/gardener/gardener/blob/master/imagevector/images.yaml">&lt;code>imagevector/images.yaml&lt;/code>&lt;/a> file.
Hence, the image references must not be hard-coded in the pod template spec but read from this so-called &lt;a href="https://gardener.cloud/docs/gardener/deployment/image_vector/">image vector&lt;/a> instead.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Do not use container images from Docker Hub&lt;/strong> (example: &lt;a href="https://github.com/gardener/gardener/blob/6f4e64fe9494cafb5c5da9a2c0a491a5690161b6/charts/images.yaml#L257-L260">image vector&lt;/a>, &lt;a href="https://github.com/gardener/ci-infra/blob/92782bedd92815639abf4dc14b2c484f77c6e57d/config/images/images.yaml#L7-L10">prow configuration&lt;/a>)&lt;/p>
&lt;p>The &lt;code>docker.io&lt;/code> registry doesn&amp;rsquo;t support pulling images over IPv6 (see &lt;a href="https://www.docker.com/blog/beta-ipv6-support-on-docker-hub-registry/">Beta IPv6 Support on Docker Hub Registry&lt;/a>).
There is also a strict &lt;a href="https://docs.docker.com/docker-hub/download-rate-limit/">rate-limit&lt;/a> that applies to the Docker Hub registry.
There is a &lt;a href="https://github.com/gardener/ci-infra/blob/92782bedd92815639abf4dc14b2c484f77c6e57d/config/jobs/ci-infra/copy-images.yaml">prow job&lt;/a> copying images from Docker Hub that are needed in gardener components to the gardener GCR under the prefix &lt;code>eu.gcr.io/gardener-project/3rd/&lt;/code> (see the &lt;a href="https://github.com/gardener/ci-infra/tree/master/config/images">documentation&lt;/a> or &lt;a href="https://github.com/gardener/ci-infra/issues/619">gardener/ci-infra#619&lt;/a>).
If you want to use a new image from Docker Hub or upgrade an already used image to a newer tag, please open a PR to the ci-infra repository that modifies the job&amp;rsquo;s list of images to copy: &lt;a href="https://github.com/gardener/ci-infra/blob/master/config/images/images.yaml">&lt;code>images.yaml&lt;/code>&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Use unique &lt;code>ConfigMap&lt;/code>s/&lt;code>Secret&lt;/code>s&lt;/strong> (&lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/kubescheduler/kube_scheduler.go#L183-L190">example 1&lt;/a>, &lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/kubescheduler/kube_scheduler.go#L353">example 2&lt;/a>)&lt;/p>
&lt;p>&lt;a href="https://kubernetes.io/docs/concepts/configuration/configmap/#configmap-immutable">Unique &lt;code>ConfigMap&lt;/code>s/&lt;code>Secret&lt;/code>s&lt;/a> are immutable for modification and have a unique name.
This has a couple of benefits, e.g. the &lt;code>kubelet&lt;/code> doesn&amp;rsquo;t watch these resources, and it is always clear which resource contains which data since it cannot be changed.
As a consequence, unique/immutable &lt;code>ConfigMap&lt;/code>s/&lt;code>Secret&lt;/code> are superior to checksum annotations on the pod templates.
Stale/unused &lt;code>ConfigMap&lt;/code>s/&lt;code>Secret&lt;/code>s are garbage-collected by &lt;code>gardener-resource-manager&lt;/code>&amp;rsquo;s &lt;a href="https://gardener.cloud/docs/gardener/concepts/resource-manager/#garbage-collector-for-immutable-configmapssecrets">GarbageCollector&lt;/a>.
There are utility functions (see examples above) for using unique &lt;code>ConfigMap&lt;/code>s/&lt;code>Secret&lt;/code>s in Golang components.
It is essential to inject the annotations into the workload resource to make the garbage-collection work.&lt;br>
Note that some &lt;code>ConfigMap&lt;/code>s/&lt;code>Secret&lt;/code>s should not be unique (e.g., those containing monitoring or logging configuration).
The reason is that the old revision stays in the cluster even if unused until the garbage-collector acts.
During this time, they would be wrongly aggregated to the full configuration.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Manage certificates/secrets via &lt;a href="https://github.com/gardener/gardener/tree/6a0fea86850ffec8937d1956bdf1a8ca6d074f3b/pkg/utils/secrets/manager">secrets manager&lt;/a>&lt;/strong> (&lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/metricsserver/metrics_server.go#L100-L109">example&lt;/a>)&lt;/p>
&lt;p>You should use the &lt;a href="https://gardener.cloud/docs/gardener/secrets_management/">secrets manager&lt;/a> for the management of any kind of credentials.
This makes sure that credentials rotation works out-of-the-box without you requiring to think about it.
Generally, do not use client certificates (see the &lt;a href="#security">Security section&lt;/a>).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Consider hibernation when calculating replica count&lt;/strong> (&lt;a href="https://github.com/gardener/gardener/blob/6a0fea86850ffec8937d1956bdf1a8ca6d074f3b/pkg/operation/botanist/kubescheduler.go#L36">example&lt;/a>)&lt;/p>
&lt;p>Shoot clusters can be &lt;a href="https://gardener.cloud/docs/gardener/shoot_hibernate/">hibernated&lt;/a> meaning that all control plane components in the shoot namespace in the seed cluster are scaled down to zero and all worker nodes are terminated.
If your component runs in the seed cluster then you have to consider this case and provide the proper replica count.
There is a utility function available (see example).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Ensure task dependencies are as precise as possible in shoot flows&lt;/strong> (&lt;a href="https://github.com/gardener/gardener/blob/6a0fea86850ffec8937d1956bdf1a8ca6d074f3b/pkg/gardenlet/controller/shoot/shoot/reconciler_reconcile.go#L508-L512">example 1&lt;/a>, &lt;a href="https://github.com/gardener/gardener/blob/6a0fea86850ffec8937d1956bdf1a8ca6d074f3b/pkg/gardenlet/controller/shoot/shoot/reconciler_delete.go#L368-L372">example 2&lt;/a>)&lt;/p>
&lt;p>Only define the minimum of needed dependency tasks in the &lt;a href="https://github.com/gardener/gardener/tree/6a0fea86850ffec8937d1956bdf1a8ca6d074f3b/pkg/gardenlet/controller/shoot/shoot">shoot reconciliation/deletion flows&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Handle shoot system components&lt;/strong>&lt;/p>
&lt;p>Shoot system components deployed by &lt;code>gardener-resource-manager&lt;/code> are labelled with &lt;code>resource.gardener.cloud/managed-by: gardener&lt;/code>. This makes Gardener adding required label selectors and tolerations so that non-&lt;code>DaemonSet&lt;/code> managed &lt;code>Pod&lt;/code>s will exclusively run on selected nodes (for more information, see &lt;a href="https://gardener.cloud/docs/gardener/concepts/resource-manager/#system-components-webhook">System Components Webhook&lt;/a>).
&lt;code>DaemonSet&lt;/code>s on the other hand, should generally tolerate any &lt;code>NoSchedule&lt;/code> or &lt;code>NoExecute&lt;/code> taints so that they can run on any &lt;code>Node&lt;/code>, regardless of user added taints.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="security">Security&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Use a &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/">dedicated &lt;code>ServiceAccount&lt;/code>&lt;/a> and disable auto-mount&lt;/strong> (&lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/metricsserver/metrics_server.go#L145-L151">example&lt;/a>)&lt;/p>
&lt;p>Components that need to talk to the API server of their runtime cluster must always use a dedicated &lt;code>ServiceAccount&lt;/code> (do not use &lt;code>default&lt;/code>), with &lt;code>automountServiceAccountToken&lt;/code> set to &lt;code>false&lt;/code>.
This makes &lt;code>gardener-resource-manager&lt;/code>&amp;rsquo;s &lt;a href="https://gardener.cloud/docs/gardener/concepts/resource-manager/#tokeninvalidator">TokenInvalidator&lt;/a> invalidate the static token secret and its &lt;a href="https://gardener.cloud/docs/gardener/concepts/resource-manager/#auto-mounting-projected-serviceaccount-tokens">&lt;code>ProjectedTokenMount&lt;/code> webhook&lt;/a> inject a projected token automatically.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Use shoot access tokens instead of a client certificates&lt;/strong> (&lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/kubescheduler/kube_scheduler.go#L234-L236">example&lt;/a>)&lt;/p>
&lt;p>For components that need to talk to a target cluster different from their runtime cluster (e.g., running in seed cluster but talking to shoot) the &lt;code>gardener-resource-manager&lt;/code>&amp;rsquo;s &lt;a href="https://gardener.cloud/docs/gardener/concepts/resource-manager/#tokenrequestor">TokenRequestor&lt;/a> should be used to manage a so-called &amp;ldquo;shoot access token&amp;rdquo;.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Define RBAC roles with minimal privileges&lt;/strong> (&lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/metricsserver/metrics_server.go#L153-L223">example&lt;/a>)&lt;/p>
&lt;p>The component&amp;rsquo;s &lt;code>ServiceAccount&lt;/code> (if it exists) should have as little privileges as possible.
Consequently, please define proper &lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/rbac/">RBAC roles&lt;/a> for it.
This might include a combination of &lt;code>ClusterRole&lt;/code>s and &lt;code>Role&lt;/code>s.
Please do not provide elevated privileges due to laziness (e.g., because there is already a &lt;code>ClusterRole&lt;/code> that can be extended vs. creating a &lt;code>Role&lt;/code> only when access to a single namespace is needed).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Use &lt;a href="https://kubernetes.io/docs/concepts/services-networking/network-policies/">&lt;code>NetworkPolicy&lt;/code>s&lt;/a> to restrict network traffic&lt;/strong>&lt;/p>
&lt;p>You should restrict both ingress and egress traffic to/from your component as much as possible to ensure that it only gets access to/from other components if really needed.
Gardener provides a few default policies for typical usage scenarios. For more information, see &lt;a href="https://gardener.cloud/docs/gardener/network_policies/">&lt;code>NetworkPolicy&lt;/code>s In Garden, Seed, Shoot Clusters&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Do not run components in privileged mode&lt;/strong> (&lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/nodelocaldns/nodelocaldns.go#L324-L328">example 1&lt;/a>, &lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/nodelocaldns/nodelocaldns.go#L501">example 2&lt;/a>)&lt;/p>
&lt;p>Avoid running components with &lt;code>privileged=true&lt;/code>. Instead, define the needed &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container">Linux capabilities&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Choose the proper Seccomp profile&lt;/strong> (&lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/nodelocaldns/nodelocaldns.go#L283-L287">example 1&lt;/a>, &lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/nginxingress/nginxingress.go#L447">example 2&lt;/a>)&lt;/p>
&lt;p>The &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-seccomp-profile-for-a-container">Seccomp profile&lt;/a> will be defaulted by &lt;code>gardener-resource-manager&lt;/code>&amp;rsquo;s SeccompProfile webhook which works well for the majority of components.
However, in some special cases you might need to overwrite it.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Define &lt;code>PodSecurityPolicy&lt;/code>s&lt;/strong> (&lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/vpnshoot/vpnshoot.go#L341-L412">example&lt;/a>)&lt;/p>
&lt;p>&lt;code>PodSecurityPolicy&lt;/code>s are deprecated, however Gardener still supports shoot clusters with older Kubernetes versions (&lt;a href="https://gardener.cloud/docs/gardener/supported_k8s_versions/">ref&lt;/a>).
To make sure that such clusters can run with &lt;code>.spec.kubernetes.allowPrivilegedContainers=false&lt;/code>, you have to define proper &lt;code>PodSecurityPolicy&lt;/code>s.
For more information, see &lt;a href="https://gardener.cloud/docs/gardener/pod-security/">Pod Security&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="high-availability--stability">High Availability / Stability&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Specify the component type label for high availability&lt;/strong> (&lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/kubescheduler/kube_scheduler.go#L241">example&lt;/a>)&lt;/p>
&lt;p>To support high-availability deployments, &lt;code>gardener-resource-manager&lt;/code>s &lt;a href="https://gardener.cloud/docs/gardener/concepts/resource-manager/#high-availability-config">HighAvailabilityConfig&lt;/a> webhook injects the proper specification like replica or topology spread constraints.
You only need to specify the type label. For more information, see &lt;a href="https://gardener.cloud/docs/gardener/high-availability/">High Availability Of Deployed Components&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Define a &lt;code>PodDisruptionBudget&lt;/code>&lt;/strong> (&lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/metricsserver/metrics_server.go#L384-L408">example&lt;/a>)&lt;/p>
&lt;p>Closely related to high availability but also to stability in general: The definition of a &lt;a href="https://kubernetes.io/docs/tasks/run-application/configure-pdb/">&lt;code>PodDisruptionBudget&lt;/code>&lt;/a> with &lt;code>maxUnavailable=1&lt;/code> should be provided by default.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Choose the right &lt;code>PriorityClass&lt;/code>&lt;/strong> (&lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/kubescheduler/kube_scheduler.go#L307">example&lt;/a>)&lt;/p>
&lt;p>Each cluster runs many components with different priorities.
Gardener provides a set of default &lt;a href="https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/#priorityclass">&lt;code>PriorityClass&lt;/code>es&lt;/a>. For more information, see &lt;a href="https://gardener.cloud/docs/gardener/priority-classes/">Priority Classes&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Consider defining liveness and readiness probes&lt;/strong> (&lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/metricsserver/metrics_server.go#L321-L344">example&lt;/a>)&lt;/p>
&lt;p>To ensure smooth rolling update behaviour, consider the definition of &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/">liveness and/or readiness probes&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Mark node-critical components&lt;/strong> (&lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/kubeproxy/resources.go#L328">example&lt;/a>)&lt;/p>
&lt;p>To ensure user workload pods are only scheduled to &lt;code>Nodes&lt;/code> where all node-critical components are ready, these components need to tolerate the &lt;code>node.gardener.cloud/critical-components-not-ready&lt;/code> taint (&lt;code>NoSchedule&lt;/code> effect).
Also, such &lt;code>DaemonSets&lt;/code> and the included &lt;code>PodTemplates&lt;/code> need to be labelled with &lt;code>node.gardener.cloud/critical-component=true&lt;/code>.
For more information, see &lt;a href="https://gardener.cloud/docs/gardener/node-readiness/">Readiness of Shoot Worker Nodes&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Consider making a &lt;code>Service&lt;/code> topology-aware&lt;/strong> (&lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/vpa/admissioncontroller.go#L154">example&lt;/a>)&lt;/p>
&lt;p>To reduce costs and to improve the network traffic latency in multi-zone Seed clusters, consider making a &lt;code>Service&lt;/code> topology-aware, if applicable. In short, when a &lt;code>Service&lt;/code> is topology-aware, Kubernetes routes network traffic to the &lt;code>Endpoint&lt;/code>s (&lt;code>Pod&lt;/code>s) which are located in the same zone where the traffic originated from. In this way, the cross availability zone traffic is avoided. See &lt;a href="https://gardener.cloud/docs/gardener/topology_aware_routing/">Topology-Aware Traffic Routing&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="scalability">Scalability&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Provide resource requirements&lt;/strong> (&lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/metricsserver/metrics_server.go#L345-L353">example&lt;/a>)&lt;/p>
&lt;p>All components should have &lt;a href="https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits">resource requirements&lt;/a>.
Generally, they should always request CPU and memory, while only memory shall be limited (no CPU limits!).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Define a &lt;code>VerticalPodAutoscaler&lt;/code>&lt;/strong> (&lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/metricsserver/metrics_server.go#L416-L444">example&lt;/a>)&lt;/p>
&lt;p>We typically perform vertical auto-scaling via the VPA managed by the &lt;a href="https://github.com/kubernetes/autoscaler/tree/master/vertical-pod-autoscaler">Kubernetes community&lt;/a>.
Each component should have a respective &lt;code>VerticalPodAutoscaler&lt;/code> with &amp;ldquo;min allowed&amp;rdquo; resources, &amp;ldquo;auto update mode&amp;rdquo;, and &amp;ldquo;requests only&amp;rdquo;-mode.
VPA is always enabled in garden or seed clusters, while it is optional for shoot clusters.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Define a &lt;code>HorizontalPodAutoscaler&lt;/code> if needed&lt;/strong> (&lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/coredns/coredns.go#L671-L726">example&lt;/a>)&lt;/p>
&lt;p>If your component is capable of scaling horizontally, you should consider defining a &lt;a href="https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/">&lt;code>HorizontalPodAutoscaler&lt;/code>&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="observability--operations-productivity">Observability / Operations Productivity&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Provide monitoring scrape config and alerting rules&lt;/strong> (&lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/coredns/monitoring.go">example 1&lt;/a>, &lt;a href="https://github.com/gardener/gardener/blob/6a0fea86850ffec8937d1956bdf1a8ca6d074f3b/pkg/operation/botanist/monitoring.go#L97">example 2&lt;/a>)&lt;/p>
&lt;p>Components should provide scrape configuration and alerting rules for Prometheus/Alertmanager if appropriate.
This should be done inside a dedicated &lt;code>monitoring.go&lt;/code> file.
Extensions should follow the guidelines described in &lt;a href="https://gardener.cloud/docs/gardener/extensions/logging-and-monitoring/#extensions-monitoring-integration">Extensions Monitoring Integration&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Provide logging parsers and filters&lt;/strong> (&lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/coredns/logging.go">example 1&lt;/a>, &lt;a href="https://github.com/gardener/gardener/blob/6a0fea86850ffec8937d1956bdf1a8ca6d074f3b/pkg/gardenlet/controller/seed/seed/reconciler_reconcile.go#L563">example 2&lt;/a>)&lt;/p>
&lt;p>Components should provide parsers and filters for fluent-bit, if appropriate.
This should be done inside a dedicated &lt;code>logging.go&lt;/code> file.
Extensions should follow the guidelines described in &lt;a href="https://gardener.cloud/docs/gardener/extensions/logging-and-monitoring/#fluent-bit-log-parsers-and-filters">Fluent-bit log parsers and filters&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Set the &lt;code>revisionHistoryLimit&lt;/code> to &lt;code>2&lt;/code> for &lt;code>Deployment&lt;/code>s&lt;/strong> (&lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/metricsserver/metrics_server.go#L272">example&lt;/a>)&lt;/p>
&lt;p>In order to allow easy inspection of two &lt;code>ReplicaSet&lt;/code>s to quickly find the changes that lead to a rolling update, the &lt;a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#revision-history-limit">revision history limit&lt;/a> should be set to &lt;code>2&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Define health checks&lt;/strong> (&lt;a href="https://github.com/gardener/gardener/blob/180951eac9b8183175d4dcadc305c7722ce8122d/pkg/gardenlet/controller/shoot/care/health.go#L763-L795">example 1&lt;/a>, &lt;a href="https://github.com/gardener/gardener/blob/180951eac9b8183175d4dcadc305c7722ce8122d/pkg/gardenlet/controller/seed/care/health.go#L48-L55">example 2&lt;/a>)&lt;/p>
&lt;p>&lt;code>gardenlet&lt;/code>&amp;rsquo;s &lt;a href="https://gardener.cloud/docs/gardener/concepts/gardenlet/#controllers">care controllers&lt;/a> regularly check the health status of system or control plane components.
You need to enhance the lists of components to check if your component related to the seed system or shoot control plane (shoot system components are automatically checked via their respective &lt;a href="https://gardener.cloud/docs/gardener/concepts/resource-manager/#managedresource-controller">&lt;code>ManagedResource&lt;/code> conditions&lt;/a>), see examples above.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Configure automatic restarts in shoot maintenance time window&lt;/strong> (&lt;a href="https://github.com/gardener/gardener/blob/b0de7db96ad436fe32c25daae5e8cb552dac351f/pkg/component/kubescheduler/kube_scheduler.go#L250">example 1&lt;/a>, &lt;a href="https://github.com/gardener/gardener/blob/6a0fea86850ffec8937d1956bdf1a8ca6d074f3b/pkg/operation/botanist/coredns.go#L90-L107">example 2&lt;/a>)&lt;/p>
&lt;p>Gardener offers to restart components during the maintenance time window. For more information, see &lt;a href="https://gardener.cloud/docs/gardener/shoot_maintenance/#restart-control-plane-controllers">Restart Control Plane Controllers&lt;/a> and &lt;a href="https://gardener.cloud/docs/gardener/shoot_maintenance/#restart-some-core-addons">Restart Some Core Addons&lt;/a>.
You can consider adding the needed label to your control plane component to get this automatic restart (probably not needed for most components).&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Docs: Configuration</title><link>https://gardener.cloud/docs/gardener/configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/configuration/</guid><description>
&lt;h1 id="gardener-configuration-and-usage">Gardener Configuration and Usage&lt;/h1>
&lt;p>Gardener automates the full lifecycle of Kubernetes clusters as a service.
Additionally, it has several extension points allowing external controllers to plug-in to the lifecycle.
As a consequence, there are several configuration options for the various custom resources that are partially required.&lt;/p>
&lt;p>This document describes the:&lt;/p>
&lt;ol>
&lt;li>&lt;a href="#configuration-and-usage-of-gardener-as-operatoradministrator">Configuration and usage of Gardener as operator/administrator&lt;/a>.&lt;/li>
&lt;li>&lt;a href="#configuration-and-usage-of-gardener-as-end-userstakeholdercustomer">Configuration and usage of Gardener as end-user/stakeholder/customer&lt;/a>.&lt;/li>
&lt;/ol>
&lt;h2 id="configuration-and-usage-of-gardener-as-operatoradministrator">Configuration and Usage of Gardener as Operator/Administrator&lt;/h2>
&lt;p>When we use the terms &amp;ldquo;operator/administrator&amp;rdquo;, we refer to both the people deploying and operating Gardener.
Gardener consists of the following components:&lt;/p>
&lt;ol>
&lt;li>&lt;code>gardener-apiserver&lt;/code>, a Kubernetes-native API extension that serves custom resources in the Kubernetes-style (like &lt;code>Seed&lt;/code>s and &lt;code>Shoot&lt;/code>s), and a component that contains multiple admission plugins.&lt;/li>
&lt;li>&lt;code>gardener-admission-controller&lt;/code>, an HTTP(S) server with several handlers to be used in a &lt;a href="https://github.com/gardener/gardener/blob/master/charts/gardener/controlplane/charts/application/templates/validatingwebhook-admission-controller.yaml">ValidatingWebhookConfiguration&lt;/a>.&lt;/li>
&lt;li>&lt;code>gardener-controller-manager&lt;/code>, a component consisting of multiple controllers that implement reconciliation and deletion flows for some of the custom resources (e.g., it contains the logic for maintaining &lt;code>Shoot&lt;/code>s, reconciling &lt;code>Project&lt;/code>s).&lt;/li>
&lt;li>&lt;code>gardener-scheduler&lt;/code>, a component that assigns newly created &lt;code>Shoot&lt;/code> clusters to appropriate &lt;code>Seed&lt;/code> clusters.&lt;/li>
&lt;li>&lt;code>gardenlet&lt;/code>, a component running in seed clusters and consisting out of multiple controllers that implement reconciliation and deletion flows for some of the custom resources (e.g., it contains the logic for reconciliation and deletion of &lt;code>Shoot&lt;/code>s).&lt;/li>
&lt;/ol>
&lt;p>Each of these components have various configuration options.
The &lt;code>gardener-apiserver&lt;/code> uses the standard API server library maintained by the Kubernetes community, and as such it mainly supports command line flags.
Other components use so-called componentconfig files that describe their configuration in a Kubernetes-style versioned object.&lt;/p>
&lt;h3 id="configuration-file-for-gardener-admission-controller">Configuration File for Gardener Admission Controller&lt;/h3>
&lt;p>The Gardener admission controller only supports one command line flag, which should be a path to a valid admission-controller configuration file.
Please take a look at this &lt;a href="https://github.com/gardener/gardener/blob/master/example/20-componentconfig-gardener-admission-controller.yaml">example configuration&lt;/a>.&lt;/p>
&lt;h3 id="configuration-file-for-gardener-controller-manager">Configuration File for Gardener Controller Manager&lt;/h3>
&lt;p>The Gardener controller manager only supports one command line flag, which should be a path to a valid controller-manager configuration file.
Please take a look at this &lt;a href="https://github.com/gardener/gardener/blob/master/example/20-componentconfig-gardener-controller-manager.yaml">example configuration&lt;/a>.&lt;/p>
&lt;h3 id="configuration-file-for-gardener-scheduler">Configuration File for Gardener Scheduler&lt;/h3>
&lt;p>The Gardener scheduler also only supports one command line flag, which should be a path to a valid scheduler configuration file.
Please take a look at this &lt;a href="https://github.com/gardener/gardener/blob/master/example/20-componentconfig-gardener-scheduler.yaml">example configuration&lt;/a>.
Information about the concepts of the Gardener scheduler can be found at &lt;a href="https://gardener.cloud/docs/gardener/concepts/scheduler/">Gardener Scheduler&lt;/a>.&lt;/p>
&lt;h3 id="configuration-file-for-gardenlet">Configuration File for gardenlet&lt;/h3>
&lt;p>The gardenlet also only supports one command line flag, which should be a path to a valid gardenlet configuration file.
Please take a look at this &lt;a href="https://github.com/gardener/gardener/blob/master/example/20-componentconfig-gardenlet.yaml">example configuration&lt;/a>.
Information about the concepts of the Gardenlet can be found at &lt;a href="https://gardener.cloud/docs/gardener/concepts/gardenlet/">gardenlet&lt;/a>.&lt;/p>
&lt;h3 id="system-configuration">System Configuration&lt;/h3>
&lt;p>After successful deployment of the four components, you need to setup the system.
Let&amp;rsquo;s first focus on some &amp;ldquo;static&amp;rdquo; configuration.
When the &lt;code>gardenlet&lt;/code> starts, it scans the &lt;code>garden&lt;/code> namespace of the garden cluster for &lt;code>Secret&lt;/code>s that have influence on its reconciliation loops, mainly the &lt;code>Shoot&lt;/code> reconciliation:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Internal domain secret&lt;/strong> - contains the DNS provider credentials (having appropriate privileges) which will be used to create/delete the so-called &amp;ldquo;internal&amp;rdquo; DNS records for the Shoot clusters, please see this &lt;a href="https://github.com/gardener/gardener/blob/master/example/10-secret-internal-domain.yaml">yaml file&lt;/a> for an example.&lt;/p>
&lt;ul>
&lt;li>This secret is used in order to establish a stable endpoint for shoot clusters, which is used internally by all control plane components.&lt;/li>
&lt;li>The DNS records are normal DNS records but called &amp;ldquo;internal&amp;rdquo; in our scenario because only the kubeconfigs for the control plane components use this endpoint when talking to the shoot clusters.&lt;/li>
&lt;li>It is forbidden to change the internal domain secret if there are existing shoot clusters.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Default domain secrets&lt;/strong> (optional) - contain the DNS provider credentials (having appropriate privileges) which will be used to create/delete DNS records for a default domain for shoots (e.g., &lt;code>example.com&lt;/code>), please see this &lt;a href="https://github.com/gardener/gardener/blob/master/example/10-secret-default-domain.yaml">yaml file&lt;/a> for an example.&lt;/p>
&lt;ul>
&lt;li>Not every end-user/stakeholder/customer has its own domain, however, Gardener needs to create a DNS record for every shoot cluster.&lt;/li>
&lt;li>As landscape operator you might want to define a default domain owned and controlled by you that is used for all shoot clusters that don&amp;rsquo;t specify their own domain.&lt;/li>
&lt;li>If you have multiple default domain secrets defined you can add a priority as an annotation (&lt;code>dns.gardener.cloud/domain-default-priority&lt;/code>) to select which domain should be used for new shoots during creation. The domain with the highest priority is selected during shoot creation. If there is no annotation defined, the default priority is &lt;code>0&lt;/code>, also all non integer values are considered as priority &lt;code>0&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Alerting secrets&lt;/strong> (optional) - contain the alerting configuration and credentials for the &lt;a href="https://prometheus.io/docs/alerting/alertmanager/">AlertManager&lt;/a> to send email alerts. It is also possible to configure the monitoring stack to send alerts to an AlertManager not deployed by Gardener to handle alerting. Please see this &lt;a href="https://github.com/gardener/gardener/blob/master/example/10-secret-alerting.yaml">yaml file&lt;/a> for an example.&lt;/p>
&lt;ul>
&lt;li>If email alerting is configured:
&lt;ul>
&lt;li>An AlertManager is deployed into each seed cluster that handles the alerting for all shoots on the seed cluster.&lt;/li>
&lt;li>Gardener will inject the SMTP credentials into the configuration of the AlertManager.&lt;/li>
&lt;li>The AlertManager will send emails to the configured email address in case any alerts are firing.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>If an external AlertManager is configured:
&lt;ul>
&lt;li>Each shoot has a &lt;a href="https://prometheus.io/docs/introduction/overview/">Prometheus&lt;/a> responsible for monitoring components and sending out alerts. The alerts will be sent to a URL configured in the alerting secret.&lt;/li>
&lt;li>This external AlertManager is not managed by Gardener and can be configured however the operator sees fit.&lt;/li>
&lt;li>Supported authentication types are no authentication, basic, or mutual TLS.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>OpenVPN Diffie-Hellmann Key secret&lt;/strong> (optional) - contains the self-generated Diffie-Hellmann key used by OpenVPN in your landscape, please see this &lt;a href="https://github.com/gardener/gardener/blob/master/example/10-secret-openvpn-diffie-hellman.yaml">yaml file&lt;/a> for an example.&lt;/p>
&lt;ul>
&lt;li>If you don&amp;rsquo;t specify a custom key, then a default key is used, but for productive landscapes it&amp;rsquo;s recommend to create a landscape-specific key and define it.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Global monitoring secrets&lt;/strong> (optional) - contains basic authentication credentials for the Prometheus aggregating metrics for all clusters.&lt;/p>
&lt;ul>
&lt;li>These secrets are synced to each seed cluster and used to gain access to the aggregate monitoring components.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Apart from this &amp;ldquo;static&amp;rdquo; configuration there are several custom resources extending the Kubernetes API and used by Gardener.
As an operator/administrator, you have to configure some of them to make the system work.&lt;/p>
&lt;h3 id="configuration-and-usage-of-gardener-as-end-userstakeholdercustomer">Configuration and Usage of Gardener as End-User/Stakeholder/Customer&lt;/h3>
&lt;p>As an end-user/stakeholder/customer, you are using a Gardener landscape that has been setup for you by another team.
You don&amp;rsquo;t need to care about how Gardener itself has to be configured or how it has to be deployed.
Take a look at &lt;a href="https://gardener.cloud/docs/gardener/concepts/apiserver/">Gardener API Server&lt;/a> - the topic describes which resources are offered by Gardener.
You may want to have a more detailed look for &lt;code>Project&lt;/code>s, &lt;code>SecretBinding&lt;/code>s, &lt;code>Shoot&lt;/code>s, and &lt;code>(Cluster)OpenIDConnectPreset&lt;/code>s.&lt;/p></description></item><item><title>Docs: Configuring Logging</title><link>https://gardener.cloud/docs/gardener/deployment/configuring_logging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/deployment/configuring_logging/</guid><description>
&lt;h1 id="configuring-the-logging-stack-via-gardenlet-configurations">Configuring the Logging Stack via gardenlet Configurations&lt;/h1>
&lt;h2 id="enable-the-logging">Enable the Logging&lt;/h2>
&lt;p>In order to install the Gardener logging stack, the &lt;code>logging.enabled&lt;/code> configuration option has to be enabled in the Gardenlet configuration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>logging:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> enabled: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>From now on, each Seed is going to have a logging stack which will collect logs from all pods and some systemd services. Logs related to Shoots with &lt;code>testing&lt;/code> purpose are dropped in the &lt;code>fluent-bit&lt;/code> output plugin. Shoots with a purpose different than &lt;code>testing&lt;/code> have the same type of log aggregator (but different instance) as the Seed. The logs can be viewed in the Plutono in the &lt;code>garden&lt;/code> namespace for the Seed components and in the respective shoot control plane namespaces.&lt;/p>
&lt;h2 id="enable-logs-from-the-shoots-node-systemd-services">Enable Logs from the Shoot&amp;rsquo;s Node systemd Services&lt;/h2>
&lt;p>The logs from the systemd services on each node can be retrieved by enabling the &lt;code>logging.shootNodeLogging&lt;/code> option in the gardenlet configuration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>logging:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> enabled: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> shootNodeLogging:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> shootPurposes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#a31515">&amp;#34;evaluation&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#a31515">&amp;#34;deployment&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Under the &lt;code>shootPurpose&lt;/code> section, just list all the shoot purposes for which the Shoot node logging feature will be enabled. Specifying the &lt;code>testing&lt;/code> purpose has no effect because this purpose prevents the logging stack installation.
Logs can be viewed in the operator Plutono!
The dedicated labels are &lt;code>unit&lt;/code>, &lt;code>syslog_identifier&lt;/code>, and &lt;code>nodename&lt;/code> in the &lt;code>Explore&lt;/code> menu.&lt;/p>
&lt;h2 id="configuring-central-vali-storage-capacity">Configuring Central Vali Storage Capacity&lt;/h2>
&lt;p>By default, the central Vali has &lt;code>100Gi&lt;/code> of storage capacity.
To overwrite the current central Vali storage capacity, the &lt;code>logging.vali.garden.storage&lt;/code> setting in the gardenlet&amp;rsquo;s component configuration should be altered.
If you need to increase it, you can do so without losing the current data by specifying a higher capacity. By doing so, the Vali&amp;rsquo;s &lt;code>PersistentVolume&lt;/code> capacity will be increased instead of deleting the current PV.
However, if you specify less capacity, then the &lt;code>PersistentVolume&lt;/code> will be deleted and with it the logs, too.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>logging:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> enabled: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vali:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> garden:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> storage: &lt;span style="color:#a31515">&amp;#34;200Gi&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Connectivity</title><link>https://gardener.cloud/docs/gardener/monitoring/connectivity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/monitoring/connectivity/</guid><description>
&lt;h1 id="connectivity">Connectivity&lt;/h1>
&lt;h2 id="shoot-connectivity">Shoot Connectivity&lt;/h2>
&lt;p>We measure the connectivity from the shoot to the API Server. This is done via the &lt;code>blackbox exporter&lt;/code> which is deployed in the shoot&amp;rsquo;s &lt;code>kube-system&lt;/code> namespace. Prometheus will scrape the &lt;code>blackbox exporter&lt;/code> and then the exporter will try to access the API Server. Metrics are exposed if the connection was successful or not. This can be seen in the &lt;code>Kubernetes Control Plane Status&lt;/code> dashboard under the &lt;code>API Server Connectivity&lt;/code> panel. The &lt;code>shoot&lt;/code> line represents the connectivity from the shoot.&lt;/p>
&lt;p>&lt;img src="https://gardener.cloud/__resources/panel_393a41.png" alt="image">&lt;/p>
&lt;h2 id="seed-connectivity">Seed Connectivity&lt;/h2>
&lt;p>In addition to the shoot connectivity, we also measure the seed connectivity. This means trying to reach the API Server from the seed via the external fully qualified domain name of the API server. The connectivity is also displayed in the above panel as the &lt;code>seed&lt;/code> line. Both &lt;code>seed&lt;/code> and &lt;code>shoot&lt;/code> connectivity are shown below.&lt;/p>
&lt;p>&lt;img src="https://gardener.cloud/__resources/connectivity_b79584.png" alt="image">&lt;/p></description></item><item><title>Docs: containerd Registry Configuration</title><link>https://gardener.cloud/docs/gardener/containerd-registry-configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/containerd-registry-configuration/</guid><description>
&lt;h1 id="containerd-registry-configuration">&lt;code>containerd&lt;/code> Registry Configuration&lt;/h1>
&lt;p>containerd supports configuring registries and mirrors. Using this native containerd feature, Shoot owners can configure containerd to use public or private mirrors for a given upstream registry. More details about the registry configuration can be found in the &lt;a href="https://github.com/containerd/containerd/blob/main/docs/hosts.md">corresponding upstream documentation&lt;/a>.&lt;/p>
&lt;h3 id="containerd-registry-configuration-patterns">&lt;code>containerd&lt;/code> Registry Configuration Patterns&lt;/h3>
&lt;p>At the time of writing this document, containerd support two patterns for configuring registries/mirrors.&lt;/p>
&lt;blockquote>
&lt;p>Note: Trying to use both of the patterns at the same time is not supported by containerd. Only one of the configuration patterns has to be followed strictly.&lt;/p>
&lt;/blockquote>
&lt;h5 id="old-and-deprecated-pattern">Old and Deprecated Pattern&lt;/h5>
&lt;p>The old and deprecated pattern is specifying &lt;code>registry.mirrors&lt;/code> and &lt;code>registry.configs&lt;/code> in the containerd&amp;rsquo;s config.toml file. See the &lt;a href="https://github.com/containerd/containerd/blob/main/docs/cri/registry.md">upstream documentation&lt;/a>.
Example of the old and deprecated pattern:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>version = 2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[plugins.&lt;span style="color:#a31515">&amp;#34;io.containerd.grpc.v1.cri&amp;#34;&lt;/span>.registry]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [plugins.&lt;span style="color:#a31515">&amp;#34;io.containerd.grpc.v1.cri&amp;#34;&lt;/span>.registry.mirrors]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [plugins.&lt;span style="color:#a31515">&amp;#34;io.containerd.grpc.v1.cri&amp;#34;&lt;/span>.registry.mirrors.&lt;span style="color:#a31515">&amp;#34;docker.io&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> endpoint = [&lt;span style="color:#a31515">&amp;#34;https://public-mirror.example.com&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In the above example, containerd is configured to first try to pull &lt;code>docker.io&lt;/code> images from a configured endpoint (&lt;code>https://public-mirror.example.com&lt;/code>). If the image is not available in &lt;code>https://public-mirror.example.com&lt;/code>, then containerd will fall back to the upstream registry (&lt;code>docker.io&lt;/code>) and will pull the image from there.&lt;/p>
&lt;h5 id="hosts-directory-pattern">Hosts Directory Pattern&lt;/h5>
&lt;p>The hosts directory pattern is the new and recommended pattern for configuring registries. It is available starting &lt;code>containerd@v1.5.0&lt;/code>. See the &lt;a href="https://github.com/containerd/containerd/blob/main/docs/hosts.md">upstream documentation&lt;/a>.
The above example in the hosts directory pattern looks as follows.
The &lt;code>/etc/containerd/config.toml&lt;/code> file has the following section:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>version = 2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[plugins.&lt;span style="color:#a31515">&amp;#34;io.containerd.grpc.v1.cri&amp;#34;&lt;/span>.registry]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> config_path = &lt;span style="color:#a31515">&amp;#34;/etc/containerd/certs.d&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The following hosts directory structure has to be created:&lt;/p>
&lt;pre tabindex="0">&lt;code>$ tree /etc/containerd/certs.d
/etc/containerd/certs.d
└── docker.io
└── hosts.toml
&lt;/code>&lt;/pre>&lt;p>Finally, for the &lt;code>docker.io&lt;/code> upstream registry, we configure a &lt;code>hosts.toml&lt;/code> file as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>server = &lt;span style="color:#a31515">&amp;#34;https://registry-1.docker.io&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[host.&lt;span style="color:#a31515">&amp;#34;http://public-mirror.example.com&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> capabilities = [&lt;span style="color:#a31515">&amp;#34;pull&amp;#34;&lt;/span>, &lt;span style="color:#a31515">&amp;#34;resolve&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="configuring-containerd-registries-for-a-shoot">Configuring &lt;code>containerd&lt;/code> Registries for a Shoot&lt;/h3>
&lt;blockquote>
&lt;p>Note: The below-described functionality is provided by the &lt;code>ContainerdRegistryHostsDir&lt;/code> feature gate in gardenlet.&lt;/p>
&lt;/blockquote>
&lt;p>Gardener supports configuring &lt;code>containerd&lt;/code> registries on a Shoot using the new &lt;a href="https://github.com/containerd/containerd/blob/main/docs/hosts.md">hosts directory pattern&lt;/a>. For each Shoot Node, Gardener creates the &lt;code>/etc/containerd/certs.d&lt;/code> directory and adds the following section to the containerd&amp;rsquo;s &lt;code>/etc/containerd/config.toml&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>[plugins.&lt;span style="color:#a31515">&amp;#34;io.containerd.grpc.v1.cri&amp;#34;&lt;/span>.registry] &lt;span style="color:#008000"># gardener-managed&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> config_path = &lt;span style="color:#a31515">&amp;#34;/etc/containerd/certs.d&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This allows Shoot owners to use the &lt;a href="https://github.com/containerd/containerd/blob/main/docs/hosts.md">hosts directory pattern&lt;/a> to configure registries for containerd. To do this, the Shoot owners need to create a directory under &lt;code>/etc/containerd/certs.d&lt;/code> that is named with the upstream registry host name. In the newly created directory, a &lt;code>hosts.toml&lt;/code> file needs to be created. For more details, see the &lt;a href="#hosts-directory-pattern">hosts directory pattern section&lt;/a> and the &lt;a href="https://github.com/containerd/containerd/blob/main/docs/hosts.md">upstream documentation&lt;/a>.&lt;/p>
&lt;h3 id="the-registry-cache-extension">The registry-cache Extension&lt;/h3>
&lt;p>&lt;a href="#configuring-containerd-registries-for-a-shoot">Configuring &lt;code>containerd&lt;/code> registries for a Shoot&lt;/a> won&amp;rsquo;t be the recommended approach for configuring a pull through cache for a Shoot in near future. There is a Gardener-native extension named &lt;a href="https://github.com/gardener/gardener-extension-registry-cache">registry-cache&lt;/a> that manages a pull through cache for a Shoot using the upstream &lt;a href="https://github.com/distribution/distribution">distribution/distribution&lt;/a> project.&lt;/p>
&lt;blockquote>
&lt;p>Note: The &lt;a href="https://github.com/gardener/gardener-extension-registry-cache">registry-cache&lt;/a> extension is currently under active development and not recommended for productive usage.&lt;/p>
&lt;/blockquote>
&lt;h3 id="migration">Migration&lt;/h3>
&lt;p>This section describe the migration process from the old and deprecated pattern to the hosts directory pattern for a Shoot cluster.&lt;/p>
&lt;p>Let&amp;rsquo;s assume that the following &lt;code>containerd&lt;/code> registries configuration using the old and deprecated pattern is being configured (for example via DaemonSet) for a Shoot:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>version = 2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[plugins.&lt;span style="color:#a31515">&amp;#34;io.containerd.grpc.v1.cri&amp;#34;&lt;/span>.registry]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [plugins.&lt;span style="color:#a31515">&amp;#34;io.containerd.grpc.v1.cri&amp;#34;&lt;/span>.registry.mirrors]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [plugins.&lt;span style="color:#a31515">&amp;#34;io.containerd.grpc.v1.cri&amp;#34;&lt;/span>.registry.mirrors.&lt;span style="color:#a31515">&amp;#34;docker.io&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> endpoint = [&lt;span style="color:#a31515">&amp;#34;https://public-mirror.example.com&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The migration steps are as follows:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>The &lt;code>containerd&lt;/code> registries configuration has to be adapted to the hosts directory pattern.&lt;/p>
&lt;p>1.1 The &lt;code>/etc/containerd/config.toml&lt;/code> file needs to be adapted as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>version = 2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[plugins.&lt;span style="color:#a31515">&amp;#34;io.containerd.grpc.v1.cri&amp;#34;&lt;/span>.registry]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> config_path = &lt;span style="color:#a31515">&amp;#34;/etc/containerd/certs.d&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>1.2 The appropriate directory structure and &lt;code>hosts.toml&lt;/code> file has to be created as described in the &lt;a href="#hosts-directory-pattern">hosts directory pattern section&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>When the &lt;code>ContainerdRegistryHostsDir&lt;/code> feature gate is GA, then the machinery that performs step 1.1 can be removed. A Shoot cluster can rely that the &lt;code>config_path&lt;/code> will be always set by gardenlet.&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Docs: ContainerRuntime</title><link>https://gardener.cloud/docs/gardener/extensions/containerruntime/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/extensions/containerruntime/</guid><description>
&lt;h1 id="gardener-container-runtime-extension">Gardener Container Runtime Extension&lt;/h1>
&lt;p>At the lowest layers of a Kubernetes node is the software that, among other things, starts and stops containers. It is called “Container Runtime”.
The most widely known container runtime is Docker, but it is not alone in this space. In fact, the container runtime space has been rapidly evolving.&lt;/p>
&lt;p>Kubernetes supports different container runtimes using Container Runtime Interface (CRI) – a plugin interface which enables kubelet to use a wide variety of container runtimes.&lt;/p>
&lt;p>Gardener supports creation of Worker machines using CRI. For more information, see &lt;a href="https://gardener.cloud/docs/gardener/extensions/operatingsystemconfig/#cri-support">CRI Support&lt;/a>.&lt;/p>
&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;p>Prior to the &lt;code>Container Runtime Extensibility&lt;/code> concept, Gardener used Docker as the only
container runtime to use in shoot worker machines. Because of the wide variety of different container runtimes
offering multiple important features (for example, enhanced security concepts), it is important to enable end users to use other container runtimes as well.&lt;/p>
&lt;h2 id="the-containerruntime-extension-resource">The &lt;code>ContainerRuntime&lt;/code> Extension Resource&lt;/h2>
&lt;p>Here is what a typical &lt;code>ContainerRuntime&lt;/code> resource would look like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: ContainerRuntime
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: my-container-runtime
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> binaryPath: /var/bin/containerruntimes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: gvisor
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> workerPool:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: worker-ubuntu
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> selector:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> matchLabels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> worker.gardener.cloud/pool: worker-ubuntu
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Gardener deploys one &lt;code>ContainerRuntime&lt;/code> resource per worker pool per CRI.
To exemplify this, consider a Shoot having two worker pools (&lt;code>worker-one&lt;/code>, &lt;code>worker-two&lt;/code>) using &lt;code>containerd&lt;/code> as the CRI as well as &lt;code>gvisor&lt;/code> and &lt;code>kata&lt;/code> as enabled container runtimes.
Gardener would deploy four &lt;code>ContainerRuntime&lt;/code> resources. For &lt;code>worker-one&lt;/code>: one &lt;code>ContainerRuntime&lt;/code> for type &lt;code>gvisor&lt;/code> and one for type &lt;code>kata&lt;/code>. The same resource are being deployed for &lt;code>worker-two&lt;/code>.&lt;/p>
&lt;h2 id="supporting-a-new-container-runtime-provider">Supporting a New Container Runtime Provider&lt;/h2>
&lt;p>To add support for another container runtime (e.g., gvisor, kata-containers), a container runtime extension controller needs to be implemented. It should support Gardener&amp;rsquo;s supported CRI plugins.&lt;/p>
&lt;p>The container runtime extension should install the necessary resources into the shoot cluster (e.g., &lt;code>RuntimeClass&lt;/code>es), and it should copy the runtime binaries to the relevant worker machines in path: &lt;code>spec.binaryPath&lt;/code>.
Gardener labels the shoot nodes according to the CRI configured: &lt;code>worker.gardener.cloud/cri-name=&amp;lt;value&amp;gt;&lt;/code> (e.g &lt;code>worker.gardener.cloud/cri-name=containerd&lt;/code>) and multiple labels for each of the container runtimes configured for the shoot Worker machine:
&lt;code>containerruntime.worker.gardener.cloud/&amp;lt;container-runtime-type-value&amp;gt;=true&lt;/code> (e.g &lt;code>containerruntime.worker.gardener.cloud/gvisor=true&lt;/code>).
The way to install the binaries is by creating a daemon set which copies the binaries from an image in a docker registry to the relevant labeled Worker&amp;rsquo;s nodes (avoid downloading binaries from the internet to also cater with isolated environments).&lt;/p>
&lt;p>For additional reference, please have a look at the &lt;a href="https://github.com/gardener/gardener-extension-runtime-gvisor">runtime-gvsior&lt;/a> provider extension, which provides more information on how to configure the necessary charts, as well as the actuators required to reconcile container runtime inside the &lt;code>Shoot&lt;/code> cluster to the desired state.&lt;/p></description></item><item><title>Docs: Control Plane Endpoints And Ports</title><link>https://gardener.cloud/docs/gardener/control-plane-endpoints-and-ports/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/control-plane-endpoints-and-ports/</guid><description>
&lt;h1 id="endpoints-and-ports-of-a-shoot-control-plane">Endpoints and Ports of a Shoot Control-Plane&lt;/h1>
&lt;p>With the &lt;a href="https://gardener.cloud/docs/gardener/reversed-vpn-tunnel/">reversed VPN&lt;/a> tunnel, there are no endpoints with open ports in the shoot cluster required by Gardener.
In order to allow communication to the shoots control-plane in the seed cluster, there are endpoints shared by multiple shoots of a seed cluster.
Depending on the configured zones or &lt;a href="https://gardener.cloud/docs/gardener/exposureclasses/">exposure classes&lt;/a>, there are different endpoints in a seed cluster. The IP address(es) can be determined by a DNS query for the API Server URL.
The main entry-point into the seed cluster is the load balancer of the Istio ingress-gateway service. Depending on the infrastructure provider, there can be one IP address per zone.&lt;/p>
&lt;p>The load balancer of the Istio ingress-gateway service exposes the following TCP ports:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>443&lt;/strong> for requests to the shoot API Server. The request is dispatched according to the set TLS SNI extension.&lt;/li>
&lt;li>&lt;strong>8443&lt;/strong> for requests to the shoot API Server via &lt;code>api-server-proxy&lt;/code>, dispatched based on the proxy protocol target, which is the IP address of &lt;code>kubernetes.default.svc.cluster.local&lt;/code> in the shoot.&lt;/li>
&lt;li>&lt;strong>8132&lt;/strong> to establish the reversed VPN connection. It&amp;rsquo;s dispatched according to an HTTP header value.&lt;/li>
&lt;/ul>
&lt;h2 id="kube-apiserver-via-sni">&lt;code>kube-apiserver&lt;/code> via SNI&lt;/h2>
&lt;p>&lt;img src="https://gardener.cloud/__resources/api-server-sni_feb16f.png" alt="kube-apiserver via SNI">&lt;/p>
&lt;p>DNS entries for &lt;code>api.&amp;lt;external-domain&amp;gt;&lt;/code> and &lt;code>api.&amp;lt;shoot&amp;gt;.&amp;lt;project&amp;gt;.&amp;lt;internal-domain&amp;gt;&lt;/code> point to the load balancer of an Istio ingress-gateway service.
The Kubernetes client sets the server name to &lt;code>api.&amp;lt;external-domain&amp;gt;&lt;/code> or &lt;code>api.&amp;lt;shoot&amp;gt;.&amp;lt;project&amp;gt;.&amp;lt;internal-domain&amp;gt;&lt;/code>.
Based on SNI, the connection is forwarded to the respective API Server at TCP layer. There is no TLS termination at the Istio ingress-gateway.
TLS termination happens on the shoots API Server. Traffic is end-to-end encrypted between the client and the API Server. The certificate authority and authentication are defined in the corresponding &lt;code>kubeconfig&lt;/code>.
Details can be found in &lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/08-shoot-apiserver-via-sni.md">GEP-08&lt;/a>.&lt;/p>
&lt;h2 id="kube-apiserver-via-apiserver-proxy">&lt;code>kube-apiserver&lt;/code> via &lt;code>apiserver-proxy&lt;/code>&lt;/h2>
&lt;p>&lt;img src="https://gardener.cloud/__resources/api-server-proxy_b419fc.png" alt="apiserver-proxy">&lt;/p>
&lt;p>Inside the shoot cluster, the API Server can also be reached by the cluster internal name &lt;code>kubernetes.default.svc.cluster.local&lt;/code>.
The pods &lt;code>apiserver-proxy&lt;/code> are deployed in the host network as daemonset and intercept connections to the Kubernetes service IP address.
The destination address is changed to the cluster IP address of the service &lt;code>kube-apiserver.&amp;lt;shoot-namespace&amp;gt;.svc.cluster.local&lt;/code> in the seed cluster.
The connections are forwarded via the &lt;a href="https://www.envoyproxy.io/docs/envoy/latest/configuration/listeners/listener_filters/proxy_protocol">HaProxy Proxy Protocol&lt;/a> to the Istio ingress-gateway in the seed cluster.
The Istio ingress-gateway forwards the connection to the respective shoot API Server by it&amp;rsquo;s cluster IP address.
As TLS termination happens at the API Server, the traffic is end-to-end encrypted the same way as with SNI.&lt;/p>
&lt;p>Details can be found in &lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/11-apiserver-network-proxy.md">GEP-11&lt;/a>.&lt;/p>
&lt;h2 id="reversed-vpn-tunnel">Reversed VPN Tunnel&lt;/h2>
&lt;p>&lt;img src="https://gardener.cloud/__resources/reversed-vpn_e89ad6.png" alt="Reversed VPN">&lt;/p>
&lt;p>As the API Server has to be able to connect to endpoints in the shoot cluster, a VPN connection is established.
This VPN connection is initiated from a VPN client in the shoot cluster.
The VPN client connects to the Istio ingress-gateway and is forwarded to the VPN server in the control-plane namespace of the shoot.
Once the VPN tunnel between the VPN client in the shoot and the VPN server in the seed cluster is established, the API Server can connect to nodes, services and pods in the shoot cluster.&lt;/p>
&lt;p>More details can be found in the &lt;a href="https://gardener.cloud/docs/gardener/reversed-vpn-tunnel/">usage document&lt;/a> and &lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/14-reversed-cluster-vpn.md">GEP-14&lt;/a>.&lt;/p></description></item><item><title>Docs: Control Plane Migration</title><link>https://gardener.cloud/docs/gardener/control_plane_migration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/control_plane_migration/</guid><description>
&lt;h1 id="control-plane-migration">Control Plane Migration&lt;/h1>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>Also, the involved Seeds need to have enabled &lt;code>BackupBucket&lt;/code>s.&lt;/p>
&lt;h2 id="shootstate">ShootState&lt;/h2>
&lt;p>&lt;code>ShootState&lt;/code> is an API resource which stores non-reconstructible state and data required to completely recreate a &lt;code>Shoot&lt;/code>&amp;rsquo;s control plane on a new &lt;code>Seed&lt;/code>. The &lt;code>ShootState&lt;/code> resource is created on &lt;code>Shoot&lt;/code> creation in its &lt;code>Project&lt;/code> namespace and the required state/data is persisted during &lt;code>Shoot&lt;/code> creation or reconciliation.&lt;/p>
&lt;h2 id="shoot-control-plane-migration">Shoot Control Plane Migration&lt;/h2>
&lt;p>Triggering the migration is done by changing the &lt;code>Shoot&lt;/code>&amp;rsquo;s &lt;code>.spec.seedName&lt;/code> to a &lt;code>Seed&lt;/code> that differs from the &lt;code>.status.seedName&lt;/code>, we call this &lt;code>Seed&lt;/code> a &lt;code>&amp;quot;Destination Seed&amp;quot;&lt;/code>. This action can only be performed by an operator with the necessary RBAC. If the Destination &lt;code>Seed&lt;/code> does not have a backup and restore configuration, the change to &lt;code>spec.seedName&lt;/code> is rejected. Additionally, this Seed must not be set for deletion and must be healthy.&lt;/p>
&lt;p>If the &lt;code>Shoot&lt;/code> has different &lt;code>.spec.seedName&lt;/code> and &lt;code>.status.seedName&lt;/code>, a process is started to prepare the Control Plane for migration:&lt;/p>
&lt;ol>
&lt;li>&lt;code>.status.lastOperation&lt;/code> is changed to &lt;code>Migrate&lt;/code>.&lt;/li>
&lt;li>Kubernetes API Server is stopped and the extension resources are annotated with &lt;code>gardener.cloud/operation=migrate&lt;/code>.&lt;/li>
&lt;li>Full snapshot of the ETCD is created and terminating of the Control Plane in the &lt;code>Source Seed&lt;/code> is initiated.&lt;/li>
&lt;/ol>
&lt;p>If the process is successful, we update the status of the &lt;code>Shoot&lt;/code> by setting the &lt;code>.status.seedName&lt;/code> to the null value. That way, a restoration is triggered in the &lt;code>Destination Seed&lt;/code> and &lt;code>.status.lastOperation&lt;/code> is changed to &lt;code>Restore&lt;/code>. The control plane migration is completed when the &lt;code>Restore&lt;/code> operation has completed successfully.&lt;/p>
&lt;p>The etcd backups will be copied over to the &lt;code>BackupBucket&lt;/code> of the &lt;code>Destination Seed&lt;/code> during control plane migration and any future backups will be uploaded there.&lt;/p>
&lt;h2 id="triggering-the-migration">Triggering the Migration&lt;/h2>
&lt;p>For controlplane migration, operators with the necessary RBAC can use the &lt;a href="https://gardener.cloud/docs/gardener/concepts/scheduler/#shootsbinding-subresource">&lt;code>shoots/binding&lt;/code>&lt;/a> subresource to change the &lt;code>.spec.seedName&lt;/code>, with the following commands:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>export NAMESPACE=my-namespace
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export SHOOT_NAME=my-shoot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kubectl get --raw /apis/core.gardener.cloud/v1beta1/namespaces/&lt;span style="color:#a31515">${&lt;/span>NAMESPACE&lt;span style="color:#a31515">}&lt;/span>/shoots/&lt;span style="color:#a31515">${&lt;/span>SHOOT_NAME&lt;span style="color:#a31515">}&lt;/span> | jq -c &lt;span style="color:#a31515">&amp;#39;.spec.seedName = &amp;#34;&amp;lt;destination-seed&amp;gt;&amp;#34;&amp;#39;&lt;/span> | kubectl replace --raw /apis/core.gardener.cloud/v1beta1/namespaces/&lt;span style="color:#a31515">${&lt;/span>NAMESPACE&lt;span style="color:#a31515">}&lt;/span>/shoots/&lt;span style="color:#a31515">${&lt;/span>SHOOT_NAME&lt;span style="color:#a31515">}&lt;/span>/binding -f - | jq -r &lt;span style="color:#a31515">&amp;#39;.spec.seedName&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Controller Manager</title><link>https://gardener.cloud/docs/gardener/concepts/controller-manager/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/concepts/controller-manager/</guid><description>
&lt;h1 id="gardener-controller-manager">Gardener Controller Manager&lt;/h1>
&lt;p>The &lt;code>gardener-controller-manager&lt;/code> (often refered to as &amp;ldquo;GCM&amp;rdquo;) is a component that runs next to the Gardener API server, similar to the Kubernetes Controller Manager.
It runs several controllers that do not require talking to any seed or shoot cluster.
Also, as of today, it exposes an HTTP server that is serving several health check endpoints and metrics.&lt;/p>
&lt;p>This document explains the various functionalities of the &lt;code>gardener-controller-manager&lt;/code> and their purpose.&lt;/p>
&lt;h2 id="controllers">Controllers&lt;/h2>
&lt;h3 id="bastion-controllerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollerbastion">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/bastion">&lt;code>Bastion&lt;/code> Controller&lt;/a>&lt;/h3>
&lt;p>&lt;code>Bastion&lt;/code> resources have a limited lifetime which can be extended up to a certain amount by performing a heartbeat on them.
The &lt;code>Bastion&lt;/code> controller is responsible for deleting expired or rotten &lt;code>Bastion&lt;/code>s.&lt;/p>
&lt;ul>
&lt;li>&amp;ldquo;expired&amp;rdquo; means a &lt;code>Bastion&lt;/code> has exceeded its &lt;code>status.expirationTimestamp&lt;/code>.&lt;/li>
&lt;li>&amp;ldquo;rotten&amp;rdquo; means a &lt;code>Bastion&lt;/code> is older than the configured &lt;code>maxLifetime&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>The &lt;code>maxLifetime&lt;/code> defaults to 24 hours and is an option in the &lt;code>BastionControllerConfiguration&lt;/code> which is part of &lt;code>gardener-controller-manager&lt;/code>s &lt;code>ControllerManagerControllerConfiguration&lt;/code>, see &lt;a href="https://github.com/gardener/gardener/blob/master/example/20-componentconfig-gardener-controller-manager.yaml">the example config file&lt;/a> for details.&lt;/p>
&lt;p>The controller also deletes &lt;code>Bastion&lt;/code>s in case the referenced &lt;code>Shoot&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>no longer exists&lt;/li>
&lt;li>is marked for deletion (i.e., have a non-&lt;code>nil&lt;/code> &lt;code>.metadata.deletionTimestamp&lt;/code>)&lt;/li>
&lt;li>was migrated to another seed (i.e., &lt;code>Shoot.spec.seedName&lt;/code> is different than &lt;code>Bastion.spec.seedName&lt;/code>).&lt;/li>
&lt;/ul>
&lt;p>The deletion of &lt;code>Bastion&lt;/code>s triggers the &lt;code>gardenlet&lt;/code> to perform the necessary cleanups in the Seed cluster, so some time can pass between deletion and the &lt;code>Bastion&lt;/code> actually disappearing.
Clients like &lt;code>gardenctl&lt;/code> are advised to not re-use &lt;code>Bastion&lt;/code>s whose deletion timestamp has been set already.&lt;/p>
&lt;p>Refer to &lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/15-manage-bastions-and-ssh-key-pair-rotation.md">GEP-15&lt;/a> for more information on the lifecycle of
&lt;code>Bastion&lt;/code> resources.&lt;/p>
&lt;h3 id="certificatesigningrequest-controllerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollercertificatesigningrequest">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/certificatesigningrequest">&lt;code>CertificateSigningRequest&lt;/code> Controller&lt;/a>&lt;/h3>
&lt;p>After the &lt;a href="https://gardener.cloud/docs/gardener/concepts/gardenlet/">gardenlet&lt;/a> gets deployed on the Seed cluster, it needs to establish itself as a trusted party to communicate with the Gardener API server. It runs through a bootstrap flow similar to the &lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/kubelet-tls-bootstrapping/">kubelet bootstrap&lt;/a> process.&lt;/p>
&lt;p>On startup, the gardenlet uses a &lt;code>kubeconfig&lt;/code> with a &lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/">bootstrap token&lt;/a> which authenticates it as being part of the &lt;code>system:bootstrappers&lt;/code> group. This kubeconfig is used to create a &lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests/">&lt;code>CertificateSigningRequest&lt;/code>&lt;/a> (CSR) against the Gardener API server.&lt;/p>
&lt;p>The controller in &lt;code>gardener-controller-manager&lt;/code> checks whether the &lt;code>CertificateSigningRequest&lt;/code> has the expected organisation, common name and usages which the gardenlet would request.&lt;/p>
&lt;p>It only auto-approves the CSR if the client making the request is allowed to &amp;ldquo;create&amp;rdquo; the
&lt;code>certificatesigningrequests/seedclient&lt;/code> subresource. Clients with the &lt;code>system:bootstrappers&lt;/code> group are bound to the &lt;code>gardener.cloud:system:seed-bootstrapper&lt;/code> &lt;code>ClusterRole&lt;/code>, hence, they have such privileges. As the bootstrap kubeconfig for the gardenlet contains a bootstrap token which is authenticated as being part of the &lt;a href="https://github.com/gardener/gardener/blob/master/charts/gardener/controlplane/charts/application/templates/clusterrolebinding-seed-bootstrapper.yaml">&lt;code>systems:bootstrappers&lt;/code> group&lt;/a>, its created CSR gets auto-approved.&lt;/p>
&lt;h3 id="cloudprofile-controllerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollercloudprofile">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/cloudprofile">&lt;code>CloudProfile&lt;/code> Controller&lt;/a>&lt;/h3>
&lt;p>&lt;code>CloudProfile&lt;/code>s are essential when it comes to reconciling &lt;code>Shoot&lt;/code>s since they contain constraints (like valid machine types, Kubernetes versions, or machine images) and sometimes also some global configuration for the respective environment (typically via provider-specific configuration in &lt;code>.spec.providerConfig&lt;/code>).&lt;/p>
&lt;p>Consequently, to ensure that &lt;code>CloudProfile&lt;/code>s in-use are always present in the system until the last referring &lt;code>Shoot&lt;/code> gets deleted, the controller adds a finalizer which is only released when there is no &lt;code>Shoot&lt;/code> referencing the &lt;code>CloudProfile&lt;/code> anymore.&lt;/p>
&lt;h3 id="controllerdeployment-controllerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollercontrollerdeployment">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/controllerdeployment">&lt;code>ControllerDeployment&lt;/code> Controller&lt;/a>&lt;/h3>
&lt;p>Extensions are registered in the garden cluster via &lt;code>ControllerRegistration&lt;/code> and deployment of respective extensions are specified via &lt;code>ControllerDeployment&lt;/code>. For more info refer to &lt;a href="https://gardener.cloud/docs/gardener/extensions/controllerregistration/">Registering Extension Controllers&lt;/a>.&lt;/p>
&lt;p>This controller ensures that &lt;code>ControllerDeployment&lt;/code> in-use always exists until the last &lt;code>ControllerRegistration&lt;/code> referencing them gets deleted. The controller adds a finalizer which is only released when there is no &lt;code>ControllerRegistration&lt;/code> referencing the &lt;code>ControllerDeployment&lt;/code> anymore.&lt;/p>
&lt;h3 id="controllerregistration-controllerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollercontrollerregistration">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/controllerregistration">&lt;code>ControllerRegistration&lt;/code> Controller&lt;/a>&lt;/h3>
&lt;p>The &lt;code>ControllerRegistration&lt;/code> controller makes sure that the required &lt;a href="https://gardener.cloud/docs/gardener/#extensions">Gardener Extensions&lt;/a> specified by the &lt;a href="https://gardener.cloud/docs/gardener/extensions/controllerregistration/">&lt;code>ControllerRegistration&lt;/code>&lt;/a> resources are present in the seed clusters.
It also takes care of the creation and deletion of &lt;code>ControllerInstallation&lt;/code> objects for a given seed cluster.
The controller has three reconciliation loops.&lt;/p>
&lt;h4 id="main-reconcilerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollercontrollerregistrationseed">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/controllerregistration/seed">&amp;ldquo;Main&amp;rdquo; Reconciler&lt;/a>&lt;/h4>
&lt;p>This reconciliation loop watches the &lt;code>Seed&lt;/code> objects and determines which &lt;code>ControllerRegistration&lt;/code>s are required for them and reconciles the corresponding &lt;code>ControllerInstallation&lt;/code> resources to reach the determined state.
To begin with, it computes the kind/type combinations of extensions required for the seed.
For this, the controller examines a live list of &lt;code>ControllerRegistration&lt;/code>s, &lt;code>ControllerInstallation&lt;/code>s, &lt;code>BackupBucket&lt;/code>s, &lt;code>BackupEntry&lt;/code>s, &lt;code>Shoot&lt;/code>s, and &lt;code>Secret&lt;/code>s from the garden cluster.
For example, it examines the shoots running on the seed and deducts the kind/type, like &lt;code>Infrastructure/gcp&lt;/code>.
The seed (&lt;code>seed.spec.provider.type&lt;/code>) and DNS (&lt;code>seed.spec.dns.provider.type&lt;/code>) provider types are considered when calculating the list of required &lt;code>ControllerRegistration&lt;/code>s, as well.
It also decides whether they should always be deployed based on the &lt;code>.spec.deployment.policy&lt;/code>.
For the configuration options, please see this &lt;a href="https://gardener.cloud/docs/gardener/extensions/controllerregistration/#deployment-configuration-options">section&lt;/a>.&lt;/p>
&lt;p>Based on these required combinations, each of them are mapped to &lt;code>ControllerRegistration&lt;/code> objects and then to their corresponding &lt;code>ControllerInstallation&lt;/code> objects (if existing).
The controller then creates or updates the required &lt;code>ControllerInstallation&lt;/code> objects for the given seed.
It also deletes every existing &lt;code>ControllerInstallation&lt;/code> whose referenced &lt;code>ControllerRegistration&lt;/code> is not part of the required list.
For example, if the shoots in the seed are no longer using the DNS provider &lt;code>aws-route53&lt;/code>, then the controller proceeds to delete the respective &lt;code>ControllerInstallation&lt;/code> object.&lt;/p>
&lt;h4 id="controllerregistration-finalizer-reconcilerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollercontrollerregistrationcontrollerregistrationfinalizer">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/controllerregistration/controllerregistrationfinalizer">&amp;ldquo;ControllerRegistration Finalizer&amp;rdquo; Reconciler&lt;/a>&lt;/h4>
&lt;p>This reconciliation loop watches the &lt;code>ControllerRegistration&lt;/code> resource and adds finalizers to it when they are created.
In case a deletion request comes in for the resource, i.e., if a &lt;code>.metadata.deletionTimestamp&lt;/code> is set, it actively scans for a &lt;code>ControllerInstallation&lt;/code> resource using this &lt;code>ControllerRegistration&lt;/code>, and decides whether the deletion can be allowed.
In case no related &lt;code>ControllerInstallation&lt;/code> is present, it removes the finalizer and marks it for deletion.&lt;/p>
&lt;h4 id="seed-finalizer-reconcilerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollercontrollerregistrationseedfinalizer">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/controllerregistration/seedfinalizer">&amp;ldquo;Seed Finalizer&amp;rdquo; Reconciler&lt;/a>&lt;/h4>
&lt;p>This loop also watches the &lt;code>Seed&lt;/code> object and adds finalizers to it at creation.
If a &lt;code>.metadata.deletionTimestamp&lt;/code> is set for the seed, then the controller checks for existing &lt;code>ControllerInstallation&lt;/code> objects which reference this seed.
If no such objects exist, then it removes the finalizer and allows the deletion.&lt;/p>
&lt;h3 id="event-controllerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollerevent">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/event">&lt;code>Event&lt;/code> Controller&lt;/a>&lt;/h3>
&lt;p>With the Gardener Event Controller, you can prolong the lifespan of events related to Shoot clusters.
This is an optional controller which will become active once you provide the below mentioned configuration.&lt;/p>
&lt;p>All events in K8s are deleted after a configurable time-to-live (controlled via a &lt;a href="https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/">kube-apiserver argument&lt;/a> called &lt;code>--event-ttl&lt;/code> (defaulting to 1 hour)).
The need to prolong the time-to-live for Shoot cluster events frequently arises when debugging customer issues on live systems.
This controller leaves events involving Shoots untouched, while deleting all other events after a configured time.
In order to activate it, provide the following configuration:&lt;/p>
&lt;ul>
&lt;li>&lt;code>concurrentSyncs&lt;/code>: The amount of goroutines scheduled for reconciling events.&lt;/li>
&lt;li>&lt;code>ttlNonShootEvents&lt;/code>: When an event reaches this time-to-live it gets deleted unless it is a Shoot-related event (defaults to &lt;code>1h&lt;/code>, equivalent to the &lt;code>event-ttl&lt;/code> default).&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>⚠️ In addition, you should also configure the &lt;code>--event-ttl&lt;/code> for the kube-apiserver to define an upper-limit of how long Shoot-related events should be stored. The &lt;code>--event-ttl&lt;/code> should be larger than the &lt;code>ttlNonShootEvents&lt;/code> or this controller will have no effect.&lt;/p>
&lt;/blockquote>
&lt;h3 id="exposureclass-controllerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollerexposureclass">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/exposureclass">&lt;code>ExposureClass&lt;/code> Controller&lt;/a>&lt;/h3>
&lt;p>&lt;code>ExposureClass&lt;/code> abstracts the ability to expose a Shoot clusters control plane in certain network environments (e.g. corporate networks, DMZ, internet) on all Seeds or a subset of the Seeds. For more information, see &lt;a href="https://gardener.cloud/docs/gardener/exposureclasses/">ExposureClasses&lt;/a>.&lt;/p>
&lt;p>Consequently, to ensure that &lt;code>ExposureClass&lt;/code>es in-use are always present in the system until the last referring &lt;code>Shoot&lt;/code> gets deleted, the controller adds a finalizer which is only released when there is no &lt;code>Shoot&lt;/code> referencing the &lt;code>ExposureClass&lt;/code> anymore.&lt;/p>
&lt;h3 id="managedseedset-controllerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollermanagedseedset">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/managedseedset">&lt;code>ManagedSeedSet&lt;/code> Controller&lt;/a>&lt;/h3>
&lt;p>&lt;code>ManagedSeedSet&lt;/code> objects maintain a stable set of replicas of &lt;code>ManagedSeed&lt;/code>s, i.e. they guarantee the availability of a specified number of identical &lt;code>ManagedSeed&lt;/code>s on an equal number of identical &lt;code>Shoot&lt;/code>s.
The &lt;code>ManagedSeedSet&lt;/code> controller creates and deletes &lt;code>ManagedSeed&lt;/code>s and &lt;code>Shoot&lt;/code>s in response to changes to the replicas and selector fields. For more information, refer to the &lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/13-automated-seed-management.md#managedseedsets">&lt;code>ManagedSeedSet&lt;/code> proposal document&lt;/a>.&lt;/p>
&lt;ol>
&lt;li>The reconciler first gets all the replicas of the given &lt;code>ManagedSeedSet&lt;/code> in the &lt;code>ManagedSeedSet&lt;/code>&amp;rsquo;s namespace and with the matching selector. Each replica is a struct that contains a &lt;code>ManagedSeed&lt;/code>, its corresponding &lt;code>Seed&lt;/code> and &lt;code>Shoot&lt;/code> objects.&lt;/li>
&lt;li>Then the pending replica is retrieved, if it exists.&lt;/li>
&lt;li>Next it determines the ready, postponed, and deletable replicas.
&lt;ul>
&lt;li>A replica is considered &lt;code>ready&lt;/code> when a &lt;code>Seed&lt;/code> owned by a &lt;code>ManagedSeed&lt;/code> has been registered either directly or by deploying &lt;code>gardenlet&lt;/code> into a &lt;code>Shoot&lt;/code>, the &lt;code>Seed&lt;/code> is &lt;code>Ready&lt;/code> and the &lt;code>Shoot&lt;/code>&amp;rsquo;s status is &lt;code>Healthy&lt;/code>.&lt;/li>
&lt;li>If a replica is not ready and it is not pending, i.e. it is not specified in the &lt;code>ManagedSeed&lt;/code>&amp;rsquo;s &lt;code>status.pendingReplica&lt;/code> field, then it is added to the &lt;code>postponed&lt;/code> replicas.&lt;/li>
&lt;li>A replica is deletable if it has no scheduled &lt;code>Shoot&lt;/code>s and the replica&amp;rsquo;s &lt;code>Shoot&lt;/code> and &lt;code>ManagedSeed&lt;/code> do not have the &lt;code>seedmanagement.gardener.cloud/protect-from-deletion&lt;/code> annotation.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Finally, it checks the actual and target replica counts. If the actual count is less than the target count, the controller scales up the replicas by creating new replicas to match the desired target count. If the actual count is more than the target, the controller deletes replicas to match the desired count. Before scale-out or scale-in, the controller first reconciles the pending replica (there can always only be one) and makes sure the replica is ready before moving on to the next one.
&lt;ul>
&lt;li>&lt;code>Scale-out&lt;/code>(actual count &amp;lt; target count)
&lt;ul>
&lt;li>During the scale-out phase, the controller first creates the &lt;code>Shoot&lt;/code> object from the &lt;code>ManagedSeedSet&lt;/code>&amp;rsquo;s &lt;code>spec.shootTemplate&lt;/code> field and adds the replica to the &lt;code>status.pendingReplica&lt;/code> of the &lt;code>ManagedSeedSet&lt;/code>.&lt;/li>
&lt;li>For the subsequent reconciliation steps, the controller makes sure that the pending replica is ready before proceeding to the next replica. Once the &lt;code>Shoot&lt;/code> is created successfully, the &lt;code>ManagedSeed&lt;/code> object is created from the &lt;code>ManagedSeedSet&lt;/code>&amp;rsquo;s &lt;code>spec.template&lt;/code>. The &lt;code>ManagedSeed&lt;/code> object is reconciled by the &lt;code>ManagedSeed&lt;/code> controller and a &lt;code>Seed&lt;/code> object is created for the replica. Once the replica&amp;rsquo;s &lt;code>Seed&lt;/code> becomes ready and the &lt;code>Shoot&lt;/code> becomes healthy, the replica also becomes ready.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>Scale-in&lt;/code>(actual count &amp;gt; target count)
&lt;ul>
&lt;li>During the scale-in phase, the controller first determines the replica that can be deleted. From the deletable replicas, it chooses the one with the lowest priority and deletes it. Priority is determined in the following order:
&lt;ul>
&lt;li>First, compare replica statuses. Replicas with &amp;ldquo;less advanced&amp;rdquo; status are considered lower priority. For example, a replica with &lt;code>StatusShootReconciling&lt;/code> status has a lower value than a replica with &lt;code>StatusShootReconciled&lt;/code> status. Hence, in this case, a replica with a &lt;code>StatusShootReconciling&lt;/code> status will have lower priority and will be considered for deletion.&lt;/li>
&lt;li>Then, the replicas are compared with the readiness of their &lt;code>Seed&lt;/code>s. Replicas with non-ready &lt;code>Seed&lt;/code>s are considered lower priority.&lt;/li>
&lt;li>Then, the replicas are compared with the health statuses of their &lt;code>Shoot&lt;/code>s. Replicas with &amp;ldquo;worse&amp;rdquo; statuses are considered lower priority.&lt;/li>
&lt;li>Finally, the replica ordinals are compared. Replicas with lower ordinals are considered lower priority.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="quota-controllerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollerquota">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/quota">&lt;code>Quota&lt;/code> Controller&lt;/a>&lt;/h3>
&lt;p>&lt;code>Quota&lt;/code> object limits the resources consumed by shoot clusters either per provider secret or per project/namespace.&lt;/p>
&lt;p>Consequently, to ensure that &lt;code>Quota&lt;/code>s in-use are always present in the system until the last &lt;code>SecretBinding&lt;/code> that references them gets deleted, the controller adds a finalizer which is only released when there is no &lt;code>SecretBinding&lt;/code> referencing the &lt;code>Quota&lt;/code> anymore.&lt;/p>
&lt;h3 id="project-controllerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollerproject">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/project">&lt;code>Project&lt;/code> Controller&lt;/a>&lt;/h3>
&lt;p>There are multiple controllers responsible for different aspects of &lt;code>Project&lt;/code> objects.
Please also refer to the &lt;a href="https://gardener.cloud/docs/gardener/projects/">&lt;code>Project&lt;/code> documentation&lt;/a>.&lt;/p>
&lt;h4 id="main-reconcilerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollerprojectproject">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/project/project">&amp;ldquo;Main&amp;rdquo; Reconciler&lt;/a>&lt;/h4>
&lt;p>This reconciler manages a dedicated &lt;code>Namespace&lt;/code> for each &lt;code>Project&lt;/code>.
The namespace name can either be specified explicitly in &lt;code>.spec.namespace&lt;/code> (must be prefixed with &lt;code>garden-&lt;/code>) or it will be determined by the controller.
If &lt;code>.spec.namespace&lt;/code> is set, it tries to create it. If it already exists, it tries to adopt it.
This will only succeed if the &lt;code>Namespace&lt;/code> was previously labeled with &lt;code>gardener.cloud/role=project&lt;/code> and &lt;code>project.gardener.cloud/name=&amp;lt;project-name&amp;gt;&lt;/code>.
This is to prevent end-users from being able to adopt arbitrary namespaces and escalate their privileges, e.g. the &lt;code>kube-system&lt;/code> namespace.&lt;/p>
&lt;p>After the namespace was created/adopted, the controller creates several &lt;code>ClusterRole&lt;/code>s and &lt;code>ClusterRoleBinding&lt;/code>s that allow the project members to access related resources based on their roles.
These RBAC resources are prefixed with &lt;code>gardener.cloud:system:project{-member,-viewer}:&amp;lt;project-name&amp;gt;&lt;/code>.
Gardener administrators and extension developers can define their own roles. For more information, see &lt;a href="https://gardener.cloud/docs/gardener/extensions/project-roles/">Extending Project Roles&lt;/a> for more information.&lt;/p>
&lt;p>In addition, operators can configure the Project controller to maintain a default &lt;a href="https://kubernetes.io/docs/concepts/policy/resource-quotas/">ResourceQuota&lt;/a> for project namespaces.
Quotas can especially limit the creation of user facing resources, e.g. &lt;code>Shoots&lt;/code>, &lt;code>SecretBindings&lt;/code>, &lt;code>Secrets&lt;/code> and thus protect the garden cluster from massive resource exhaustion but also enable operators to align quotas with respective enterprise policies.&lt;/p>
&lt;blockquote>
&lt;p>⚠️ &lt;strong>Gardener itself is not exempted from configured quotas&lt;/strong>. For example, Gardener creates &lt;code>Secrets&lt;/code> for every shoot cluster in the project namespace and at the same time increases the available quota count. Please mind this additional resource consumption.&lt;/p>
&lt;/blockquote>
&lt;p>The controller configuration provides a template section &lt;code>controllers.project.quotas&lt;/code> where such a ResourceQuota (see the example below) can be deposited.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>controllers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> project:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> quotas:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - config:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: ResourceQuota
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hard:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> count/shoots.core.gardener.cloud: &lt;span style="color:#a31515">&amp;#34;100&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> count/secretbindings.core.gardener.cloud: &lt;span style="color:#a31515">&amp;#34;10&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> count/secrets: &lt;span style="color:#a31515">&amp;#34;800&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> projectSelector: {}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The Project controller takes the specified &lt;code>config&lt;/code> and creates a &lt;code>ResourceQuota&lt;/code> with the name &lt;code>gardener&lt;/code> in the project namespace.
If a &lt;code>ResourceQuota&lt;/code> resource with the name &lt;code>gardener&lt;/code> already exists, the controller will only update fields in &lt;code>spec.hard&lt;/code> which are &lt;strong>unavailable&lt;/strong> at that time.
This is done to configure a default &lt;code>Quota&lt;/code> in all projects but to allow manual quota increases as the projects&amp;rsquo; demands increase.
&lt;code>spec.hard&lt;/code> fields in the &lt;code>ResourceQuota&lt;/code> object that are not present in the configuration are removed from the object.
Labels and annotations on the &lt;code>ResourceQuota&lt;/code> &lt;code>config&lt;/code> get merged with the respective fields on existing &lt;code>ResourceQuota&lt;/code>s.
An optional &lt;code>projectSelector&lt;/code> narrows down the amount of projects that are equipped with the given &lt;code>config&lt;/code>.
If multiple configs match for a project, then only the first match in the list is applied to the project namespace.&lt;/p>
&lt;p>The &lt;code>.status.phase&lt;/code> of the &lt;code>Project&lt;/code> resources is set to &lt;code>Ready&lt;/code> or &lt;code>Failed&lt;/code> by the reconciler to indicate whether the reconciliation loop was performed successfully.
Also, it generates &lt;code>Event&lt;/code>s to provide further information about its operations.&lt;/p>
&lt;p>When a &lt;code>Project&lt;/code> is marked for deletion, the controller ensures that there are no &lt;code>Shoots&lt;/code> left in the project namespace.
Once all &lt;code>Shoots&lt;/code> are gone, the &lt;code>Namespace&lt;/code> and &lt;code>Project&lt;/code> are released.&lt;/p>
&lt;h4 id="stale-projects-reconcilerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollerprojectstale">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/project/stale">&amp;ldquo;Stale Projects&amp;rdquo; Reconciler&lt;/a>&lt;/h4>
&lt;p>As Gardener is a large-scale Kubernetes as a Service, it is designed for being used by a large amount of end-users.
Over time, it is likely to happen that some of the hundreds or thousands of &lt;code>Project&lt;/code> resources are no longer actively used.&lt;/p>
&lt;p>Gardener offers the &amp;ldquo;stale projects&amp;rdquo; reconciler which will take care of identifying such stale projects, marking them with a &amp;ldquo;warning&amp;rdquo;, and eventually deleting them after a certain time period.
This reconciler is enabled by default and works as follows:&lt;/p>
&lt;ol>
&lt;li>Projects are considered as &amp;ldquo;stale&amp;rdquo;/not actively used when all of the following conditions apply: The namespace associated with the &lt;code>Project&lt;/code> does not have any&amp;hellip;
&lt;ol>
&lt;li>&lt;code>Shoot&lt;/code> resources.&lt;/li>
&lt;li>&lt;code>BackupEntry&lt;/code> resources.&lt;/li>
&lt;li>&lt;code>Secret&lt;/code> resources that are referenced by a &lt;code>SecretBinding&lt;/code> that is in use by a &lt;code>Shoot&lt;/code> (not necessarily in the same namespace).&lt;/li>
&lt;li>&lt;code>Quota&lt;/code> resources that are referenced by a &lt;code>SecretBinding&lt;/code> that is in use by a &lt;code>Shoot&lt;/code> (not necessarily in the same namespace).&lt;/li>
&lt;li>The time period when the project was used for the last time (&lt;code>status.lastActivityTimestamp&lt;/code>) is longer than the configured &lt;code>minimumLifetimeDays&lt;/code>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>If a project is considered &amp;ldquo;stale&amp;rdquo;, then its &lt;code>.status.staleSinceTimestamp&lt;/code> will be set to the time when it was first detected to be stale.
If it gets actively used again, this timestamp will be removed.
After some time, the &lt;code>.status.staleAutoDeleteTimestamp&lt;/code> will be set to a timestamp after which Gardener will auto-delete the &lt;code>Project&lt;/code> resource if it still is not actively used.&lt;/p>
&lt;p>The component configuration of the &lt;code>gardener-controller-manager&lt;/code> offers to configure the following options:&lt;/p>
&lt;ul>
&lt;li>&lt;code>minimumLifetimeDays&lt;/code>: Don&amp;rsquo;t consider newly created &lt;code>Project&lt;/code>s as &amp;ldquo;stale&amp;rdquo; too early to give people/end-users some time to onboard and get familiar with the system. The &amp;ldquo;stale project&amp;rdquo; reconciler won&amp;rsquo;t set any timestamp for &lt;code>Project&lt;/code>s younger than &lt;code>minimumLifetimeDays&lt;/code>. When you change this value, then projects marked as &amp;ldquo;stale&amp;rdquo; may be no longer marked as &amp;ldquo;stale&amp;rdquo; in case they are young enough, or vice versa.&lt;/li>
&lt;li>&lt;code>staleGracePeriodDays&lt;/code>: Don&amp;rsquo;t compute auto-delete timestamps for stale &lt;code>Project&lt;/code>s that are unused for less than &lt;code>staleGracePeriodDays&lt;/code>. This is to not unnecessarily make people/end-users nervous &amp;ldquo;just because&amp;rdquo; they haven&amp;rsquo;t actively used their &lt;code>Project&lt;/code> for a given amount of time. When you change this value, then already assigned auto-delete timestamps may be removed if the new grace period is not yet exceeded.&lt;/li>
&lt;li>&lt;code>staleExpirationTimeDays&lt;/code>: Expiration time after which stale &lt;code>Project&lt;/code>s are finally auto-deleted (after &lt;code>.status.staleSinceTimestamp&lt;/code>). If this value is changed and an auto-delete timestamp got already assigned to the projects, then the new value will only take effect if it&amp;rsquo;s increased. Hence, decreasing the &lt;code>staleExpirationTimeDays&lt;/code> will not decrease already assigned auto-delete timestamps.&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Gardener administrators/operators can exclude specific &lt;code>Project&lt;/code>s from the stale check by annotating the related &lt;code>Namespace&lt;/code> resource with &lt;code>project.gardener.cloud/skip-stale-check=true&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;h4 id="activity-reconcilerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollerprojectactivity">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/project/activity">&amp;ldquo;Activity&amp;rdquo; Reconciler&lt;/a>&lt;/h4>
&lt;p>Since the other two reconcilers are unable to actively monitor the relevant objects that are used in a &lt;code>Project&lt;/code> (&lt;code>Shoot&lt;/code>, &lt;code>Secret&lt;/code>, etc.), there could be a situation where the user creates and deletes objects in a short period of time. In that case, the &lt;code>Stale Project Reconciler&lt;/code> could not see that there was any activity on that project and it will still mark it as a &lt;code>Stale&lt;/code>, even though it is actively used.&lt;/p>
&lt;p>The &lt;code>Project Activity Reconciler&lt;/code> is implemented to take care of such cases. An event handler will notify the reconciler for any acitivity and then it will update the &lt;code>status.lastActivityTimestamp&lt;/code>. This update will also trigger the &lt;code>Stale Project Reconciler&lt;/code>.&lt;/p>
&lt;h3 id="secretbinding-controllerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollersecretbinding">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/secretbinding">&lt;code>SecretBinding&lt;/code> Controller&lt;/a>&lt;/h3>
&lt;p>&lt;code>SecretBinding&lt;/code>s reference &lt;code>Secret&lt;/code>s and &lt;code>Quota&lt;/code>s and are themselves referenced by &lt;code>Shoot&lt;/code>s.
The controller adds finalizers to the referenced objects to ensure they don&amp;rsquo;t get deleted while still being referenced.
Similarly, to ensure that &lt;code>SecretBinding&lt;/code>s in-use are always present in the system until the last referring &lt;code>Shoot&lt;/code> gets deleted, the controller adds a finalizer which is only released when there is no &lt;code>Shoot&lt;/code> referencing the &lt;code>SecretBinding&lt;/code> anymore.&lt;/p>
&lt;p>Referenced &lt;code>Secret&lt;/code>s will also be labeled with &lt;code>provider.shoot.gardener.cloud/&amp;lt;type&amp;gt;=true&lt;/code>, where &lt;code>&amp;lt;type&amp;gt;&lt;/code> is the value of the &lt;code>.provider.type&lt;/code> of the &lt;code>SecretBinding&lt;/code>.
Also, all referenced &lt;code>Secret&lt;/code>s, as well as &lt;code>Quota&lt;/code>s, will be labeled with &lt;code>reference.gardener.cloud/secretbinding=true&lt;/code> to allow for easily filtering for objects referenced by &lt;code>SecretBinding&lt;/code>s.&lt;/p>
&lt;h3 id="seed-controllerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollerseed">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/seed">&lt;code>Seed&lt;/code> Controller&lt;/a>&lt;/h3>
&lt;p>The Seed controller in the &lt;code>gardener-controller-manager&lt;/code> reconciles &lt;code>Seed&lt;/code> objects with the help of the following reconcilers.&lt;/p>
&lt;h4 id="main-reconcilerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollerseedsecrets">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/seed/secrets">&amp;ldquo;Main&amp;rdquo; Reconciler&lt;/a>&lt;/h4>
&lt;p>This reconciliation loop takes care of seed related operations in the garden cluster. When a new &lt;code>Seed&lt;/code> object is created,
the reconciler creates a new &lt;code>Namespace&lt;/code> in the garden cluster &lt;code>seed-&amp;lt;seed-name&amp;gt;&lt;/code>. &lt;code>Namespaces&lt;/code> dedicated to single
seed clusters allow us to segregate access permissions i.e., a &lt;code>gardenlet&lt;/code> must not have permissions to access objects in
all &lt;code>Namespaces&lt;/code> in the garden cluster.
There are objects in a Garden environment which are created once by the operator e.g., default domain secret,
alerting credentials, and are required for operations happening in the &lt;code>gardenlet&lt;/code>. Therefore, we not only need a seed specific
&lt;code>Namespace&lt;/code> but also a copy of these &amp;ldquo;shared&amp;rdquo; objects.&lt;/p>
&lt;p>The &amp;ldquo;main&amp;rdquo; reconciler takes care about this replication:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Kind&lt;/th>
&lt;th>Namespace&lt;/th>
&lt;th>Label Selector&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Secret&lt;/td>
&lt;td>garden&lt;/td>
&lt;td>gardener.cloud/role&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="backup-buckets-check-reconcilerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollerseedbackupbucketscheck">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/seed/backupbucketscheck">&amp;ldquo;Backup Buckets Check&amp;rdquo; Reconciler&lt;/a>&lt;/h4>
&lt;p>Every time a &lt;code>BackupBucket&lt;/code> object is created or updated, the referenced &lt;code>Seed&lt;/code> object is enqueued for reconciliation.
It&amp;rsquo;s the reconciler&amp;rsquo;s task to check the &lt;code>status&lt;/code> subresource of all existing &lt;code>BackupBucket&lt;/code>s that reference this &lt;code>Seed&lt;/code>.
If at least one &lt;code>BackupBucket&lt;/code> has &lt;code>.status.lastError != nil&lt;/code>, the &lt;code>BackupBucketsReady&lt;/code> condition on the &lt;code>Seed&lt;/code> will be set to &lt;code>False&lt;/code>, and consequently the &lt;code>Seed&lt;/code> is considered as &lt;code>NotReady&lt;/code>.
If the &lt;code>SeedBackupBucketsCheckControllerConfiguration&lt;/code> (which is part of &lt;code>gardener-controller-manager&lt;/code>s component configuration) contains a &lt;code>conditionThreshold&lt;/code> for the &lt;code>BackupBucketsReady&lt;/code>, the condition will instead first be set to &lt;code>Progressing&lt;/code> and eventually to &lt;code>False&lt;/code> once the &lt;code>conditionThreshold&lt;/code> expires. See &lt;a href="https://github.com/gardener/gardener/blob/master/example/20-componentconfig-gardener-controller-manager.yaml">the example config file&lt;/a> for details.
Once the &lt;code>BackupBucket&lt;/code> is healthy again, the seed will be re-queued and the condition will turn &lt;code>true&lt;/code>.&lt;/p>
&lt;h4 id="extensions-check-reconcilerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollerseedextensionscheck">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/seed/extensionscheck">&amp;ldquo;Extensions Check&amp;rdquo; Reconciler&lt;/a>&lt;/h4>
&lt;p>This reconciler reconciles &lt;code>Seed&lt;/code> objects and checks whether all &lt;code>ControllerInstallation&lt;/code>s referencing them are in a healthy state.
Concretely, all three conditions &lt;code>Valid&lt;/code>, &lt;code>Installed&lt;/code>, and &lt;code>Healthy&lt;/code> must have status &lt;code>True&lt;/code> and the &lt;code>Progressing&lt;/code> condition must have status &lt;code>False&lt;/code>.
Based on this check, it maintains the &lt;code>ExtensionsReady&lt;/code> condition in the respective &lt;code>Seed&lt;/code>&amp;rsquo;s &lt;code>.status.conditions&lt;/code> list.&lt;/p>
&lt;h4 id="lifecycle-reconcilerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollerseedlifecycle">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/seed/lifecycle">&amp;ldquo;Lifecycle&amp;rdquo; Reconciler&lt;/a>&lt;/h4>
&lt;p>The &amp;ldquo;Lifecycle&amp;rdquo; reconciler processes &lt;code>Seed&lt;/code> objects which are enqueued every 10 seconds in order to check if the responsible
&lt;code>gardenlet&lt;/code> is still responding and operable. Therefore, it checks renewals via &lt;code>Lease&lt;/code> objects of the seed in the garden cluster
which are renewed regularly by the &lt;code>gardenlet&lt;/code>.&lt;/p>
&lt;p>In case a &lt;code>Lease&lt;/code> is not renewed for the configured amount in &lt;code>config.controllers.seed.monitorPeriod.duration&lt;/code>:&lt;/p>
&lt;ol>
&lt;li>The reconciler assumes that the &lt;code>gardenlet&lt;/code> stopped operating and updates the &lt;code>GardenletReady&lt;/code> condition to &lt;code>Unknown&lt;/code>.&lt;/li>
&lt;li>Additionally, the conditions and constraints of all &lt;code>Shoot&lt;/code> resources scheduled on the affected seed are set to &lt;code>Unknown&lt;/code> as well,
because a striking &lt;code>gardenlet&lt;/code> won&amp;rsquo;t be able to maintain these conditions any more.&lt;/li>
&lt;li>If the gardenlet&amp;rsquo;s client certificate has expired (identified based on the &lt;code>.status.clientCertificateExpirationTimestamp&lt;/code> field in the &lt;code>Seed&lt;/code> resource) and if it is managed by a &lt;code>ManagedSeed&lt;/code>, then this will be triggered for a reconciliation. This will trigger the bootstrapping process again and allows gardenlets to obtain a fresh client certificate.&lt;/li>
&lt;/ol>
&lt;h3 id="shoot-controllerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollershoot">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/shoot">&lt;code>Shoot&lt;/code> Controller&lt;/a>&lt;/h3>
&lt;h4 id="conditions-reconcilerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollershootconditions">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/shoot/conditions">&amp;ldquo;Conditions&amp;rdquo; Reconciler&lt;/a>&lt;/h4>
&lt;p>In case the reconciled &lt;code>Shoot&lt;/code> is registered via a &lt;code>ManagedSeed&lt;/code> as a seed cluster, this reconciler merges the conditions in the respective &lt;code>Seed&lt;/code>&amp;rsquo;s &lt;code>.status.conditions&lt;/code> into the &lt;code>.status.conditions&lt;/code> of the &lt;code>Shoot&lt;/code>.
This is to provide a holistic view on the status of the registered seed cluster by just looking at the &lt;code>Shoot&lt;/code> resource.&lt;/p>
&lt;h4 id="hibernation-reconcilerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollershoothibernation">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/shoot/hibernation">&amp;ldquo;Hibernation&amp;rdquo; Reconciler&lt;/a>&lt;/h4>
&lt;p>This reconciler is responsible for hibernating or awakening shoot clusters based on the schedules defined in their &lt;code>.spec.hibernation.schedules&lt;/code>.
It ignores &lt;a href="https://gardener.cloud/docs/gardener/shoot_status/#last-operation">failed &lt;code>Shoot&lt;/code>s&lt;/a> and those marked for deletion.&lt;/p>
&lt;h4 id="maintenance-reconcilerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollershootmaintenance">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/shoot/maintenance">&amp;ldquo;Maintenance&amp;rdquo; Reconciler&lt;/a>&lt;/h4>
&lt;p>This reconciler is responsible for maintaining shoot clusters based on the time window defined in their &lt;code>.spec.maintenance.timeWindow&lt;/code>.
It might auto-update the Kubernetes version or the operating system versions specified in the worker pools (&lt;code>.spec.provider.workers&lt;/code>).
It could also add some operation or task annotations. For more information, see &lt;a href="https://gardener.cloud/docs/gardener/shoot_maintenance/">Shoot Maintenance&lt;/a>.&lt;/p>
&lt;h4 id="quota-reconcilerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollershootquota">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/shoot/quota">&amp;ldquo;Quota&amp;rdquo; Reconciler&lt;/a>&lt;/h4>
&lt;p>This reconciler might auto-delete shoot clusters in case their referenced &lt;code>SecretBinding&lt;/code> is itself referencing a &lt;code>Quota&lt;/code> with &lt;code>.spec.clusterLifetimeDays != nil&lt;/code>.
If the shoot cluster is older than the configured lifetime, then it gets deleted.
It maintains the expiration time of the &lt;code>Shoot&lt;/code> in the value of the &lt;code>shoot.gardener.cloud/expiration-timestamp&lt;/code> annotation.
This annotation might be overridden, however only by at most twice the value of the &lt;code>.spec.clusterLifetimeDays&lt;/code>.&lt;/p>
&lt;h4 id="reference-reconcilerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollershootreference">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/shoot/reference">&amp;ldquo;Reference&amp;rdquo; Reconciler&lt;/a>&lt;/h4>
&lt;p>Shoot objects may specify references to other objects in the garden cluster which are required for certain features.
For example, users can configure various DNS providers via &lt;code>.spec.dns.providers&lt;/code> and usually need to refer to a corresponding &lt;code>Secret&lt;/code> with valid DNS provider credentials inside.
Such objects need a special protection against deletion requests as long as they are still being referenced by one or multiple shoots.&lt;/p>
&lt;p>Therefore, this reconciler checks &lt;code>Shoot&lt;/code>s for referenced objects and adds the finalizer &lt;code>gardener.cloud/reference-protection&lt;/code> to their &lt;code>.metadata.finalizers&lt;/code> list.
The reconciled &lt;code>Shoot&lt;/code> also gets this finalizer to enable a proper garbage collection in case the &lt;code>gardener-controller-manager&lt;/code> is offline at the moment of an incoming deletion request.
When an object is not actively referenced anymore because the &lt;code>Shoot&lt;/code> specification has changed or all related shoots were deleted (are in deletion), the controller will remove the added finalizer again so that the object can safely be deleted or garbage collected.&lt;/p>
&lt;p>This reconciler inspects the following references:&lt;/p>
&lt;ul>
&lt;li>DNS provider secrets (&lt;code>.spec.dns.provider&lt;/code>)&lt;/li>
&lt;li>Audit policy configmaps (&lt;code>.spec.kubernetes.kubeAPIServer.auditConfig.auditPolicy.configMapRef&lt;/code>)&lt;/li>
&lt;/ul>
&lt;p>Further checks might be added in the future.&lt;/p>
&lt;h4 id="retry-reconcilerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollershootretry">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/shoot/retry">&amp;ldquo;Retry&amp;rdquo; Reconciler&lt;/a>&lt;/h4>
&lt;p>This reconciler is responsible for retrying certain failed &lt;code>Shoot&lt;/code>s.
Currently, the reconciler retries only failed &lt;code>Shoot&lt;/code>s with an error code &lt;code>ERR_INFRA_RATE_LIMITS_EXCEEDED&lt;/code>. See &lt;a href="https://gardener.cloud/docs/gardener/shoot_status/#error-codes">Shoot Status&lt;/a> for more details.&lt;/p>
&lt;h4 id="status-label-reconcilerhttpsgithubcomgardenergardenertreemasterpkgcontrollermanagercontrollershootstatuslabel">&lt;a href="https://github.com/gardener/gardener/tree/master/pkg/controllermanager/controller/shoot/statuslabel">&amp;ldquo;Status Label&amp;rdquo; Reconciler&lt;/a>&lt;/h4>
&lt;p>This reconciler is responsible for maintaining the &lt;code>shoot.gardener.cloud/status&lt;/code> label on &lt;code>Shoot&lt;/code>s. See &lt;a href="https://gardener.cloud/docs/gardener/shoot_status/#status-label">Shoot Status&lt;/a> for more details.&lt;/p></description></item><item><title>Docs: ControllerRegistration</title><link>https://gardener.cloud/docs/gardener/extensions/controllerregistration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/extensions/controllerregistration/</guid><description>
&lt;h1 id="registering-extension-controllers">Registering Extension Controllers&lt;/h1>
&lt;p>Extensions are registered in the garden cluster via &lt;a href="https://github.com/gardener/gardener/blob/master/example/25-controllerregistration.yaml">&lt;code>ControllerRegistration&lt;/code>&lt;/a> resources.
Deployment for respective extensions are specified via &lt;a href="https://github.com/gardener/gardener/blob/master/example/25-controllerdeployment.yaml">&lt;code>ControllerDeployment&lt;/code>&lt;/a> resources.
Gardener evaluates the registrations and deployments and creates &lt;a href="https://github.com/gardener/gardener/blob/master/example/25-controllerinstallation.yaml">&lt;code>ControllerInstallation&lt;/code>&lt;/a> resources which describe the request &amp;ldquo;please install this controller &lt;code>X&lt;/code> to this seed &lt;code>Y&lt;/code>&amp;rdquo;.&lt;/p>
&lt;p>Similar to how &lt;code>CloudProfile&lt;/code> or &lt;code>Seed&lt;/code> resources get into the system, the Gardener administrator must deploy the &lt;code>ControllerRegistration&lt;/code> and &lt;code>ControllerDeployment&lt;/code> resources (this does not happen automatically in any way - the administrator decides which extensions shall be enabled).&lt;/p>
&lt;p>The specification mainly describes which of Gardener&amp;rsquo;s extension CRDs are managed, for example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: ControllerDeployment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: os-gardenlinux
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>type: helm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>providerConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chart: H4sIFAAAAAAA/yk... &lt;span style="color:#008000"># &amp;lt;base64-gzip-chart&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> values:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> foo: bar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: ControllerRegistration
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: os-gardenlinux
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> deployment:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> deploymentRefs:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: os-gardenlinux
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resources:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - kind: OperatingSystemConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: gardenlinux
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> primary: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This information tells Gardener that there is an extension controller that can handle &lt;code>OperatingSystemConfig&lt;/code> resources of type &lt;code>gardenlinux&lt;/code>.
A reference to the shown &lt;code>ControllerDeployment&lt;/code> specifies how the deployment of the extension controller is accomplished.&lt;/p>
&lt;p>Also, it specifies that this controller is the primary one responsible for the lifecycle of the &lt;code>OperatingSystemConfig&lt;/code> resource.
Setting &lt;code>primary&lt;/code> to &lt;code>false&lt;/code> would allow to register additional, secondary controllers that may also watch/react on the &lt;code>OperatingSystemConfig/coreos&lt;/code> resources, however, only the primary controller may change/update the main &lt;code>status&lt;/code> of the extension object (that are used to &amp;ldquo;communicate&amp;rdquo; with the gardenlet).
Particularly, only the primary controller may set &lt;code>.status.lastOperation&lt;/code>, &lt;code>.status.lastError&lt;/code>, &lt;code>.status.observedGeneration&lt;/code>, and &lt;code>.status.state&lt;/code>.
Secondary controllers may contribute to the &lt;code>.status.conditions[]&lt;/code> if they like, of course.&lt;/p>
&lt;p>Secondary controllers might be helpful in scenarios where additional tasks need to be completed which are not part of the reconciliation logic of the primary controller but separated out into a dedicated extension.&lt;/p>
&lt;p>⚠️ There must be exactly one primary controller for every registered kind/type combination.
Also, please note that the &lt;code>primary&lt;/code> field cannot be changed after creation of the &lt;code>ControllerRegistration&lt;/code>.&lt;/p>
&lt;h2 id="deploying-extension-controllers">Deploying Extension Controllers&lt;/h2>
&lt;p>Submitting the above &lt;code>ControllerDeployment&lt;/code> and &lt;code>ControllerRegistration&lt;/code> will create a &lt;code>ControllerInstallation&lt;/code> resource:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: ControllerInstallation
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: os-gardenlinux
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> deploymentRef:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: os-gardenlinux
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> registrationRef:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: os-gardenlinux
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> seedRef:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: aws-eu1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This resource expresses that Gardener requires the &lt;code>os-gardenlinux&lt;/code> extension controller to run on the &lt;code>aws-eu1&lt;/code> seed cluster.&lt;/p>
&lt;p>The Gardener Controller Manager does automatically determine which extension is required on which seed cluster and will only create &lt;code>ControllerInstallation&lt;/code> objects for those.
Also, it will automatically delete &lt;code>ControllerInstallation&lt;/code>s referencing extension controllers that are no longer required on a seed (e.g., because all shoots on it have been deleted).
There are additional configuration options, please see the &lt;a href="#deployment-configuration-options">Deployment Configuration Options section&lt;/a>.&lt;/p>
&lt;h2 id="how-do-extension-controllers-get-deployed-to-seeds">How do extension controllers get deployed to seeds?&lt;/h2>
&lt;p>After Gardener has written the &lt;code>ControllerInstallation&lt;/code> resource, some component must satisfy this request and start deploying the extension controller to the seed.
Depending on the complexity of the controller&amp;rsquo;s lifecycle management, configuration, etc., there are two possible scenarios:&lt;/p>
&lt;h3 id="scenario-1-deployed-by-gardener">Scenario 1: Deployed by Gardener&lt;/h3>
&lt;p>In many cases, the extension controllers are easy to deploy and configure.
It is sufficient to simply create a Helm chart (standardized way of packaging software in the Kubernetes context) and deploy it together with some static configuration values.
Gardener supports this scenario and allows to provide arbitrary deployment information in the &lt;code>ControllerDeployment&lt;/code> resource&amp;rsquo;s &lt;code>.providerConfig&lt;/code> section:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>type: helm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>providerConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chart: H4sIFAAAAAAA/yk...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> values:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> foo: bar
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If &lt;code>.type=helm&lt;/code>, then Gardener itself will take over the responsibility the deployment.
It base64-decodes the provided Helm chart (&lt;code>.providerConfig.chart&lt;/code>) and deploys it with the provided static configuration (&lt;code>.providerConfig.values&lt;/code>).
The chart and the values can be updated at any time - Gardener will recognize and re-trigger the deployment process.&lt;/p>
&lt;p>In order to allow extensions to get information about the garden and the seed cluster, Gardener does mix-in certain properties into the values (root level) of every deployed Helm chart:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>gardener:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> garden:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> identifier: &amp;lt;uuid-of-gardener-installation&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> seed:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> identifier: &amp;lt;seed-name&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> region: europe
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> spec: &amp;lt;complete-seed-spec&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Extensions can use this information in their Helm chart in case they require knowledge about the garden and the seed environment.
The list might be extended in the future.&lt;/p>
&lt;p>ℹ️ Gardener uses the UUID of the &lt;code>garden&lt;/code> &lt;code>Namespace&lt;/code> object in the &lt;code>.gardener.garden.identifier&lt;/code> property.&lt;/p>
&lt;h3 id="scenario-2-deployed-by-a-non-human-kubernetes-operator">Scenario 2: Deployed by a (Non-Human) Kubernetes Operator&lt;/h3>
&lt;p>Some extension controllers might be more complex and require additional domain-specific knowledge wrt. lifecycle or configuration.
In this case, we encourage to follow the Kubernetes operator pattern and deploy a dedicated operator for this extension into the garden cluster.
The &lt;code>ControllerDeployments&lt;/code>&amp;rsquo;s &lt;code>.type&lt;/code> field would then not be &lt;code>helm&lt;/code>, and no Helm chart or values need to be provided there.
Instead, the operator itself knows how to deploy the extension into the seed.
It must watch &lt;code>ControllerInstallation&lt;/code> resources and act one those referencing a &lt;code>ControllerRegistration&lt;/code> the operator is responsible for.&lt;/p>
&lt;p>In order to let Gardener know that the extension controller is ready and running in the seed, the &lt;code>ControllerInstallation&lt;/code>&amp;rsquo;s &lt;code>.status&lt;/code> field supports two conditions: &lt;code>RegistrationValid&lt;/code> and &lt;code>InstallationSuccessful&lt;/code> - both must be provided by the responsible operator:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>status:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conditions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - lastTransitionTime: &lt;span style="color:#a31515">&amp;#34;2019-01-22T11:51:11Z&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lastUpdateTime: &lt;span style="color:#a31515">&amp;#34;2019-01-22T11:51:11Z&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> message: Chart could be rendered successfully.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> reason: RegistrationValid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status: &lt;span style="color:#a31515">&amp;#34;True&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: Valid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - lastTransitionTime: &lt;span style="color:#a31515">&amp;#34;2019-01-22T11:51:12Z&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lastUpdateTime: &lt;span style="color:#a31515">&amp;#34;2019-01-22T11:51:12Z&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> message: Installation of new resources succeeded.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> reason: InstallationSuccessful
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status: &lt;span style="color:#a31515">&amp;#34;True&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: Installed
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Additionally, the &lt;code>.status&lt;/code> field has a &lt;code>providerStatus&lt;/code> section into which the operator can (optionally) put any arbitrary data associated with this installation.&lt;/p>
&lt;h2 id="extensions-in-the-garden-cluster-itself">Extensions in the Garden Cluster Itself&lt;/h2>
&lt;p>The &lt;code>Shoot&lt;/code> resource itself will contain some provider-specific data blobs.
As a result, some extensions might also want to run in the garden cluster, e.g., to provide &lt;code>ValidatingWebhookConfiguration&lt;/code>s for validating the correctness of their provider-specific blobs:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Shoot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: johndoe-aws
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: garden-dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloud:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: aws
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> region: eu-west-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> providerConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiVersion: aws.cloud.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: InfrastructureConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> networks:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vpc: &lt;span style="color:#008000"># specify either &amp;#39;id&amp;#39; or &amp;#39;cidr&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># id: vpc-123456&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cidr: 10.250.0.0/16
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> internal:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - 10.250.112.0/22
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> public:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - 10.250.96.0/22
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> workers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - 10.250.0.0/19
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zones:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - eu-west-1a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In the above example, Gardener itself does not understand the AWS-specific provider configuration for the infrastructure.
However, if this part of the &lt;code>Shoot&lt;/code> resource should be validated, then you should run an AWS-specific component in the garden cluster that registers a webhook. You can do it similarly if you want to default some fields of a resource (by using a &lt;code>MutatingWebhookConfiguration&lt;/code>).&lt;/p>
&lt;p>Again, similar to how Gardener is deployed to the garden cluster, these components must be deployed and managed by the Gardener administrator.&lt;/p>
&lt;h3 id="extension-resource-configurations">&lt;code>Extension&lt;/code> Resource Configurations&lt;/h3>
&lt;p>The &lt;code>Extension&lt;/code> resource allows injecting arbitrary steps into the shoot reconciliation flow that are unknown to Gardener.
Hence, it is slightly special and allows further configuration when registering it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: ControllerRegistration
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: extension-foo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resources:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - kind: Extension
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: foo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> primary: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> globallyEnabled: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> reconcileTimeout: 30s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lifecycle:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> reconcile: AfterKubeAPIServer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> delete: BeforeKubeAPIServer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> migrate: BeforeKubeAPIServer
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>globallyEnabled=true&lt;/code> option specifies that the &lt;code>Extension/foo&lt;/code> object shall be created by default for all shoots (unless they opted out by setting &lt;code>.spec.extensions[].enabled=false&lt;/code> in the &lt;code>Shoot&lt;/code> spec).&lt;/p>
&lt;p>The &lt;code>reconcileTimeout&lt;/code> tells Gardener how long it should wait during its shoot reconciliation flow for the &lt;code>Extension/foo&lt;/code>&amp;rsquo;s reconciliation to finish.&lt;/p>
&lt;h4 id="extension-lifecycle">&lt;code>Extension&lt;/code> Lifecycle&lt;/h4>
&lt;p>The &lt;code>lifecycle&lt;/code> field tells Gardener when to perform a certain action on the &lt;code>Extension&lt;/code> resource during the reconciliation flows. If omitted, then the default behaviour will be applied. Please find more information on the defaults in the explanation below. Possible values for each control flow are &lt;code>AfterKubeAPIServer&lt;/code> and &lt;code>BeforeKubeAPIServer&lt;/code>. Let&amp;rsquo;s take the following configuration and explain it.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lifecycle:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> reconcile: AfterKubeAPIServer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> delete: BeforeKubeAPIServer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> migrate: BeforeKubeAPIServer
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>reconcile: AfterKubeAPIServer&lt;/code> means that the extension resource will be reconciled after the successful reconciliation of the &lt;code>kube-apiserver&lt;/code> during shoot reconciliation. This is also the default behaviour if this value is not specified. During shoot hibernation, the opposite rule is applied, meaning that in this case the reconciliation of the extension will happen before the &lt;code>kube-apiserver&lt;/code> is scaled to 0 replicas. On the other hand, if the extension needs to be reconciled before the &lt;code>kube-apiserver&lt;/code> and scaled down after it, then the value &lt;code>BeforeKubeAPIServer&lt;/code> should be used.&lt;/li>
&lt;li>&lt;code>delete: BeforeKubeAPIServer&lt;/code> means that the extension resource will be deleted before the &lt;code>kube-apiserver&lt;/code> is destroyed during shoot deletion. This is the default behaviour if this value is not specified.&lt;/li>
&lt;li>&lt;code>migrate: BeforeKubeAPIServer&lt;/code> means that the extension resource will be migrated before the &lt;code>kube-apiserver&lt;/code> is destroyed in the source cluster during &lt;a href="https://gardener.cloud/docs/gardener/control_plane_migration/">control plane migration&lt;/a>. This is the default behaviour if this value is not specified. The restoration of the control plane follows the reconciliation control flow.&lt;/li>
&lt;/ul>
&lt;h3 id="deployment-configuration-options">Deployment Configuration Options&lt;/h3>
&lt;p>The &lt;code>.spec.deployment&lt;/code> resource allows to configure a deployment &lt;code>policy&lt;/code>.
There are the following policies:&lt;/p>
&lt;ul>
&lt;li>&lt;code>OnDemand&lt;/code> (default): Gardener will demand the deployment and deletion of the extension controller to/from seed clusters dynamically. It will automatically determine (based on other resources like &lt;code>Shoot&lt;/code>s) whether it is required and decide accordingly.&lt;/li>
&lt;li>&lt;code>Always&lt;/code>: Gardener will demand the deployment of the extension controller to seed clusters independent of whether it is actually required or not. This might be helpful if you want to add a new component/controller to all seed clusters by default. Another use-case is to minimize the durations until extension controllers get deployed and ready in case you have highly fluctuating seed clusters.&lt;/li>
&lt;li>&lt;code>AlwaysExceptNoShoots&lt;/code>: Similar to &lt;code>Always&lt;/code>, but if the seed does not have any shoots, then the extension is not being deployed. It will be deleted from a seed after the last shoot has been removed from it.&lt;/li>
&lt;/ul>
&lt;p>Also, the &lt;code>.spec.deployment.seedSelector&lt;/code> allows to specify a label selector for seed clusters.
Only if it matches the labels of a seed, then it will be deployed to it.
Please note that a seed selector can only be specified for secondary controllers (&lt;code>primary=false&lt;/code> for all &lt;code>.spec.resources[]&lt;/code>).&lt;/p></description></item><item><title>Docs: ControlPlane</title><link>https://gardener.cloud/docs/gardener/extensions/controlplane/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/extensions/controlplane/</guid><description>
&lt;h1 id="contract-controlplane-resource">Contract: &lt;code>ControlPlane&lt;/code> Resource&lt;/h1>
&lt;p>Most Kubernetes clusters require a &lt;code>cloud-controller-manager&lt;/code> or CSI drivers in order to work properly.
Before introducing the &lt;code>ControlPlane&lt;/code> extension resource Gardener was having several different Helm charts for the &lt;code>cloud-controller-manager&lt;/code> deployments for the various providers.
Now, Gardener commissions an external, provider-specific controller to take over this task.&lt;/p>
&lt;h2 id="which-control-plane-resources-are-required">Which control plane resources are required?&lt;/h2>
&lt;p>As mentioned in the &lt;a href="https://gardener.cloud/docs/gardener/extensions/controlplane-webhooks/">controlplane customization webhooks&lt;/a> document, Gardener shall not deploy any &lt;code>cloud-controller-manager&lt;/code> or any other provider-specific component.
Instead, it creates a &lt;code>ControlPlane&lt;/code> CRD that should be picked up by provider extensions.
Its purpose is to trigger the deployment of such provider-specific components in the shoot namespace in the seed cluster.&lt;/p>
&lt;h2 id="what-needs-to-be-implemented-to-support-a-new-infrastructure-provider">What needs to be implemented to support a new infrastructure provider?&lt;/h2>
&lt;p>As part of the shoot flow Gardener will create a special CRD in the seed cluster that needs to be reconciled by an extension controller, for example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: ControlPlane
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: control-plane
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: shoot--foo--bar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: openstack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> region: europe-west1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> secretRef:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: cloudprovider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: shoot--foo--bar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> providerConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiVersion: openstack.provider.extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: ControlPlaneConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> loadBalancerProvider: provider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zone: eu-1a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudControllerManager:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> featureGates:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CustomResourceValidation: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> infrastructureProviderStatus:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiVersion: openstack.provider.extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: InfrastructureStatus
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> networks:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> floatingPool:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id: vpc-1234
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> subnets:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - purpose: nodes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id: subnetid
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>.spec.secretRef&lt;/code> contains a reference to the provider secret pointing to the account that shall be used for the shoot cluster.
However, the most important section is the &lt;code>.spec.providerConfig&lt;/code> and the &lt;code>.spec.infrastructureProviderStatus&lt;/code>.
The first one contains an embedded declaration of the provider specific configuration for the control plane (that cannot be known by Gardener itself).
You are responsible for designing how this configuration looks like.
Gardener does not evaluate it but just copies this part from what has been provided by the end-user in the &lt;code>Shoot&lt;/code> resource.
The second one contains the output of the &lt;a href="https://gardener.cloud/docs/gardener/extensions/infrastructure/">&lt;code>Infrastructure&lt;/code> resource&lt;/a> (that might be relevant for the CCM config).&lt;/p>
&lt;p>In order to support a new control plane provider, you need to write a controller that watches all &lt;code>ControlPlane&lt;/code>s with &lt;code>.spec.type=&amp;lt;my-provider-name&amp;gt;&lt;/code>.
You can take a look at the below referenced example implementation for the Alicloud provider.&lt;/p>
&lt;p>The control plane controller as part of the &lt;code>ControlPlane&lt;/code> reconciliation often deploys resources (e.g. pods/deployments) into the Shoot namespace in the &lt;code>Seed&lt;/code> as part of its &lt;code>ControlPlane&lt;/code> reconciliation loop.
Because the namespace contains &lt;a href="https://kubernetes.io/docs/concepts/services-networking/network-policies/">network policies&lt;/a> that per default &lt;a href="https://kubernetes.io/docs/concepts/services-networking/network-policies/#default-deny-all-ingress-and-all-egress-traffic">deny all ingress and egress traffic&lt;/a>,
the pods may need to have proper labels matching to the selectors of the network policies in order to allow the required network traffic.
Otherwise, they won&amp;rsquo;t be allowed to talk to certain other components (e.g., the kube-apiserver of the shoot).
For more information, see &lt;a href="https://gardener.cloud/docs/gardener/network_policies/">&lt;code>NetworkPolicy&lt;/code>s In Garden, Seed, Shoot Clusters&lt;/a>.&lt;/p>
&lt;h2 id="non-provider-specific-information-required-for-infrastructure-creation">Non-Provider Specific Information Required for Infrastructure Creation&lt;/h2>
&lt;p>Most providers might require further information that is not provider specific but already part of the shoot resource.
One example for this is the &lt;a href="https://github.com/gardener/gardener-extension-provider-gcp/tree/master/pkg/controller/controlplane">GCP control plane controller&lt;/a>, which needs the Kubernetes version of the shoot cluster (because it already uses the in-tree Kubernetes cloud-controller-manager).
As Gardener cannot know which information is required by providers, it simply mirrors the &lt;code>Shoot&lt;/code>, &lt;code>Seed&lt;/code>, and &lt;code>CloudProfile&lt;/code> resources into the seed.
They are part of the &lt;a href="https://gardener.cloud/docs/gardener/extensions/cluster/">&lt;code>Cluster&lt;/code> extension resource&lt;/a> and can be used to extract information that is not part of the &lt;code>Infrastructure&lt;/code> resource itself.&lt;/p>
&lt;h2 id="references-and-additional-resources">References and Additional Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/gardener/gardener/blob/master/pkg/apis/extensions/v1alpha1/types_controlplane.go">&lt;code>ControlPlane&lt;/code> API (Golang Specification)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gardener/gardener-extension-provider-alicloud/tree/master/pkg/controller/controlplane">Exemplary Implementation for the Alicloud Provider&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docs: ControlPlane Exposure</title><link>https://gardener.cloud/docs/gardener/extensions/controlplane-exposure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/extensions/controlplane-exposure/</guid><description>
&lt;h1 id="contract-controlplane-resource-with-purpose-exposure">Contract: &lt;code>ControlPlane&lt;/code> Resource with Purpose &lt;code>exposure&lt;/code>&lt;/h1>
&lt;p>Some Kubernetes clusters require an additional deployments required by the seed cloud provider in order to work properly, e.g. AWS Load Balancer Readvertiser.
Before using ControlPlane resources with purpose &lt;code>exposure&lt;/code>, Gardener was having different Helm charts for the deployments for the various providers.
Now, Gardener commissions an external, provider-specific controller to take over this task.&lt;/p>
&lt;h2 id="which-control-plane-resources-are-required">Which control plane resources are required?&lt;/h2>
&lt;p>As mentioned in the &lt;a href="https://gardener.cloud/docs/gardener/extensions/controlplane/">controlplane&lt;/a> document, Gardener shall not deploy any other provider-specific component.
Instead, it creates a &lt;code>ControlPlane&lt;/code> CRD with purpose &lt;code>exposure&lt;/code> that should be picked up by provider extensions.
Its purpose is to trigger the deployment of such provider-specific components in the shoot namespace in the seed cluster that are needed to expose the kube-apiserver.&lt;/p>
&lt;p>The shoot cluster&amp;rsquo;s kube-apiserver are exposed via a &lt;code>Service&lt;/code> of type &lt;code>LoadBalancer&lt;/code> from the shoot provider (you may run the control plane of an Azure shoot in a GCP seed). It&amp;rsquo;s the seed provider extension controller that should act on the &lt;code>ControlPlane&lt;/code> resources with purpose &lt;code>exposure&lt;/code>.&lt;/p>
&lt;p>If &lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/08-shoot-apiserver-via-sni.md">SNI&lt;/a> is enabled, then the &lt;code>Service&lt;/code> from above is of type &lt;code>ClusterIP&lt;/code> and Gardner will not create &lt;code>ControlPlane&lt;/code> resources with purpose &lt;code>exposure&lt;/code>.&lt;/p>
&lt;h2 id="what-needs-to-be-implemented-to-support-a-new-infrastructure-provider">What needs to be implemented to support a new infrastructure provider?&lt;/h2>
&lt;p>As part of the shoot flow, Gardener will create a special CRD in the seed cluster that needs to be reconciled by an extension controller, for example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: ControlPlane
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: control-plane-exposure
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: shoot--foo--bar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: aws
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> purpose: exposure
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> region: europe-west1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> secretRef:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: cloudprovider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: shoot--foo--bar
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>.spec.secretRef&lt;/code> contains a reference to the provider secret pointing to the account that shall be used for the shoot cluster.
It is most likely not needed, however, still added for some potential corner cases.
If you don&amp;rsquo;t need it, then just ignore it.
The &lt;code>.spec.region&lt;/code> contains the region of the seed cluster.&lt;/p>
&lt;p>In order to support a control plane provider with purpose &lt;code>exposure&lt;/code>, you need to write a controller or expand the existing &lt;a href="https://gardener.cloud/docs/gardener/extensions/controlplane/">controlplane controller&lt;/a> that watches all &lt;code>ControlPlane&lt;/code>s with &lt;code>.spec.type=&amp;lt;my-provider-name&amp;gt;&lt;/code> and purpose &lt;code>exposure&lt;/code>.
You can take a look at the below referenced example implementation for the AWS provider.&lt;/p>
&lt;h2 id="non-provider-specific-information-required-for-infrastructure-creation">Non-Provider Specific Information Required for Infrastructure Creation&lt;/h2>
&lt;p>Most providers might require further information that is not provider specific but already part of the shoot resource.
As Gardener cannot know which information is required by providers, it simply mirrors the &lt;code>Shoot&lt;/code>, &lt;code>Seed&lt;/code>, and &lt;code>CloudProfile&lt;/code> resources into the seed.
They are part of the &lt;a href="https://gardener.cloud/docs/gardener/extensions/cluster/">&lt;code>Cluster&lt;/code> extension resource&lt;/a> and can be used to extract information.&lt;/p>
&lt;h2 id="references-and-additional-resources">References and Additional Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/gardener/gardener/blob/master/pkg/apis/extensions/v1alpha1/types_controlplane.go">&lt;code>ControlPlane&lt;/code> API (Golang Specification)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gardener/gardener-extension-provider-aws/tree/master/pkg/controller/controlplane">Exemplary Implementation for the AWS Provider&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gardener/aws-lb-readvertiser">AWS Load Balancer Readvertiser&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docs: ControlPlane Webhooks</title><link>https://gardener.cloud/docs/gardener/extensions/controlplane-webhooks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/extensions/controlplane-webhooks/</guid><description>
&lt;h1 id="controlplane-customization-webhooks">ControlPlane Customization Webhooks&lt;/h1>
&lt;p>Gardener creates the Shoot controlplane in several steps of the Shoot flow. At different point of this flow, it:&lt;/p>
&lt;ul>
&lt;li>Deploys standard controlplane components such as kube-apiserver, kube-controller-manager, and kube-scheduler by creating the corresponding deployments, services, and other resources in the Shoot namespace.&lt;/li>
&lt;li>Initiates the deployment of custom controlplane components by &lt;a href="https://gardener.cloud/docs/gardener/extensions/controlplane/">ControlPlane controllers&lt;/a> by creating a &lt;code>ControlPlane&lt;/code> resource in the Shoot namespace.&lt;/li>
&lt;/ul>
&lt;p>In order to apply any provider-specific changes to the configuration provided by Gardener for the standard controlplane components, cloud extension providers can install mutating admission webhooks for the resources created by Gardener in the Shoot namespace.&lt;/p>
&lt;h2 id="what-needs-to-be-implemented-to-support-a-new-cloud-provider">What needs to be implemented to support a new cloud provider?&lt;/h2>
&lt;p>In order to support a new cloud provider, you should install &amp;ldquo;controlplane&amp;rdquo; mutating webhooks for any of the following resources:&lt;/p>
&lt;ul>
&lt;li>Deployment with name &lt;code>kube-apiserver&lt;/code>, &lt;code>kube-controller-manager&lt;/code>, or &lt;code>kube-scheduler&lt;/code>&lt;/li>
&lt;li>Service with name &lt;code>kube-apiserver&lt;/code>&lt;/li>
&lt;li>&lt;code>OperatingSystemConfig&lt;/code> with any name, and purpose &lt;code>reconcile&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>See &lt;a href="#contract-specification">Contract Specification&lt;/a> for more details on the contract that Gardener and webhooks should adhere to regarding the content of the above resources.&lt;/p>
&lt;p>You can install 3 different kinds of controlplane webhooks:&lt;/p>
&lt;ul>
&lt;li>&lt;code>Shoot&lt;/code>, or &lt;code>controlplane&lt;/code> webhooks apply changes needed by the Shoot cloud provider, for example the &lt;code>--cloud-provider&lt;/code> command line flag of &lt;code>kube-apiserver&lt;/code> and &lt;code>kube-controller-manager&lt;/code>. Such webhooks should only operate on Shoot namespaces labeled with &lt;code>shoot.gardener.cloud/provider=&amp;lt;provider&amp;gt;&lt;/code>.&lt;/li>
&lt;li>&lt;code>Seed&lt;/code>, or &lt;code>controlplaneexposure&lt;/code> webhooks apply changes needed by the Seed cloud provider, for example annotations on the &lt;code>kube-apiserver&lt;/code> service to ensure cloud-specific load balancers are correctly provisioned for a service of type &lt;code>LoadBalancer&lt;/code>. Such webhooks should only operate on Shoot namespaces labeled with &lt;code>seed.gardener.cloud/provider=&amp;lt;provider&amp;gt;&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>The labels &lt;code>shoot.gardener.cloud/provider&lt;/code> and &lt;code>seed.gardener.cloud/provider&lt;/code> are added by Gardener when it creates the Shoot namespace.&lt;/p>
&lt;h2 id="contract-specification">Contract Specification&lt;/h2>
&lt;p>This section specifies the contract that Gardener and webhooks should adhere to in order to ensure smooth interoperability. Note that this contract can&amp;rsquo;t be specified formally and is therefore easy to violate, especially by Gardener. The Gardener team will nevertheless do its best to adhere to this contract in the future and to ensure via additional measures (tests, validations) that it&amp;rsquo;s not unintentionally broken. If it needs to be changed intentionally, this can only happen after proper communication has taken place to ensure that the affected provider webhooks could be adapted to work with the new version of the contract.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Note:&lt;/strong> The contract described below may not necessarily be what Gardener does currently (as of May 2019). Rather, it reflects the target state after changes for &lt;a href="https://gardener.cloud/docs/gardener/extensions/overview/">Gardener extensibility&lt;/a> have been introduced.&lt;/p>
&lt;/blockquote>
&lt;h3 id="kube-apiserver">kube-apiserver&lt;/h3>
&lt;p>To deploy kube-apiserver, Gardener &lt;strong>shall&lt;/strong> create a deployment and a service both named &lt;code>kube-apiserver&lt;/code> in the Shoot namespace. They can be mutated by webhooks to apply any provider-specific changes to the standard configuration provided by Gardener.&lt;/p>
&lt;p>The pod template of the &lt;code>kube-apiserver&lt;/code> deployment &lt;strong>shall&lt;/strong> contain a container named &lt;code>kube-apiserver&lt;/code>.&lt;/p>
&lt;p>The &lt;code>command&lt;/code> field of the &lt;code>kube-apiserver&lt;/code> container &lt;strong>shall&lt;/strong> contain the &lt;a href="https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/">kube-apiserver command line&lt;/a>. It &lt;strong>shall&lt;/strong> contain a number of provider-independent flags that should be ignored by webhooks, such as:&lt;/p>
&lt;ul>
&lt;li>admission plugins (&lt;code>--enable-admission-plugins&lt;/code>, &lt;code>--disable-admission-plugins&lt;/code>)&lt;/li>
&lt;li>secure communications (&lt;code>--etcd-cafile&lt;/code>, &lt;code>--etcd-certfile&lt;/code>, &lt;code>--etcd-keyfile&lt;/code>, &amp;hellip;)&lt;/li>
&lt;li>audit log (&lt;code>--audit-log-*&lt;/code>)&lt;/li>
&lt;li>ports (&lt;code>--secure-port&lt;/code>)&lt;/li>
&lt;/ul>
&lt;p>The kube-apiserver command line &lt;strong>shall not&lt;/strong> contain any provider-specific flags, such as:&lt;/p>
&lt;ul>
&lt;li>&lt;code>--cloud-provider&lt;/code>&lt;/li>
&lt;li>&lt;code>--cloud-config&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>These flags can be added by webhooks if needed.&lt;/p>
&lt;p>The &lt;code>kube-apiserver&lt;/code> command line &lt;strong>may&lt;/strong> contain a number of additional provider-independent flags. In general, webhooks should ignore these unless they are known to interfere with the desired kube-apiserver behavior for the specific provider. Among the flags to be considered are:&lt;/p>
&lt;ul>
&lt;li>&lt;code>--endpoint-reconciler-type&lt;/code>&lt;/li>
&lt;li>&lt;code>--advertise-address&lt;/code>&lt;/li>
&lt;li>&lt;code>--feature-gates&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Gardener uses &lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/08-shoot-apiserver-via-sni.md">SNI&lt;/a> to expose the apiserver. In this case, Gardener &lt;strong>will&lt;/strong> label the &lt;code>kube-apiserver&lt;/code>&amp;rsquo;s &lt;code>Deployment&lt;/code> with &lt;code>core.gardener.cloud/apiserver-exposure: gardener-managed&lt;/code> label (deprecated, the label will no longer be added as of &lt;code>v1.80&lt;/code>) and expects that the &lt;code>--endpoint-reconciler-type&lt;/code> and &lt;code>--advertise-address&lt;/code> flags are not modified.&lt;/p>
&lt;p>The &lt;code>--enable-admission-plugins&lt;/code> flag &lt;strong>may&lt;/strong> contain admission plugins that are not compatible with CSI plugins such as &lt;code>PersistentVolumeLabel&lt;/code>. Webhooks should therefore ensure that such admission plugins are either explicitly enabled (if CSI plugins are not used) or disabled (otherwise).&lt;/p>
&lt;p>The &lt;code>env&lt;/code> field of the &lt;code>kube-apiserver&lt;/code> container &lt;strong>shall not&lt;/strong> contain any provider-specific environment variables (so it will be empty). If any provider-specific environment variables are needed, they should be added by webhooks.&lt;/p>
&lt;p>The &lt;code>volumes&lt;/code> field of the pod template of the &lt;code>kube-apiserver&lt;/code> deployment, and respectively the &lt;code>volumeMounts&lt;/code> field of the &lt;code>kube-apiserver&lt;/code> container &lt;strong>shall not&lt;/strong> contain any provider-specific &lt;code>Secret&lt;/code> or &lt;code>ConfigMap&lt;/code> resources. If such resources should be mounted as volumes, this should be done by webhooks.&lt;/p>
&lt;p>The &lt;code>kube-apiserver&lt;/code> &lt;code>Service&lt;/code> &lt;strong>may&lt;/strong> be of type &lt;code>LoadBalancer&lt;/code>, but &lt;strong>shall not&lt;/strong> contain any provider-specific annotations that may be needed to actually provision a load balancer resource in the Seed provider&amp;rsquo;s cloud. If any such annotations are needed, they should be added by webhooks (typically &lt;code>controlplaneexposure&lt;/code> webhooks).&lt;/p>
&lt;p>The &lt;code>kube-apiserver&lt;/code> &lt;code>Service&lt;/code> &lt;strong>will&lt;/strong> be of type &lt;code>ClusterIP&lt;/code>. In this case, Gardener &lt;strong>will&lt;/strong> label this &lt;code>Service&lt;/code> with &lt;code>core.gardener.cloud/apiserver-exposure: gardener-managed&lt;/code> label (deprecated, the label will no longer be added as of &lt;code>v1.80&lt;/code>) and expects that no mutations happen.&lt;/p>
&lt;h3 id="kube-controller-manager">kube-controller-manager&lt;/h3>
&lt;p>To deploy kube-controller-manager, Gardener &lt;strong>shall&lt;/strong> create a deployment named &lt;code>kube-controller-manager&lt;/code> in the Shoot namespace. It can be mutated by webhooks to apply any provider-specific changes to the standard configuration provided by Gardener.&lt;/p>
&lt;p>The pod template of the &lt;code>kube-controller-manager&lt;/code> deployment &lt;strong>shall&lt;/strong> contain a container named &lt;code>kube-controller-manager&lt;/code>.&lt;/p>
&lt;p>The &lt;code>command&lt;/code> field of the &lt;code>kube-controller-manager&lt;/code> container &lt;strong>shall&lt;/strong> contain the &lt;a href="https://kubernetes.io/docs/reference/command-line-tools-reference/kube-controller-manager/">kube-controller-manager command line&lt;/a>. It &lt;strong>shall&lt;/strong> contain a number of provider-independent flags that should be ignored by webhooks, such as:&lt;/p>
&lt;ul>
&lt;li>&lt;code>--kubeconfig&lt;/code>, &lt;code>--authentication-kubeconfig&lt;/code>, &lt;code>--authorization-kubeconfig&lt;/code>&lt;/li>
&lt;li>&lt;code>--leader-elect&lt;/code>&lt;/li>
&lt;li>secure communications (&lt;code>--tls-cert-file&lt;/code>, &lt;code>--tls-private-key-file&lt;/code>, &amp;hellip;)&lt;/li>
&lt;li>cluster CIDR and identity (&lt;code>--cluster-cidr&lt;/code>, &lt;code>--cluster-name&lt;/code>)&lt;/li>
&lt;li>sync settings (&lt;code>--concurrent-deployment-syncs&lt;/code>, &lt;code>--concurrent-replicaset-syncs&lt;/code>)&lt;/li>
&lt;li>horizontal pod autoscaler (&lt;code>--horizontal-pod-autoscaler-*&lt;/code>)&lt;/li>
&lt;li>ports (&lt;code>--port&lt;/code>, &lt;code>--secure-port&lt;/code>)&lt;/li>
&lt;/ul>
&lt;p>The kube-controller-manager command line &lt;strong>shall not&lt;/strong> contain any provider-specific flags, such as:&lt;/p>
&lt;ul>
&lt;li>&lt;code>--cloud-provider&lt;/code>&lt;/li>
&lt;li>&lt;code>--cloud-config&lt;/code>&lt;/li>
&lt;li>&lt;code>--configure-cloud-routes&lt;/code>&lt;/li>
&lt;li>&lt;code>--external-cloud-volume-plugin&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>These flags can be added by webhooks if needed.&lt;/p>
&lt;p>The kube-controller-manager command line &lt;strong>may&lt;/strong> contain a number of additional provider-independent flags. In general, webhooks should ignore these unless they are known to interfere with the desired kube-controller-manager behavior for the specific provider. Among the flags to be considered are:&lt;/p>
&lt;ul>
&lt;li>&lt;code>--feature-gates&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>The &lt;code>env&lt;/code> field of the &lt;code>kube-controller-manager&lt;/code> container &lt;strong>shall not&lt;/strong> contain any provider-specific environment variables (so it will be empty). If any provider-specific environment variables are needed, they should be added by webhooks.&lt;/p>
&lt;p>The &lt;code>volumes&lt;/code> field of the pod template of the &lt;code>kube-controller-manager&lt;/code> deployment, and respectively the &lt;code>volumeMounts&lt;/code> field of the &lt;code>kube-controller-manager&lt;/code> container &lt;strong>shall not&lt;/strong> contain any provider-specific &lt;code>Secret&lt;/code> or &lt;code>ConfigMap&lt;/code> resources. If such resources should be mounted as volumes, this should be done by webhooks.&lt;/p>
&lt;h3 id="kube-scheduler">kube-scheduler&lt;/h3>
&lt;p>To deploy kube-scheduler, Gardener &lt;strong>shall&lt;/strong> create a deployment named &lt;code>kube-scheduler&lt;/code> in the Shoot namespace. It can be mutated by webhooks to apply any provider-specific changes to the standard configuration provided by Gardener.&lt;/p>
&lt;p>The pod template of the &lt;code>kube-scheduler&lt;/code> deployment &lt;strong>shall&lt;/strong> contain a container named &lt;code>kube-scheduler&lt;/code>.&lt;/p>
&lt;p>The &lt;code>command&lt;/code> field of the &lt;code>kube-scheduler&lt;/code> container &lt;strong>shall&lt;/strong> contain the &lt;a href="https://kubernetes.io/docs/reference/command-line-tools-reference/kube-scheduler/">kube-scheduler command line&lt;/a>. It &lt;strong>shall&lt;/strong> contain a number of provider-independent flags that should be ignored by webhooks, such as:&lt;/p>
&lt;ul>
&lt;li>&lt;code>--config&lt;/code>&lt;/li>
&lt;li>&lt;code>--authentication-kubeconfig&lt;/code>, &lt;code>--authorization-kubeconfig&lt;/code>&lt;/li>
&lt;li>secure communications (&lt;code>--tls-cert-file&lt;/code>, &lt;code>--tls-private-key-file&lt;/code>, &amp;hellip;)&lt;/li>
&lt;li>ports (&lt;code>--port&lt;/code>, &lt;code>--secure-port&lt;/code>)&lt;/li>
&lt;/ul>
&lt;p>The kube-scheduler command line &lt;strong>may&lt;/strong> contain additional provider-independent flags. In general, webhooks should ignore these unless they are known to interfere with the desired kube-controller-manager behavior for the specific provider. Among the flags to be considered are:&lt;/p>
&lt;ul>
&lt;li>&lt;code>--feature-gates&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>The kube-scheduler command line can&amp;rsquo;t contain provider-specific flags, and it makes no sense to specify provider-specific environment variables or mount provider-specific &lt;code>Secret&lt;/code> or &lt;code>ConfigMap&lt;/code> resources as volumes.&lt;/p>
&lt;h3 id="etcd-main-and-etcd-events">etcd-main and etcd-events&lt;/h3>
&lt;p>To deploy etcd, Gardener &lt;strong>shall&lt;/strong> create 2 &lt;a href="https://github.com/gardener/etcd-druid/blob/1d427e9167adac1476d1847c0e265c2c09d6bc62/config/samples/druid_v1alpha1_etcd.yaml">Etcd&lt;/a> named &lt;code>etcd-main&lt;/code> and &lt;code>etcd-events&lt;/code> in the Shoot namespace. They can be mutated by webhooks to apply any provider-specific changes to the standard configuration provided by Gardener.&lt;/p>
&lt;p>Gardener &lt;strong>shall&lt;/strong> configure the &lt;code>Etcd&lt;/code> resource completely to set up an etcd cluster which uses the default storage class of the seed cluster.&lt;/p>
&lt;h3 id="cloud-controller-manager">cloud-controller-manager&lt;/h3>
&lt;p>Gardener &lt;strong>shall not&lt;/strong> deploy a cloud-controller-manager. If it is needed, it should be added by a &lt;a href="https://gardener.cloud/docs/gardener/extensions/controlplane/">&lt;code>ControlPlane&lt;/code> controller&lt;/a>&lt;/p>
&lt;h3 id="csi-controllers">CSI Controllers&lt;/h3>
&lt;p>Gardener &lt;strong>shall not&lt;/strong> deploy a CSI controller. If it is needed, it should be added by a &lt;a href="https://gardener.cloud/docs/gardener/extensions/controlplane/">&lt;code>ControlPlane&lt;/code> controller&lt;/a>&lt;/p>
&lt;h3 id="kubelet">kubelet&lt;/h3>
&lt;p>To specify the kubelet configuration, Gardener &lt;strong>shall&lt;/strong> create a &lt;a href="https://gardener.cloud/docs/gardener/extensions/operatingsystemconfig/">&lt;code>OperatingSystemConfig&lt;/code> resource&lt;/a> with any name and purpose &lt;code>reconcile&lt;/code> in the Shoot namespace. It can therefore also be mutated by webhooks to apply any provider-specific changes to the standard configuration provided by Gardener. Gardener &lt;strong>may&lt;/strong> write multiple such resources with different &lt;code>type&lt;/code> to the same Shoot namespaces if multiple OSs are used.&lt;/p>
&lt;p>The OSC resource &lt;strong>shall&lt;/strong> contain a unit named &lt;code>kubelet.service&lt;/code>, containing the corresponding systemd unit configuration file. The &lt;code>[Service]&lt;/code> section of this file &lt;strong>shall&lt;/strong> contain a single &lt;code>ExecStart&lt;/code> option having the &lt;a href="https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/">kubelet command line&lt;/a> as its value.&lt;/p>
&lt;p>The OSC resource &lt;strong>shall&lt;/strong> contain a file with path &lt;code>/var/lib/kubelet/config/kubelet&lt;/code>, which contains a &lt;code>KubeletConfiguration&lt;/code> resource in YAML format. Most of the flags that can be specified in the kubelet command line can alternatively be specified as options in this configuration as well.&lt;/p>
&lt;p>The kubelet command line &lt;strong>shall&lt;/strong> contain a number of provider-independent flags that should be ignored by webhooks, such as:&lt;/p>
&lt;ul>
&lt;li>&lt;code>--config&lt;/code>&lt;/li>
&lt;li>&lt;code>--bootstrap-kubeconfig&lt;/code>, &lt;code>--kubeconfig&lt;/code>&lt;/li>
&lt;li>&lt;code>--network-plugin&lt;/code> (and, if it equals &lt;code>cni&lt;/code>, also &lt;code>--cni-bin-dir&lt;/code> and &lt;code>--cni-conf-dir&lt;/code>)&lt;/li>
&lt;li>&lt;code>--node-labels&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>The kubelet command line &lt;strong>shall not&lt;/strong> contain any provider-specific flags, such as:&lt;/p>
&lt;ul>
&lt;li>&lt;code>--cloud-provider&lt;/code>&lt;/li>
&lt;li>&lt;code>--cloud-config&lt;/code>&lt;/li>
&lt;li>&lt;code>--provider-id&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>These flags can be added by webhooks if needed.&lt;/p>
&lt;p>The kubelet command line / configuration &lt;strong>may&lt;/strong> contain a number of additional provider-independent flags / options. In general, webhooks should ignore these unless they are known to interfere with the desired kubelet behavior for the specific provider. Among the flags / options to be considered are:&lt;/p>
&lt;ul>
&lt;li>&lt;code>--enable-controller-attach-detach&lt;/code> (&lt;code>enableControllerAttachDetach&lt;/code>) - should be set to &lt;code>true&lt;/code> if CSI plugins are used, but in general can also be ignored since its default value is also &lt;code>true&lt;/code>, and this should work both with and without CSI plugins.&lt;/li>
&lt;li>&lt;code>--feature-gates&lt;/code> (&lt;code>featureGates&lt;/code>) - should contain a list of specific feature gates if CSI plugins are used. If CSI plugins are not used, the corresponding feature gates can be ignored since enabling them should not harm in any way.&lt;/li>
&lt;/ul></description></item><item><title>Docs: Conventions</title><link>https://gardener.cloud/docs/gardener/extensions/conventions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/extensions/conventions/</guid><description>
&lt;h1 id="general-conventions">General Conventions&lt;/h1>
&lt;p>All the extensions that are registered to Gardener are deployed to the seed clusters on which they are required (also see &lt;a href="https://gardener.cloud/docs/gardener/extensions/controllerregistration/">ControllerRegistration&lt;/a>).&lt;/p>
&lt;p>Some of these extensions might need to create global resources in the seed (e.g., &lt;code>ClusterRole&lt;/code>s), i.e., it&amp;rsquo;s important to have a naming scheme to avoid conflicts as it cannot be checked or validated upfront that two extensions don&amp;rsquo;t use the same names.&lt;/p>
&lt;p>Consequently, this page should help answering some general questions that might come up when it comes to developing an extension.&lt;/p>
&lt;h2 id="priorityclasses">&lt;code>PriorityClass&lt;/code>es&lt;/h2>
&lt;p>Extensions are not supposed to create and use self-defined &lt;code>PriorityClasses&lt;/code>.
Instead, they can and should rely on well-known &lt;a href="https://gardener.cloud/docs/gardener/priority-classes/">&lt;code>PriorityClasses&lt;/code>&lt;/a> managed by gardenlet.&lt;/p>
&lt;h2 id="high-availability-of-deployed-components">High Availability of Deployed Components&lt;/h2>
&lt;p>Extensions might deploy components via &lt;code>Deployment&lt;/code>s, &lt;code>StatefulSet&lt;/code>s, etc., as part of the shoot control plane, or the seed or shoot system components.
In case a seed or shoot cluster is highly available, there are various failure tolerance types. For more information, see &lt;a href="https://gardener.cloud/docs/gardener/shoot_high_availability/">Highly Available Shoot Control Plane&lt;/a>.
Accordingly, the &lt;code>replicas&lt;/code>, &lt;code>topologySpreadConstraints&lt;/code> or &lt;code>affinity&lt;/code> settings of the deployed components might need to be adapted.&lt;/p>
&lt;p>Instead of doing this one-by-one for each and every component, extensions can rely on a mutating webhook provided by Gardener.
Please refer to &lt;a href="https://gardener.cloud/docs/gardener/high-availability/">High Availability of Deployed Components&lt;/a> for details.&lt;/p>
&lt;p>To reduce costs and to improve the network traffic latency in multi-zone clusters, extensions can make a Service topology-aware.
Please refer to &lt;a href="https://gardener.cloud/docs/gardener/topology_aware_routing/">this document&lt;/a> for details.&lt;/p>
&lt;h2 id="is-there-a-naming-scheme-for-global-resources">Is there a naming scheme for (global) resources?&lt;/h2>
&lt;p>As there is no formal process to validate non-existence of conflicts between two extensions, please follow these naming schemes when creating resources (especially, when creating global resources, but it&amp;rsquo;s in general a good idea for most created resources):&lt;/p>
&lt;p>&lt;em>The resource name should be prefixed with &lt;code>extensions.gardener.cloud:&amp;lt;extension-type&amp;gt;-&amp;lt;extension-name&amp;gt;:&amp;lt;resource-name&amp;gt;&lt;/code>&lt;/em>, for example:&lt;/p>
&lt;ul>
&lt;li>&lt;code>extensions.gardener.cloud:provider-aws:some-controller-manager&lt;/code>&lt;/li>
&lt;li>&lt;code>extensions.gardener.cloud:extension-certificate-service:cert-broker&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="how-to-create-resources-in-the-shoot-cluster">How to create resources in the shoot cluster?&lt;/h2>
&lt;p>Some extensions might not only create resources in the seed cluster itself but also in the shoot cluster. Usually, every extension comes with a &lt;code>ServiceAccount&lt;/code> and the required RBAC permissions when it gets installed to the seed.
However, there are no credentials for the shoot for every extension.&lt;/p>
&lt;p>Extensions are supposed to use &lt;a href="https://gardener.cloud/docs/gardener/concepts/resource-manager/#ManagedResource-controller">&lt;code>ManagedResources&lt;/code>&lt;/a> to manage resources in shoot clusters.
gardenlet deploys gardener-resource-manager instances into all shoot control planes, that will reconcile &lt;code>ManagedResources&lt;/code> without a specified class (&lt;code>spec.class=null&lt;/code>) in shoot clusters. Mind that Gardener acts on &lt;code>ManagedResources&lt;/code> with the &lt;code>origin=gardener&lt;/code> label. In order to prevent unwanted behavior, extensions should omit the &lt;code>origin&lt;/code> label or provide their own unique value for it when creating such resources.&lt;/p>
&lt;p>If you need to deploy a non-DaemonSet resource, Gardener automatically ensures that it only runs on nodes that are allowed to host system components and extensions. For more information, see &lt;a href="https://gardener.cloud/docs/gardener/concepts/resource-manager/#System-Components-Webhook">System Components Webhook&lt;/a>.&lt;/p>
&lt;h2 id="how-to-create-kubeconfigs-for-the-shoot-cluster">How to create kubeconfigs for the shoot cluster?&lt;/h2>
&lt;p>Historically, Gardener extensions used to generate kubeconfigs with client certificates for components they deploy into the shoot control plane.
For this, they reused the shoot cluster CA secret (&lt;code>ca&lt;/code>) to issue new client certificates.
With &lt;a href="https://github.com/gardener/gardener/issues/4661">gardener/gardener#4661&lt;/a> we moved away from using client certificates in favor of short-lived, auto-rotated &lt;code>ServiceAccount&lt;/code> tokens. These tokens are managed by gardener-resource-manager&amp;rsquo;s &lt;a href="https://gardener.cloud/docs/gardener/concepts/resource-manager/#tokenrequestor">&lt;code>TokenRequestor&lt;/code>&lt;/a>.
Extensions are supposed to reuse this mechanism for requesting tokens and a &lt;code>generic-token-kubeconfig&lt;/code> for authenticating against shoot clusters.&lt;/p>
&lt;p>With &lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/18-shoot-CA-rotation.md">GEP-18&lt;/a> (Shoot cluster CA rotation), a dedicated CA will be used for signing client certificates (&lt;a href="https://github.com/gardener/gardener/pull/5779">gardener/gardener#5779&lt;/a>) which will be rotated when triggered by the shoot owner.
With this, extensions cannot reuse the &lt;code>ca&lt;/code> secret anymore to issue client certificates.
Hence, extensions must switch to short-lived &lt;code>ServiceAccount&lt;/code> tokens in order to support the CA rotation feature.&lt;/p>
&lt;p>The &lt;code>generic-token-kubeconfig&lt;/code> secret contains the CA bundle for establishing trust to shoot API servers. However, as the secret is immutable, its name changes with the rotation of the cluster CA.
Extensions need to look up the &lt;code>generic-token-kubeconfig.secret.gardener.cloud/name&lt;/code> annotation on the respective &lt;a href="https://gardener.cloud/docs/gardener/extensions/cluster/">&lt;code>Cluster&lt;/code>&lt;/a> object in order to determine which secret contains the current CA bundle.
The helper function &lt;code>extensionscontroller.GenericTokenKubeconfigSecretNameFromCluster&lt;/code> can be used for this task.&lt;/p>
&lt;p>You can take a look at &lt;a href="https://gardener.cloud/docs/gardener/extensions/ca-rotation/">CA Rotation in Extensions&lt;/a> for more details on the CA rotation feature in regard to extensions.&lt;/p>
&lt;h2 id="how-to-create-certificates-for-the-shoot-cluster">How to create certificates for the shoot cluster?&lt;/h2>
&lt;p>Gardener creates several certificate authorities (CA) that are used to create server certificates for various components.
For example, the shoot&amp;rsquo;s etcd has its own CA, the kube-aggregator has its own CA as well, and both are different to the actual cluster&amp;rsquo;s CA.&lt;/p>
&lt;p>With &lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/18-shoot-CA-rotation.md">GEP-18&lt;/a> (Shoot cluster CA rotation), extensions are required to do the same and generate dedicated CAs for their components (e.g. for signing a server certificate for cloud-controller-manager). They must not depend on the CA secrets managed by gardenlet.&lt;/p>
&lt;p>Please see &lt;a href="https://gardener.cloud/docs/gardener/extensions/ca-rotation/">CA Rotation in Extensions&lt;/a> for the exact requirements that extensions need to fulfill in order to support the CA rotation feature.&lt;/p>
&lt;h2 id="how-to-enforce-a-pod-security-standard-for-extension-namespaces">How to enforce a Pod Security Standard for extension namespaces?&lt;/h2>
&lt;p>The &lt;code>pod-security.kubernetes.io/enforce&lt;/code> namespace label enforces the &lt;a href="https://kubernetes.io/docs/concepts/security/pod-security-standards/">Pod Security Standards&lt;/a>.&lt;/p>
&lt;p>You can set the &lt;code>pod-security.kubernetes.io/enforce&lt;/code> label for extension namespace by adding the &lt;code>security.gardener.cloud/pod-security-enforce&lt;/code> annotation to your &lt;code>ControllerRegistration&lt;/code>. The value of the annotation would be the value set for the &lt;code>pod-security.kubernetes.io/enforce&lt;/code> label. It is advised to set the annotation with the most restrictive pod security standard that your extension pods comply with.&lt;/p>
&lt;p>If you are using the &lt;code>./hack/generate-controller-registration.sh&lt;/code> script to generate your &lt;code>ControllerRegistration&lt;/code> you can use the -e, &amp;ndash;pod-security-enforce option to set the &lt;code>security.gardener.cloud/pod-security-enforce&lt;/code> annotation. If the option is not set, it defaults to &lt;code>baseline&lt;/code>.&lt;/p></description></item><item><title>Docs: Core</title><link>https://gardener.cloud/docs/gardener/api-reference/core/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/api-reference/core/</guid><description>
&lt;p>Packages:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="#core.gardener.cloud%2fv1beta1">core.gardener.cloud/v1beta1&lt;/a>
&lt;/li>
&lt;/ul>
&lt;h2 id="core.gardener.cloud/v1beta1">core.gardener.cloud/v1beta1&lt;/h2>
&lt;p>
&lt;p>Package v1beta1 is a version of the API.&lt;/p>
&lt;/p>
Resource Types:
&lt;ul>&lt;li>
&lt;a href="#core.gardener.cloud/v1beta1.BackupBucket">BackupBucket&lt;/a>
&lt;/li>&lt;li>
&lt;a href="#core.gardener.cloud/v1beta1.BackupEntry">BackupEntry&lt;/a>
&lt;/li>&lt;li>
&lt;a href="#core.gardener.cloud/v1beta1.CloudProfile">CloudProfile&lt;/a>
&lt;/li>&lt;li>
&lt;a href="#core.gardener.cloud/v1beta1.ControllerDeployment">ControllerDeployment&lt;/a>
&lt;/li>&lt;li>
&lt;a href="#core.gardener.cloud/v1beta1.ControllerInstallation">ControllerInstallation&lt;/a>
&lt;/li>&lt;li>
&lt;a href="#core.gardener.cloud/v1beta1.ControllerRegistration">ControllerRegistration&lt;/a>
&lt;/li>&lt;li>
&lt;a href="#core.gardener.cloud/v1beta1.ExposureClass">ExposureClass&lt;/a>
&lt;/li>&lt;li>
&lt;a href="#core.gardener.cloud/v1beta1.InternalSecret">InternalSecret&lt;/a>
&lt;/li>&lt;li>
&lt;a href="#core.gardener.cloud/v1beta1.Project">Project&lt;/a>
&lt;/li>&lt;li>
&lt;a href="#core.gardener.cloud/v1beta1.Quota">Quota&lt;/a>
&lt;/li>&lt;li>
&lt;a href="#core.gardener.cloud/v1beta1.SecretBinding">SecretBinding&lt;/a>
&lt;/li>&lt;li>
&lt;a href="#core.gardener.cloud/v1beta1.Seed">Seed&lt;/a>
&lt;/li>&lt;li>
&lt;a href="#core.gardener.cloud/v1beta1.Shoot">Shoot&lt;/a>
&lt;/li>&lt;li>
&lt;a href="#core.gardener.cloud/v1beta1.ShootState">ShootState&lt;/a>
&lt;/li>&lt;/ul>
&lt;h3 id="core.gardener.cloud/v1beta1.BackupBucket">BackupBucket
&lt;/h3>
&lt;p>
&lt;p>BackupBucket holds details about backup bucket&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>apiVersion&lt;/code>&lt;/br>
string&lt;/td>
&lt;td>
&lt;code>
core.gardener.cloud/v1beta1
&lt;/code>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
string
&lt;/td>
&lt;td>&lt;code>BackupBucket&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Standard object metadata.&lt;/p>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>spec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.BackupBucketSpec">
BackupBucketSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Specification of the Backup Bucket.&lt;/p>
&lt;br/>
&lt;br/>
&lt;table>
&lt;tr>
&lt;td>
&lt;code>provider&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.BackupBucketProvider">
BackupBucketProvider
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Provider holds the details of cloud provider of the object store. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>providerConfig&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ProviderConfig is the configuration passed to BackupBucket resource.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>secretRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#secretreference-v1-core">
Kubernetes core/v1.SecretReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>SecretRef is a reference to a secret that contains the credentials to access object store.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>seedName&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SeedName holds the name of the seed allocated to BackupBucket for running controller.
This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>status&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.BackupBucketStatus">
BackupBucketStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Most recently observed status of the Backup Bucket.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.BackupEntry">BackupEntry
&lt;/h3>
&lt;p>
&lt;p>BackupEntry holds details about shoot backup.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>apiVersion&lt;/code>&lt;/br>
string&lt;/td>
&lt;td>
&lt;code>
core.gardener.cloud/v1beta1
&lt;/code>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
string
&lt;/td>
&lt;td>&lt;code>BackupEntry&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Standard object metadata.&lt;/p>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>spec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.BackupEntrySpec">
BackupEntrySpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Spec contains the specification of the Backup Entry.&lt;/p>
&lt;br/>
&lt;br/>
&lt;table>
&lt;tr>
&lt;td>
&lt;code>bucketName&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>BucketName is the name of backup bucket for this Backup Entry.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>seedName&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SeedName holds the name of the seed to which this BackupEntry is scheduled&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>status&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.BackupEntryStatus">
BackupEntryStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Status contains the most recently observed status of the Backup Entry.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.CloudProfile">CloudProfile
&lt;/h3>
&lt;p>
&lt;p>CloudProfile represents certain properties about a provider environment.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>apiVersion&lt;/code>&lt;/br>
string&lt;/td>
&lt;td>
&lt;code>
core.gardener.cloud/v1beta1
&lt;/code>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
string
&lt;/td>
&lt;td>&lt;code>CloudProfile&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Standard object metadata.&lt;/p>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>spec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.CloudProfileSpec">
CloudProfileSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Spec defines the provider environment properties.&lt;/p>
&lt;br/>
&lt;br/>
&lt;table>
&lt;tr>
&lt;td>
&lt;code>caBundle&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>CABundle is a certificate bundle which will be installed onto every host machine of shoot cluster targeting this profile.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kubernetes&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.KubernetesSettings">
KubernetesSettings
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Kubernetes contains constraints regarding allowed values of the ‘kubernetes’ block in the Shoot specification.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>machineImages&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.MachineImage">
[]MachineImage
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>MachineImages contains constraints regarding allowed values for machine images in the Shoot specification.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>machineTypes&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.MachineType">
[]MachineType
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>MachineTypes contains constraints regarding allowed values for machine types in the ‘workers’ block in the Shoot specification.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>providerConfig&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ProviderConfig contains provider-specific configuration for the profile.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>regions&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Region">
[]Region
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Regions contains constraints regarding allowed values for regions and zones.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>seedSelector&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSelector">
SeedSelector
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SeedSelector contains an optional list of labels on &lt;code>Seed&lt;/code> resources that marks those seeds whose shoots may use this provider profile.
An empty list means that all seeds of the same provider type are supported.
This is useful for environments that are of the same type (like openstack) but may have different “instances”/landscapes.
Optionally a list of possible providers can be added to enable cross-provider scheduling. By default, the provider
type of the seed must match the shoot’s provider.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>type&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Type is the name of the provider.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>volumeTypes&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.VolumeType">
[]VolumeType
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>VolumeTypes contains constraints regarding allowed values for volume types in the ‘workers’ block in the Shoot specification.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ControllerDeployment">ControllerDeployment
&lt;/h3>
&lt;p>
&lt;p>ControllerDeployment contains information about how this controller is deployed.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>apiVersion&lt;/code>&lt;/br>
string&lt;/td>
&lt;td>
&lt;code>
core.gardener.cloud/v1beta1
&lt;/code>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
string
&lt;/td>
&lt;td>&lt;code>ControllerDeployment&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Standard object metadata.&lt;/p>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>type&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Type is the deployment type.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>providerConfig&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>ProviderConfig contains type-specific configuration. It contains assets that deploy the controller.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ControllerInstallation">ControllerInstallation
&lt;/h3>
&lt;p>
&lt;p>ControllerInstallation represents an installation request for an external controller.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>apiVersion&lt;/code>&lt;/br>
string&lt;/td>
&lt;td>
&lt;code>
core.gardener.cloud/v1beta1
&lt;/code>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
string
&lt;/td>
&lt;td>&lt;code>ControllerInstallation&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Standard object metadata.&lt;/p>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>spec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ControllerInstallationSpec">
ControllerInstallationSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Spec contains the specification of this installation.
If the object’s deletion timestamp is set, this field is immutable.&lt;/p>
&lt;br/>
&lt;br/>
&lt;table>
&lt;tr>
&lt;td>
&lt;code>registrationRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectreference-v1-core">
Kubernetes core/v1.ObjectReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>RegistrationRef is used to reference a ControllerRegistration resource.
The name field of the RegistrationRef is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>seedRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectreference-v1-core">
Kubernetes core/v1.ObjectReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>SeedRef is used to reference a Seed resource. The name field of the SeedRef is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>deploymentRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectreference-v1-core">
Kubernetes core/v1.ObjectReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>DeploymentRef is used to reference a ControllerDeployment resource.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>status&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ControllerInstallationStatus">
ControllerInstallationStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Status contains the status of this installation.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ControllerRegistration">ControllerRegistration
&lt;/h3>
&lt;p>
&lt;p>ControllerRegistration represents a registration of an external controller.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>apiVersion&lt;/code>&lt;/br>
string&lt;/td>
&lt;td>
&lt;code>
core.gardener.cloud/v1beta1
&lt;/code>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
string
&lt;/td>
&lt;td>&lt;code>ControllerRegistration&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Standard object metadata.&lt;/p>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>spec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ControllerRegistrationSpec">
ControllerRegistrationSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Spec contains the specification of this registration.
If the object’s deletion timestamp is set, this field is immutable.&lt;/p>
&lt;br/>
&lt;br/>
&lt;table>
&lt;tr>
&lt;td>
&lt;code>resources&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ControllerResource">
[]ControllerResource
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Resources is a list of combinations of kinds (DNSProvider, Infrastructure, Generic, …) and their actual types
(aws-route53, gcp, auditlog, …).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>deployment&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ControllerRegistrationDeployment">
ControllerRegistrationDeployment
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Deployment contains information for how this controller is deployed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ExposureClass">ExposureClass
&lt;/h3>
&lt;p>
&lt;p>ExposureClass represents a control plane endpoint exposure strategy.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>apiVersion&lt;/code>&lt;/br>
string&lt;/td>
&lt;td>
&lt;code>
core.gardener.cloud/v1beta1
&lt;/code>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
string
&lt;/td>
&lt;td>&lt;code>ExposureClass&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Standard object metadata.&lt;/p>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>handler&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Handler is the name of the handler which applies the control plane endpoint exposure strategy.
This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>scheduling&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ExposureClassScheduling">
ExposureClassScheduling
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Scheduling holds information how to select applicable Seed’s for ExposureClass usage.
This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.InternalSecret">InternalSecret
&lt;/h3>
&lt;p>
&lt;p>InternalSecret holds secret data of a certain type. The total bytes of the values in
the Data field must be less than MaxSecretSize bytes.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>apiVersion&lt;/code>&lt;/br>
string&lt;/td>
&lt;td>
&lt;code>
core.gardener.cloud/v1beta1
&lt;/code>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
string
&lt;/td>
&lt;td>&lt;code>InternalSecret&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Standard object’s metadata.
More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata&lt;/a>&lt;/p>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>immutable&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Immutable, if set to true, ensures that data stored in the Secret cannot
be updated (only object metadata can be modified).
If not set to true, the field can be modified at any time.
Defaulted to nil.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>data&lt;/code>&lt;/br>
&lt;em>
map[string][]byte
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Data contains the secret data. Each key must consist of alphanumeric
characters, ‘-’, ‘_’ or ‘.’. The serialized form of the secret data is a
base64 encoded string, representing the arbitrary (possibly non-string)
data value here. Described in &lt;a href="https://tools.ietf.org/html/rfc4648#section-4">https://tools.ietf.org/html/rfc4648#section-4&lt;/a>&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>stringData&lt;/code>&lt;/br>
&lt;em>
map[string]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>stringData allows specifying non-binary secret data in string form.
It is provided as a write-only input field for convenience.
All keys and values are merged into the data field on write, overwriting any existing values.
The stringData field is never output when reading from the API.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>type&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#secrettype-v1-core">
Kubernetes core/v1.SecretType
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Used to facilitate programmatic handling of secret data.
More info: &lt;a href="https://kubernetes.io/docs/concepts/configuration/secret/#secret-types">https://kubernetes.io/docs/concepts/configuration/secret/#secret-types&lt;/a>&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.Project">Project
&lt;/h3>
&lt;p>
&lt;p>Project holds certain properties about a Gardener project.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>apiVersion&lt;/code>&lt;/br>
string&lt;/td>
&lt;td>
&lt;code>
core.gardener.cloud/v1beta1
&lt;/code>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
string
&lt;/td>
&lt;td>&lt;code>Project&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Standard object metadata.&lt;/p>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>spec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ProjectSpec">
ProjectSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Spec defines the project properties.&lt;/p>
&lt;br/>
&lt;br/>
&lt;table>
&lt;tr>
&lt;td>
&lt;code>createdBy&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#subject-v1-rbac">
Kubernetes rbac/v1.Subject
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>CreatedBy is a subject representing a user name, an email address, or any other identifier of a user
who created the project. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>description&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Description is a human-readable description of what the project is used for.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>owner&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#subject-v1-rbac">
Kubernetes rbac/v1.Subject
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Owner is a subject representing a user name, an email address, or any other identifier of a user owning
the project.
IMPORTANT: Be aware that this field will be removed in the &lt;code>v1&lt;/code> version of this API in favor of the &lt;code>owner&lt;/code>
role. The only way to change the owner will be by moving the &lt;code>owner&lt;/code> role. In this API version the only way
to change the owner is to use this field.
TODO: Remove this field in favor of the &lt;code>owner&lt;/code> role in &lt;code>v1&lt;/code>.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>purpose&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Purpose is a human-readable explanation of the project’s purpose.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>members&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ProjectMember">
[]ProjectMember
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Members is a list of subjects representing a user name, an email address, or any other identifier of a user,
group, or service account that has a certain role.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>namespace&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Namespace is the name of the namespace that has been created for the Project object.
A nil value means that Gardener will determine the name of the namespace.
This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>tolerations&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ProjectTolerations">
ProjectTolerations
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Tolerations contains the tolerations for taints on seed clusters.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>status&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ProjectStatus">
ProjectStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Most recently observed status of the Project.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.Quota">Quota
&lt;/h3>
&lt;p>
&lt;p>Quota represents a quota on resources consumed by shoot clusters either per project or per provider secret.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>apiVersion&lt;/code>&lt;/br>
string&lt;/td>
&lt;td>
&lt;code>
core.gardener.cloud/v1beta1
&lt;/code>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
string
&lt;/td>
&lt;td>&lt;code>Quota&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Standard object metadata.&lt;/p>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>spec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.QuotaSpec">
QuotaSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Spec defines the Quota constraints.&lt;/p>
&lt;br/>
&lt;br/>
&lt;table>
&lt;tr>
&lt;td>
&lt;code>clusterLifetimeDays&lt;/code>&lt;/br>
&lt;em>
int32
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ClusterLifetimeDays is the lifetime of a Shoot cluster in days before it will be terminated automatically.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metrics&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#resourcelist-v1-core">
Kubernetes core/v1.ResourceList
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Metrics is a list of resources which will be put under constraints.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>scope&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectreference-v1-core">
Kubernetes core/v1.ObjectReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Scope is the scope of the Quota object, either ‘project’ or ‘secret’. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.SecretBinding">SecretBinding
&lt;/h3>
&lt;p>
&lt;p>SecretBinding represents a binding to a secret in the same or another namespace.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>apiVersion&lt;/code>&lt;/br>
string&lt;/td>
&lt;td>
&lt;code>
core.gardener.cloud/v1beta1
&lt;/code>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
string
&lt;/td>
&lt;td>&lt;code>SecretBinding&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Standard object metadata.&lt;/p>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>secretRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#secretreference-v1-core">
Kubernetes core/v1.SecretReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>SecretRef is a reference to a secret object in the same or another namespace.
This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>quotas&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectreference-v1-core">
[]Kubernetes core/v1.ObjectReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Quotas is a list of references to Quota objects in the same or another namespace.
This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>provider&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SecretBindingProvider">
SecretBindingProvider
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Provider defines the provider type of the SecretBinding.
This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.Seed">Seed
&lt;/h3>
&lt;p>
&lt;p>Seed represents an installation request for an external controller.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>apiVersion&lt;/code>&lt;/br>
string&lt;/td>
&lt;td>
&lt;code>
core.gardener.cloud/v1beta1
&lt;/code>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
string
&lt;/td>
&lt;td>&lt;code>Seed&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Standard object metadata.&lt;/p>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>spec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSpec">
SeedSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Spec contains the specification of this installation.&lt;/p>
&lt;br/>
&lt;br/>
&lt;table>
&lt;tr>
&lt;td>
&lt;code>backup&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedBackup">
SeedBackup
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Backup holds the object store configuration for the backups of shoot (currently only etcd).
If it is not specified, then there won’t be any backups taken for shoots associated with this seed.
If backup field is present in seed, then backups of the etcd from shoot control plane will be stored
under the configured object store.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>dns&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedDNS">
SeedDNS
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>DNS contains DNS-relevant information about this seed cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>networks&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedNetworks">
SeedNetworks
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Networks defines the pod, service and worker network of the Seed cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>provider&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedProvider">
SeedProvider
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Provider defines the provider type and region for this Seed cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>secretRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#secretreference-v1-core">
Kubernetes core/v1.SecretReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SecretRef is a reference to a Secret object containing the Kubeconfig of the Kubernetes
cluster to be registered as Seed.&lt;/p>
&lt;p>Deprecated: This field is deprecated, gardenlet must run in the Seed cluster,
hence it should use the in-cluster rest config via ServiceAccount to communicate with the Seed cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>taints&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedTaint">
[]SeedTaint
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Taints describes taints on the seed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>volume&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedVolume">
SeedVolume
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Volume contains settings for persistentvolumes created in the seed cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>settings&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSettings">
SeedSettings
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Settings contains certain settings for this seed cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>ingress&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Ingress">
Ingress
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Ingress configures Ingress specific settings of the Seed cluster. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>status&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedStatus">
SeedStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Status contains the status of this installation.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.Shoot">Shoot
&lt;/h3>
&lt;p>
&lt;p>Shoot represents a Shoot cluster created and managed by Gardener.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>apiVersion&lt;/code>&lt;/br>
string&lt;/td>
&lt;td>
&lt;code>
core.gardener.cloud/v1beta1
&lt;/code>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
string
&lt;/td>
&lt;td>&lt;code>Shoot&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Standard object metadata.&lt;/p>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>spec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootSpec">
ShootSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Specification of the Shoot cluster.
If the object’s deletion timestamp is set, this field is immutable.&lt;/p>
&lt;br/>
&lt;br/>
&lt;table>
&lt;tr>
&lt;td>
&lt;code>addons&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Addons">
Addons
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Addons contains information about enabled/disabled addons and their configuration.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>cloudProfileName&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>CloudProfileName is a name of a CloudProfile object. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>dns&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.DNS">
DNS
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>DNS contains information about the DNS settings of the Shoot.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>extensions&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Extension">
[]Extension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Extensions contain type and provider information for Shoot extensions.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>hibernation&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Hibernation">
Hibernation
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Hibernation contains information whether the Shoot is suspended or not.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kubernetes&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Kubernetes">
Kubernetes
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Kubernetes contains the version and configuration settings of the control plane components.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>networking&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Networking">
Networking
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Networking contains information about cluster networking such as CNI Plugin type, CIDRs, …etc.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>maintenance&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Maintenance">
Maintenance
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Maintenance contains information about the time window for maintenance operations and which
operations should be performed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>monitoring&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Monitoring">
Monitoring
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Monitoring contains information about custom monitoring configurations for the shoot.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>provider&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Provider">
Provider
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Provider contains all provider-specific and provider-relevant information.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>purpose&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootPurpose">
ShootPurpose
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Purpose is the purpose class for this cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>region&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Region is a name of a region. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>secretBindingName&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SecretBindingName is the name of the a SecretBinding that has a reference to the provider secret.
The credentials inside the provider secret will be used to create the shoot in the respective account.
This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>seedName&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SeedName is the name of the seed cluster that runs the control plane of the Shoot.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>seedSelector&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSelector">
SeedSelector
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SeedSelector is an optional selector which must match a seed’s labels for the shoot to be scheduled on that seed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>resources&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.NamedResourceReference">
[]NamedResourceReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Resources holds a list of named resource references that can be referred to in extension configs by their names.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>tolerations&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Toleration">
[]Toleration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Tolerations contains the tolerations for taints on seed clusters.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>exposureClassName&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ExposureClassName is the optional name of an exposure class to apply a control plane endpoint exposure strategy.
This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>systemComponents&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SystemComponents">
SystemComponents
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SystemComponents contains the settings of system components in the control or data plane of the Shoot cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>controlPlane&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ControlPlane">
ControlPlane
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ControlPlane contains general settings for the control plane of the shoot.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>schedulerName&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SchedulerName is the name of the responsible scheduler which schedules the shoot.
If not specified, the default scheduler takes over.
This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>status&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootStatus">
ShootStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Most recently observed status of the Shoot cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ShootState">ShootState
&lt;/h3>
&lt;p>
&lt;p>ShootState contains a snapshot of the Shoot’s state required to migrate the Shoot’s control plane to a new Seed.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>apiVersion&lt;/code>&lt;/br>
string&lt;/td>
&lt;td>
&lt;code>
core.gardener.cloud/v1beta1
&lt;/code>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
string
&lt;/td>
&lt;td>&lt;code>ShootState&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Standard object metadata.&lt;/p>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>spec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootStateSpec">
ShootStateSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Specification of the ShootState.&lt;/p>
&lt;br/>
&lt;br/>
&lt;table>
&lt;tr>
&lt;td>
&lt;code>gardener&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.GardenerResourceData">
[]GardenerResourceData
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Gardener holds the data required to generate resources deployed by the gardenlet&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>extensions&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ExtensionResourceState">
[]ExtensionResourceState
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Extensions holds the state of custom resources reconciled by extension controllers in the seed&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>resources&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ResourceData">
[]ResourceData
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Resources holds the data of resources referred to by extension controller states&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.APIServerLogging">APIServerLogging
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.KubeAPIServerConfig">KubeAPIServerConfig&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>APIServerLogging contains configuration for the logs level and http access logs&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>verbosity&lt;/code>&lt;/br>
&lt;em>
int32
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Verbosity is the kube-apiserver log verbosity level
Defaults to 2.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>httpAccessVerbosity&lt;/code>&lt;/br>
&lt;em>
int32
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>HTTPAccessVerbosity is the kube-apiserver access logs level&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.APIServerRequests">APIServerRequests
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.KubeAPIServerConfig">KubeAPIServerConfig&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>APIServerRequests contains configuration for request-specific settings for the kube-apiserver.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>maxNonMutatingInflight&lt;/code>&lt;/br>
&lt;em>
int32
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>MaxNonMutatingInflight is the maximum number of non-mutating requests in flight at a given time. When the server
exceeds this, it rejects requests.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>maxMutatingInflight&lt;/code>&lt;/br>
&lt;em>
int32
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>MaxMutatingInflight is the maximum number of mutating requests in flight at a given time. When the server
exceeds this, it rejects requests.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.Addon">Addon
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.KubernetesDashboard">KubernetesDashboard&lt;/a>,
&lt;a href="#core.gardener.cloud/v1beta1.NginxIngress">NginxIngress&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>Addon allows enabling or disabling a specific addon and is used to derive from.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>enabled&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Enabled indicates whether the addon is enabled or not.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.Addons">Addons
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootSpec">ShootSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>Addons is a collection of configuration for specific addons which are managed by the Gardener.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>kubernetesDashboard&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.KubernetesDashboard">
KubernetesDashboard
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>KubernetesDashboard holds configuration settings for the kubernetes dashboard addon.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>nginxIngress&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.NginxIngress">
NginxIngress
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>NginxIngress holds configuration settings for the nginx-ingress addon.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.AdmissionPlugin">AdmissionPlugin
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.KubeAPIServerConfig">KubeAPIServerConfig&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>AdmissionPlugin contains information about a specific admission plugin and its corresponding configuration.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Name is the name of the plugin.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>config&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Config is the configuration of the plugin.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>disabled&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Disabled specifies whether this plugin should be disabled.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kubeconfigSecretName&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>KubeconfigSecretName specifies the name of a secret containing the kubeconfig for this admission plugin.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.Alerting">Alerting
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Monitoring">Monitoring&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>Alerting contains information about how alerting will be done (i.e. who will receive alerts and how).&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>emailReceivers&lt;/code>&lt;/br>
&lt;em>
[]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>MonitoringEmailReceivers is a list of recipients for alerts&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.AuditConfig">AuditConfig
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.KubeAPIServerConfig">KubeAPIServerConfig&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>AuditConfig contains settings for audit of the api server&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>auditPolicy&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.AuditPolicy">
AuditPolicy
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>AuditPolicy contains configuration settings for audit policy of the kube-apiserver.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.AuditPolicy">AuditPolicy
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.AuditConfig">AuditConfig&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>AuditPolicy contains audit policy for kube-apiserver&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>configMapRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectreference-v1-core">
Kubernetes core/v1.ObjectReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ConfigMapRef is a reference to a ConfigMap object in the same namespace,
which contains the audit policy for the kube-apiserver.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.AvailabilityZone">AvailabilityZone
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Region">Region&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>AvailabilityZone is an availability zone.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Name is an availability zone name.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>unavailableMachineTypes&lt;/code>&lt;/br>
&lt;em>
[]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>UnavailableMachineTypes is a list of machine type names that are not availability in this zone.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>unavailableVolumeTypes&lt;/code>&lt;/br>
&lt;em>
[]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>UnavailableVolumeTypes is a list of volume type names that are not availability in this zone.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.BackupBucketProvider">BackupBucketProvider
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.BackupBucketSpec">BackupBucketSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>BackupBucketProvider holds the details of cloud provider of the object store.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>type&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Type is the type of provider.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>region&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Region is the region of the bucket.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.BackupBucketSpec">BackupBucketSpec
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.BackupBucket">BackupBucket&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>BackupBucketSpec is the specification of a Backup Bucket.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>provider&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.BackupBucketProvider">
BackupBucketProvider
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Provider holds the details of cloud provider of the object store. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>providerConfig&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ProviderConfig is the configuration passed to BackupBucket resource.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>secretRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#secretreference-v1-core">
Kubernetes core/v1.SecretReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>SecretRef is a reference to a secret that contains the credentials to access object store.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>seedName&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SeedName holds the name of the seed allocated to BackupBucket for running controller.
This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.BackupBucketStatus">BackupBucketStatus
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.BackupBucket">BackupBucket&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>BackupBucketStatus holds the most recently observed status of the Backup Bucket.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>providerStatus&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ProviderStatus is the configuration passed to BackupBucket resource.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastOperation&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.LastOperation">
LastOperation
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastOperation holds information about the last operation on the BackupBucket.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastError&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.LastError">
LastError
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastError holds information about the last occurred error during an operation.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>observedGeneration&lt;/code>&lt;/br>
&lt;em>
int64
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ObservedGeneration is the most recent generation observed for this BackupBucket. It corresponds to the
BackupBucket’s generation, which is updated on mutation by the API Server.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>generatedSecretRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#secretreference-v1-core">
Kubernetes core/v1.SecretReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>GeneratedSecretRef is reference to the secret generated by backup bucket, which
will have object store specific credentials.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.BackupEntrySpec">BackupEntrySpec
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.BackupEntry">BackupEntry&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>BackupEntrySpec is the specification of a Backup Entry.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>bucketName&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>BucketName is the name of backup bucket for this Backup Entry.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>seedName&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SeedName holds the name of the seed to which this BackupEntry is scheduled&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.BackupEntryStatus">BackupEntryStatus
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.BackupEntry">BackupEntry&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>BackupEntryStatus holds the most recently observed status of the Backup Entry.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>lastOperation&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.LastOperation">
LastOperation
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastOperation holds information about the last operation on the BackupEntry.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastError&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.LastError">
LastError
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastError holds information about the last occurred error during an operation.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>observedGeneration&lt;/code>&lt;/br>
&lt;em>
int64
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ObservedGeneration is the most recent generation observed for this BackupEntry. It corresponds to the
BackupEntry’s generation, which is updated on mutation by the API Server.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>seedName&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SeedName is the name of the seed to which this BackupEntry is currently scheduled. This field is populated
at the beginning of a create/reconcile operation. It is used when moving the BackupEntry between seeds.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>migrationStartTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>MigrationStartTime is the time when a migration to a different seed was initiated.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.CARotation">CARotation
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootCredentialsRotation">ShootCredentialsRotation&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>CARotation contains information about the certificate authority credential rotation.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>phase&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.CredentialsRotationPhase">
CredentialsRotationPhase
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Phase describes the phase of the certificate authority credential rotation.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastCompletionTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastCompletionTime is the most recent time when the certificate authority credential rotation was successfully
completed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastInitiationTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastInitiationTime is the most recent time when the certificate authority credential rotation was initiated.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastInitiationFinishedTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastInitiationFinishedTime is the recent time when the certificate authority credential rotation initiation was
completed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastCompletionTriggeredTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastCompletionTriggeredTime is the recent time when the certificate authority credential rotation completion was
triggered.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.CRI">CRI
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.MachineImageVersion">MachineImageVersion&lt;/a>,
&lt;a href="#core.gardener.cloud/v1beta1.Worker">Worker&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>CRI contains information about the Container Runtimes.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.CRIName">
CRIName
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>The name of the CRI library. Supported values are &lt;code>docker&lt;/code> and &lt;code>containerd&lt;/code>.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>containerRuntimes&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ContainerRuntime">
[]ContainerRuntime
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ContainerRuntimes is the list of the required container runtimes supported for a worker pool.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.CRIName">CRIName
(&lt;code>string&lt;/code> alias)&lt;/p>&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.CRI">CRI&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>CRIName is a type alias for the CRI name string.&lt;/p>
&lt;/p>
&lt;h3 id="core.gardener.cloud/v1beta1.CloudProfileSpec">CloudProfileSpec
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.CloudProfile">CloudProfile&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>CloudProfileSpec is the specification of a CloudProfile.
It must contain exactly one of its defined keys.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>caBundle&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>CABundle is a certificate bundle which will be installed onto every host machine of shoot cluster targeting this profile.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kubernetes&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.KubernetesSettings">
KubernetesSettings
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Kubernetes contains constraints regarding allowed values of the ‘kubernetes’ block in the Shoot specification.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>machineImages&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.MachineImage">
[]MachineImage
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>MachineImages contains constraints regarding allowed values for machine images in the Shoot specification.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>machineTypes&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.MachineType">
[]MachineType
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>MachineTypes contains constraints regarding allowed values for machine types in the ‘workers’ block in the Shoot specification.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>providerConfig&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ProviderConfig contains provider-specific configuration for the profile.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>regions&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Region">
[]Region
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Regions contains constraints regarding allowed values for regions and zones.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>seedSelector&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSelector">
SeedSelector
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SeedSelector contains an optional list of labels on &lt;code>Seed&lt;/code> resources that marks those seeds whose shoots may use this provider profile.
An empty list means that all seeds of the same provider type are supported.
This is useful for environments that are of the same type (like openstack) but may have different “instances”/landscapes.
Optionally a list of possible providers can be added to enable cross-provider scheduling. By default, the provider
type of the seed must match the shoot’s provider.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>type&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Type is the name of the provider.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>volumeTypes&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.VolumeType">
[]VolumeType
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>VolumeTypes contains constraints regarding allowed values for volume types in the ‘workers’ block in the Shoot specification.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ClusterAutoscaler">ClusterAutoscaler
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Kubernetes">Kubernetes&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ClusterAutoscaler contains the configuration flags for the Kubernetes cluster autoscaler.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>scaleDownDelayAfterAdd&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#Duration">
Kubernetes meta/v1.Duration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ScaleDownDelayAfterAdd defines how long after scale up that scale down evaluation resumes (default: 1 hour).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>scaleDownDelayAfterDelete&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#Duration">
Kubernetes meta/v1.Duration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ScaleDownDelayAfterDelete how long after node deletion that scale down evaluation resumes, defaults to scanInterval (default: 0 secs).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>scaleDownDelayAfterFailure&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#Duration">
Kubernetes meta/v1.Duration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ScaleDownDelayAfterFailure how long after scale down failure that scale down evaluation resumes (default: 3 mins).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>scaleDownUnneededTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#Duration">
Kubernetes meta/v1.Duration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ScaleDownUnneededTime defines how long a node should be unneeded before it is eligible for scale down (default: 30 mins).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>scaleDownUtilizationThreshold&lt;/code>&lt;/br>
&lt;em>
float64
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ScaleDownUtilizationThreshold defines the threshold in fraction (0.0 - 1.0) under which a node is being removed (default: 0.5).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>scanInterval&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#Duration">
Kubernetes meta/v1.Duration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ScanInterval how often cluster is reevaluated for scale up or down (default: 10 secs).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>expander&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ExpanderMode">
ExpanderMode
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Expander defines the algorithm to use during scale up (default: least-waste).
See: &lt;a href="https://github.com/gardener/autoscaler/blob/machine-controller-manager-provider/cluster-autoscaler/FAQ.md#what-are-expanders">https://github.com/gardener/autoscaler/blob/machine-controller-manager-provider/cluster-autoscaler/FAQ.md#what-are-expanders&lt;/a>.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>maxNodeProvisionTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#Duration">
Kubernetes meta/v1.Duration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>MaxNodeProvisionTime defines how long CA waits for node to be provisioned (default: 20 mins).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>maxGracefulTerminationSeconds&lt;/code>&lt;/br>
&lt;em>
int32
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>MaxGracefulTerminationSeconds is the number of seconds CA waits for pod termination when trying to scale down a node (default: 600).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>ignoreTaints&lt;/code>&lt;/br>
&lt;em>
[]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>IgnoreTaints specifies a list of taint keys to ignore in node templates when considering to scale a node group.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.Condition">Condition
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ControllerInstallationStatus">ControllerInstallationStatus&lt;/a>,
&lt;a href="#core.gardener.cloud/v1beta1.SeedStatus">SeedStatus&lt;/a>,
&lt;a href="#core.gardener.cloud/v1beta1.ShootStatus">ShootStatus&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>Condition holds the information about the state of a resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>type&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ConditionType">
ConditionType
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Type of the condition.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>status&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ConditionStatus">
ConditionStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Status of the condition, one of True, False, Unknown.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastTransitionTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Last time the condition transitioned from one status to another.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastUpdateTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Last time the condition was updated.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>reason&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>The reason for the condition’s last transition.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>message&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>A human readable message indicating details about the transition.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>codes&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ErrorCode">
[]ErrorCode
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Well-defined error codes in case the condition reports a problem.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ConditionStatus">ConditionStatus
(&lt;code>string&lt;/code> alias)&lt;/p>&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Condition">Condition&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ConditionStatus is the status of a condition.&lt;/p>
&lt;/p>
&lt;h3 id="core.gardener.cloud/v1beta1.ConditionType">ConditionType
(&lt;code>string&lt;/code> alias)&lt;/p>&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Condition">Condition&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ConditionType is a string alias.&lt;/p>
&lt;/p>
&lt;h3 id="core.gardener.cloud/v1beta1.ContainerRuntime">ContainerRuntime
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.CRI">CRI&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ContainerRuntime contains information about worker’s available container runtime&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>type&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Type is the type of the Container Runtime.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>providerConfig&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ProviderConfig is the configuration passed to container runtime resource.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ControlPlane">ControlPlane
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootSpec">ShootSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ControlPlane holds information about the general settings for the control plane of a shoot.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>highAvailability&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.HighAvailability">
HighAvailability
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>HighAvailability holds the configuration settings for high availability of the
control plane of a shoot.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ControllerDeploymentPolicy">ControllerDeploymentPolicy
(&lt;code>string&lt;/code> alias)&lt;/p>&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ControllerRegistrationDeployment">ControllerRegistrationDeployment&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ControllerDeploymentPolicy is a string alias.&lt;/p>
&lt;/p>
&lt;h3 id="core.gardener.cloud/v1beta1.ControllerInstallationSpec">ControllerInstallationSpec
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ControllerInstallation">ControllerInstallation&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ControllerInstallationSpec is the specification of a ControllerInstallation.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>registrationRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectreference-v1-core">
Kubernetes core/v1.ObjectReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>RegistrationRef is used to reference a ControllerRegistration resource.
The name field of the RegistrationRef is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>seedRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectreference-v1-core">
Kubernetes core/v1.ObjectReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>SeedRef is used to reference a Seed resource. The name field of the SeedRef is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>deploymentRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectreference-v1-core">
Kubernetes core/v1.ObjectReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>DeploymentRef is used to reference a ControllerDeployment resource.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ControllerInstallationStatus">ControllerInstallationStatus
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ControllerInstallation">ControllerInstallation&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ControllerInstallationStatus is the status of a ControllerInstallation.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>conditions&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Condition">
[]Condition
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Conditions represents the latest available observations of a ControllerInstallations’s current state.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>providerStatus&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ProviderStatus contains type-specific status.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ControllerRegistrationDeployment">ControllerRegistrationDeployment
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ControllerRegistrationSpec">ControllerRegistrationSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ControllerRegistrationDeployment contains information for how this controller is deployed.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>policy&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ControllerDeploymentPolicy">
ControllerDeploymentPolicy
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Policy controls how the controller is deployed. It defaults to ‘OnDemand’.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>seedSelector&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#labelselector-v1-meta">
Kubernetes meta/v1.LabelSelector
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SeedSelector contains an optional label selector for seeds. Only if the labels match then this controller will be
considered for a deployment.
An empty list means that all seeds are selected.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>deploymentRefs&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.DeploymentRef">
[]DeploymentRef
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>DeploymentRefs holds references to &lt;code>ControllerDeployments&lt;/code>. Only one element is support now.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ControllerRegistrationSpec">ControllerRegistrationSpec
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ControllerRegistration">ControllerRegistration&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ControllerRegistrationSpec is the specification of a ControllerRegistration.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>resources&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ControllerResource">
[]ControllerResource
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Resources is a list of combinations of kinds (DNSProvider, Infrastructure, Generic, …) and their actual types
(aws-route53, gcp, auditlog, …).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>deployment&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ControllerRegistrationDeployment">
ControllerRegistrationDeployment
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Deployment contains information for how this controller is deployed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ControllerResource">ControllerResource
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ControllerRegistrationSpec">ControllerRegistrationSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ControllerResource is a combination of a kind (DNSProvider, Infrastructure, Generic, …) and the actual type for this
kind (aws-route53, gcp, auditlog, …).&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Kind is the resource kind, for example “OperatingSystemConfig”.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>type&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Type is the resource type, for example “coreos” or “ubuntu”.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>globallyEnabled&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>GloballyEnabled determines if this ControllerResource is required by all Shoot clusters.
This field is defaulted to false when kind is “Extension”.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>reconcileTimeout&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#Duration">
Kubernetes meta/v1.Duration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ReconcileTimeout defines how long Gardener should wait for the resource reconciliation.
This field is defaulted to 3m0s when kind is “Extension”.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>primary&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Primary determines if the controller backed by this ControllerRegistration is responsible for the extension
resource’s lifecycle. This field defaults to true. There must be exactly one primary controller for this kind/type
combination. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lifecycle&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ControllerResourceLifecycle">
ControllerResourceLifecycle
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Lifecycle defines a strategy that determines when different operations on a ControllerResource should be performed.
This field is defaulted in the following way when kind is “Extension”.
Reconcile: “AfterKubeAPIServer”
Delete: “BeforeKubeAPIServer”
Migrate: “BeforeKubeAPIServer”&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>workerlessSupported&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>WorkerlessSupported specifies whether this ControllerResource supports Workerless Shoot clusters.
This field is only relevant when kind is “Extension”.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ControllerResourceLifecycle">ControllerResourceLifecycle
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ControllerResource">ControllerResource&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ControllerResourceLifecycle defines the lifecycle of a controller resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>reconcile&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ControllerResourceLifecycleStrategy">
ControllerResourceLifecycleStrategy
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Reconcile defines the strategy during reconciliation.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>delete&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ControllerResourceLifecycleStrategy">
ControllerResourceLifecycleStrategy
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Delete defines the strategy during deletion.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>migrate&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ControllerResourceLifecycleStrategy">
ControllerResourceLifecycleStrategy
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Migrate defines the strategy during migration.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ControllerResourceLifecycleStrategy">ControllerResourceLifecycleStrategy
(&lt;code>string&lt;/code> alias)&lt;/p>&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ControllerResourceLifecycle">ControllerResourceLifecycle&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ControllerResourceLifecycleStrategy is a string alias.&lt;/p>
&lt;/p>
&lt;h3 id="core.gardener.cloud/v1beta1.CoreDNS">CoreDNS
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.SystemComponents">SystemComponents&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>CoreDNS contains the settings of the Core DNS components running in the data plane of the Shoot cluster.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>autoscaling&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.CoreDNSAutoscaling">
CoreDNSAutoscaling
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Autoscaling contains the settings related to autoscaling of the Core DNS components running in the data plane of the Shoot cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>rewriting&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.CoreDNSRewriting">
CoreDNSRewriting
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Rewriting contains the setting related to rewriting of requests, which are obviously incorrect due to the unnecessary application of the search path.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.CoreDNSAutoscaling">CoreDNSAutoscaling
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.CoreDNS">CoreDNS&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>CoreDNSAutoscaling contains the settings related to autoscaling of the Core DNS components running in the data plane of the Shoot cluster.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>mode&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.CoreDNSAutoscalingMode">
CoreDNSAutoscalingMode
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>The mode of the autoscaling to be used for the Core DNS components running in the data plane of the Shoot cluster.
Supported values are &lt;code>horizontal&lt;/code> and &lt;code>cluster-proportional&lt;/code>.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.CoreDNSAutoscalingMode">CoreDNSAutoscalingMode
(&lt;code>string&lt;/code> alias)&lt;/p>&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.CoreDNSAutoscaling">CoreDNSAutoscaling&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>CoreDNSAutoscalingMode is a type alias for the Core DNS autoscaling mode string.&lt;/p>
&lt;/p>
&lt;h3 id="core.gardener.cloud/v1beta1.CoreDNSRewriting">CoreDNSRewriting
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.CoreDNS">CoreDNS&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>CoreDNSRewriting contains the setting related to rewriting requests, which are obviously incorrect due to the unnecessary application of the search path.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>commonSuffixes&lt;/code>&lt;/br>
&lt;em>
[]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>CommonSuffixes are expected to be the suffix of a fully qualified domain name. Each suffix should contain at least one or two dots (‘.’) to prevent accidental clashes.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.CredentialsRotationPhase">CredentialsRotationPhase
(&lt;code>string&lt;/code> alias)&lt;/p>&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.CARotation">CARotation&lt;/a>,
&lt;a href="#core.gardener.cloud/v1beta1.ETCDEncryptionKeyRotation">ETCDEncryptionKeyRotation&lt;/a>,
&lt;a href="#core.gardener.cloud/v1beta1.ServiceAccountKeyRotation">ServiceAccountKeyRotation&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>CredentialsRotationPhase is a string alias.&lt;/p>
&lt;/p>
&lt;h3 id="core.gardener.cloud/v1beta1.DNS">DNS
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootSpec">ShootSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>DNS holds information about the provider, the hosted zone id and the domain.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>domain&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Domain is the external available domain of the Shoot cluster. This domain will be written into the
kubeconfig that is handed out to end-users. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>providers&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.DNSProvider">
[]DNSProvider
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Providers is a list of DNS providers that shall be enabled for this shoot cluster. Only relevant if
not a default domain is used.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.DNSIncludeExclude">DNSIncludeExclude
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.DNSProvider">DNSProvider&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>DNSIncludeExclude contains information about which domains shall be included/excluded.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>include&lt;/code>&lt;/br>
&lt;em>
[]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Include is a list of domains that shall be included.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>exclude&lt;/code>&lt;/br>
&lt;em>
[]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Exclude is a list of domains that shall be excluded.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.DNSProvider">DNSProvider
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.DNS">DNS&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>DNSProvider contains information about a DNS provider.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>domains&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.DNSIncludeExclude">
DNSIncludeExclude
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Domains contains information about which domains shall be included/excluded for this provider.
Deprecated: This field is deprecated and will be removed in Gardener release v1.87.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>primary&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Primary indicates that this DNSProvider is used for shoot related domains.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>secretName&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SecretName is a name of a secret containing credentials for the stated domain and the
provider. When not specified, the Gardener will use the cloud provider credentials referenced
by the Shoot and try to find respective credentials there (primary provider only). Specifying this field may override
this behavior, i.e. forcing the Gardener to only look into the given secret.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>type&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Type is the DNS provider type.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>zones&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.DNSIncludeExclude">
DNSIncludeExclude
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Zones contains information about which hosted zones shall be included/excluded for this provider.
Deprecated: This field is deprecated and will be removed in Gardener release v1.87.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.DataVolume">DataVolume
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Worker">Worker&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>DataVolume contains information about a data volume.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Name of the volume to make it referencable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>type&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Type is the type of the volume.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>size&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>VolumeSize is the size of the volume.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>encrypted&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Encrypted determines if the volume should be encrypted.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.DeploymentRef">DeploymentRef
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ControllerRegistrationDeployment">ControllerRegistrationDeployment&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>DeploymentRef contains information about &lt;code>ControllerDeployment&lt;/code> references.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Name is the name of the &lt;code>ControllerDeployment&lt;/code> that is being referred to.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ETCDEncryptionKeyRotation">ETCDEncryptionKeyRotation
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootCredentialsRotation">ShootCredentialsRotation&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ETCDEncryptionKeyRotation contains information about the ETCD encryption key credential rotation.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>phase&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.CredentialsRotationPhase">
CredentialsRotationPhase
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Phase describes the phase of the ETCD encryption key credential rotation.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastCompletionTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastCompletionTime is the most recent time when the ETCD encryption key credential rotation was successfully
completed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastInitiationTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastInitiationTime is the most recent time when the ETCD encryption key credential rotation was initiated.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastInitiationFinishedTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastInitiationFinishedTime is the recent time when the certificate authority credential rotation initiation was
completed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastCompletionTriggeredTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastCompletionTriggeredTime is the recent time when the certificate authority credential rotation completion was
triggered.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ErrorCode">ErrorCode
(&lt;code>string&lt;/code> alias)&lt;/p>&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Condition">Condition&lt;/a>,
&lt;a href="#core.gardener.cloud/v1beta1.LastError">LastError&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ErrorCode is a string alias.&lt;/p>
&lt;/p>
&lt;h3 id="core.gardener.cloud/v1beta1.ExpanderMode">ExpanderMode
(&lt;code>string&lt;/code> alias)&lt;/p>&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ClusterAutoscaler">ClusterAutoscaler&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ExpanderMode is type used for Expander values&lt;/p>
&lt;/p>
&lt;h3 id="core.gardener.cloud/v1beta1.ExpirableVersion">ExpirableVersion
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.KubernetesSettings">KubernetesSettings&lt;/a>,
&lt;a href="#core.gardener.cloud/v1beta1.MachineImageVersion">MachineImageVersion&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ExpirableVersion contains a version and an expiration date.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>version&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Version is the version identifier.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>expirationDate&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ExpirationDate defines the time at which this version expires.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>classification&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.VersionClassification">
VersionClassification
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Classification defines the state of a version (preview, supported, deprecated)&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ExposureClassScheduling">ExposureClassScheduling
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ExposureClass">ExposureClass&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ExposureClassScheduling holds information to select applicable Seed’s for ExposureClass usage.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>seedSelector&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSelector">
SeedSelector
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SeedSelector is an optional label selector for Seed’s which are suitable to use the ExposureClass.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>tolerations&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Toleration">
[]Toleration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Tolerations contains the tolerations for taints on Seed clusters.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.Extension">Extension
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootSpec">ShootSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>Extension contains type and provider information for Shoot extensions.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>type&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Type is the type of the extension resource.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>providerConfig&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ProviderConfig is the configuration passed to extension resource.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>disabled&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Disabled allows to disable extensions that were marked as ‘globally enabled’ by Gardener administrators.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ExtensionResourceState">ExtensionResourceState
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootStateSpec">ShootStateSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ExtensionResourceState contains the kind of the extension custom resource and its last observed state in the Shoot’s
namespace on the Seed cluster.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Kind (type) of the extension custom resource&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Name of the extension custom resource&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>purpose&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Purpose of the extension custom resource&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>state&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>State of the extension resource&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>resources&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.NamedResourceReference">
[]NamedResourceReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Resources holds a list of named resource references that can be referred to in the state by their names.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.FailureTolerance">FailureTolerance
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.HighAvailability">HighAvailability&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>FailureTolerance describes information about failure tolerance level of a highly available resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>type&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.FailureToleranceType">
FailureToleranceType
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Type specifies the type of failure that the highly available resource can tolerate&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.FailureToleranceType">FailureToleranceType
(&lt;code>string&lt;/code> alias)&lt;/p>&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.FailureTolerance">FailureTolerance&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>FailureToleranceType specifies the type of failure that a highly available
shoot control plane that can tolerate.&lt;/p>
&lt;/p>
&lt;h3 id="core.gardener.cloud/v1beta1.Gardener">Gardener
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedStatus">SeedStatus&lt;/a>,
&lt;a href="#core.gardener.cloud/v1beta1.ShootStatus">ShootStatus&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>Gardener holds the information about the Gardener version that operated a resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>id&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>ID is the Docker container id of the Gardener which last acted on a resource.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Name is the hostname (pod name) of the Gardener which last acted on a resource.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>version&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Version is the version of the Gardener which last acted on a resource.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.GardenerResourceData">GardenerResourceData
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootStateSpec">ShootStateSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>GardenerResourceData holds the data which is used to generate resources, deployed in the Shoot’s control plane.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Name of the object required to generate resources&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>type&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Type of the object&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>data&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Data contains the payload required to generate resources&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>labels&lt;/code>&lt;/br>
&lt;em>
map[string]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Labels are labels of the object&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.Hibernation">Hibernation
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootSpec">ShootSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>Hibernation contains information whether the Shoot is suspended or not.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>enabled&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Enabled specifies whether the Shoot needs to be hibernated or not. If it is true, the Shoot’s desired state is to be hibernated.
If it is false or nil, the Shoot’s desired state is to be awakened.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>schedules&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.HibernationSchedule">
[]HibernationSchedule
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Schedules determine the hibernation schedules.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.HibernationSchedule">HibernationSchedule
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Hibernation">Hibernation&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>HibernationSchedule determines the hibernation schedule of a Shoot.
A Shoot will be regularly hibernated at each start time and will be woken up at each end time.
Start or End can be omitted, though at least one of each has to be specified.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>start&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Start is a Cron spec at which time a Shoot will be hibernated.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>end&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>End is a Cron spec at which time a Shoot will be woken up.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>location&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Location is the time location in which both start and shall be evaluated.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.HighAvailability">HighAvailability
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ControlPlane">ControlPlane&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>HighAvailability specifies the configuration settings for high availability for a resource. Typical
usages could be to configure HA for shoot control plane or for seed system components.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>failureTolerance&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.FailureTolerance">
FailureTolerance
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>FailureTolerance holds information about failure tolerance level of a highly available resource.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.HorizontalPodAutoscalerConfig">HorizontalPodAutoscalerConfig
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.KubeControllerManagerConfig">KubeControllerManagerConfig&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>HorizontalPodAutoscalerConfig contains horizontal pod autoscaler configuration settings for the kube-controller-manager.
Note: Descriptions were taken from the Kubernetes documentation.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>cpuInitializationPeriod&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#Duration">
Kubernetes meta/v1.Duration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>The period after which a ready pod transition is considered to be the first.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>downscaleStabilization&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#Duration">
Kubernetes meta/v1.Duration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>The configurable window at which the controller will choose the highest recommendation for autoscaling.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>initialReadinessDelay&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#Duration">
Kubernetes meta/v1.Duration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>The configurable period at which the horizontal pod autoscaler considers a Pod “not yet ready” given that it’s unready and it has transitioned to unready during that time.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>syncPeriod&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#Duration">
Kubernetes meta/v1.Duration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>The period for syncing the number of pods in horizontal pod autoscaler.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>tolerance&lt;/code>&lt;/br>
&lt;em>
float64
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>The minimum change (from 1.0) in the desired-to-actual metrics ratio for the horizontal pod autoscaler to consider scaling.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.IPFamily">IPFamily
(&lt;code>string&lt;/code> alias)&lt;/p>&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Networking">Networking&lt;/a>,
&lt;a href="#core.gardener.cloud/v1beta1.SeedNetworks">SeedNetworks&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>IPFamily is a type for specifying an IP protocol version to use in Gardener clusters.&lt;/p>
&lt;/p>
&lt;h3 id="core.gardener.cloud/v1beta1.Ingress">Ingress
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSpec">SeedSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>Ingress configures the Ingress specific settings of the cluster&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>domain&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Domain specifies the IngressDomain of the cluster pointing to the ingress controller endpoint. It will be used
to construct ingress URLs for system applications running in Shoot/Garden clusters. Once set this field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>controller&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.IngressController">
IngressController
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Controller configures a Gardener managed Ingress Controller listening on the ingressDomain&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.IngressController">IngressController
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Ingress">Ingress&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>IngressController enables a Gardener managed Ingress Controller listening on the ingressDomain&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Kind defines which kind of IngressController to use. At the moment only &lt;code>nginx&lt;/code> is supported&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>providerConfig&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ProviderConfig specifies infrastructure specific configuration for the ingressController&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.KubeAPIServerConfig">KubeAPIServerConfig
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Kubernetes">Kubernetes&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>KubeAPIServerConfig contains configuration settings for the kube-apiserver.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>KubernetesConfig&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.KubernetesConfig">
KubernetesConfig
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>KubernetesConfig&lt;/code> are embedded into this type.)
&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>admissionPlugins&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.AdmissionPlugin">
[]AdmissionPlugin
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>AdmissionPlugins contains the list of user-defined admission plugins (additional to those managed by Gardener), and, if desired, the corresponding
configuration.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>apiAudiences&lt;/code>&lt;/br>
&lt;em>
[]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>APIAudiences are the identifiers of the API. The service account token authenticator will
validate that tokens used against the API are bound to at least one of these audiences.
Defaults to [“kubernetes”].&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>auditConfig&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.AuditConfig">
AuditConfig
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>AuditConfig contains configuration settings for the audit of the kube-apiserver.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>oidcConfig&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.OIDCConfig">
OIDCConfig
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>OIDCConfig contains configuration settings for the OIDC provider.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>runtimeConfig&lt;/code>&lt;/br>
&lt;em>
map[string]bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>RuntimeConfig contains information about enabled or disabled APIs.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>serviceAccountConfig&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ServiceAccountConfig">
ServiceAccountConfig
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ServiceAccountConfig contains configuration settings for the service account handling
of the kube-apiserver.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>watchCacheSizes&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.WatchCacheSizes">
WatchCacheSizes
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>WatchCacheSizes contains configuration of the API server’s watch cache sizes.
Configuring these flags might be useful for large-scale Shoot clusters with a lot of parallel update requests
and a lot of watching controllers (e.g. large ManagedSeed clusters). When the API server’s watch cache’s
capacity is too small to cope with the amount of update requests and watchers for a particular resource, it
might happen that controller watches are permanently stopped with &lt;code>too old resource version&lt;/code> errors.
Starting from kubernetes v1.19, the API server’s watch cache size is adapted dynamically and setting the watch
cache size flags will have no effect, except when setting it to 0 (which disables the watch cache).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>requests&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.APIServerRequests">
APIServerRequests
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Requests contains configuration for request-specific settings for the kube-apiserver.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>enableAnonymousAuthentication&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>EnableAnonymousAuthentication defines whether anonymous requests to the secure port
of the API server should be allowed (flag &lt;code>--anonymous-auth&lt;/code>).
See: &lt;a href="https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/">https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/&lt;/a>&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>eventTTL&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#Duration">
Kubernetes meta/v1.Duration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>EventTTL controls the amount of time to retain events.
Defaults to 1h.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>logging&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.APIServerLogging">
APIServerLogging
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Logging contains configuration for the log level and HTTP access logs.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>defaultNotReadyTolerationSeconds&lt;/code>&lt;/br>
&lt;em>
int64
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>DefaultNotReadyTolerationSeconds indicates the tolerationSeconds of the toleration for notReady:NoExecute
that is added by default to every pod that does not already have such a toleration (flag &lt;code>--default-not-ready-toleration-seconds&lt;/code>).
The field has effect only when the &lt;code>DefaultTolerationSeconds&lt;/code> admission plugin is enabled.
Defaults to 300.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>defaultUnreachableTolerationSeconds&lt;/code>&lt;/br>
&lt;em>
int64
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>DefaultUnreachableTolerationSeconds indicates the tolerationSeconds of the toleration for unreachable:NoExecute
that is added by default to every pod that does not already have such a toleration (flag &lt;code>--default-unreachable-toleration-seconds&lt;/code>).
The field has effect only when the &lt;code>DefaultTolerationSeconds&lt;/code> admission plugin is enabled.
Defaults to 300.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.KubeControllerManagerConfig">KubeControllerManagerConfig
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Kubernetes">Kubernetes&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>KubeControllerManagerConfig contains configuration settings for the kube-controller-manager.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>KubernetesConfig&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.KubernetesConfig">
KubernetesConfig
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>KubernetesConfig&lt;/code> are embedded into this type.)
&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>horizontalPodAutoscaler&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.HorizontalPodAutoscalerConfig">
HorizontalPodAutoscalerConfig
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>HorizontalPodAutoscalerConfig contains horizontal pod autoscaler configuration settings for the kube-controller-manager.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>nodeCIDRMaskSize&lt;/code>&lt;/br>
&lt;em>
int32
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>NodeCIDRMaskSize defines the mask size for node cidr in cluster (default is 24). This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>podEvictionTimeout&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#Duration">
Kubernetes meta/v1.Duration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>PodEvictionTimeout defines the grace period for deleting pods on failed nodes. Defaults to 2m.&lt;/p>
&lt;p>Deprecated: The corresponding kube-controller-manager flag &lt;code>--pod-eviction-timeout&lt;/code> is deprecated
in favor of the kube-apiserver flags &lt;code>--default-not-ready-toleration-seconds&lt;/code> and &lt;code>--default-unreachable-toleration-seconds&lt;/code>.
The &lt;code>--pod-eviction-timeout&lt;/code> flag does not have effect when the taint besed eviction is enabled. The taint
based eviction is beta (enabled by default) since Kubernetes 1.13 and GA since Kubernetes 1.18. Hence,
instead of setting this field, set the &lt;code>spec.kubernetes.kubeAPIServer.defaultNotReadyTolerationSeconds&lt;/code> and
&lt;code>spec.kubernetes.kubeAPIServer.defaultUnreachableTolerationSeconds&lt;/code>.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>nodeMonitorGracePeriod&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#Duration">
Kubernetes meta/v1.Duration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>NodeMonitorGracePeriod defines the grace period before an unresponsive node is marked unhealthy.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.KubeProxyConfig">KubeProxyConfig
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Kubernetes">Kubernetes&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>KubeProxyConfig contains configuration settings for the kube-proxy.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>KubernetesConfig&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.KubernetesConfig">
KubernetesConfig
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>KubernetesConfig&lt;/code> are embedded into this type.)
&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>mode&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ProxyMode">
ProxyMode
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Mode specifies which proxy mode to use.
defaults to IPTables.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>enabled&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Enabled indicates whether kube-proxy should be deployed or not.
Depending on the networking extensions switching kube-proxy off might be rejected. Consulting the respective documentation of the used networking extension is recommended before using this field.
defaults to true if not specified.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.KubeSchedulerConfig">KubeSchedulerConfig
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Kubernetes">Kubernetes&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>KubeSchedulerConfig contains configuration settings for the kube-scheduler.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>KubernetesConfig&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.KubernetesConfig">
KubernetesConfig
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>KubernetesConfig&lt;/code> are embedded into this type.)
&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kubeMaxPDVols&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>KubeMaxPDVols allows to configure the &lt;code>KUBE_MAX_PD_VOLS&lt;/code> environment variable for the kube-scheduler.
Please find more information here: &lt;a href="https://kubernetes.io/docs/concepts/storage/storage-limits/#custom-limits">https://kubernetes.io/docs/concepts/storage/storage-limits/#custom-limits&lt;/a>
Note that using this field is considered alpha-/experimental-level and is on your own risk. You should be aware
of all the side-effects and consequences when changing it.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>profile&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SchedulingProfile">
SchedulingProfile
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Profile configures the scheduling profile for the cluster.
If not specified, the used profile is “balanced” (provides the default kube-scheduler behavior).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.KubeletConfig">KubeletConfig
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Kubernetes">Kubernetes&lt;/a>,
&lt;a href="#core.gardener.cloud/v1beta1.WorkerKubernetes">WorkerKubernetes&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>KubeletConfig contains configuration settings for the kubelet.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>KubernetesConfig&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.KubernetesConfig">
KubernetesConfig
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>KubernetesConfig&lt;/code> are embedded into this type.)
&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>cpuCFSQuota&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>CPUCFSQuota allows you to disable/enable CPU throttling for Pods.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>cpuManagerPolicy&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>CPUManagerPolicy allows to set alternative CPU management policies (default: none).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>evictionHard&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.KubeletConfigEviction">
KubeletConfigEviction
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>EvictionHard describes a set of eviction thresholds (e.g. memory.available&amp;lt;1Gi) that if met would trigger a Pod eviction.
Default:
memory.available: “100Mi/1Gi/5%”
nodefs.available: “5%”
nodefs.inodesFree: “5%”
imagefs.available: “5%”
imagefs.inodesFree: “5%”&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>evictionMaxPodGracePeriod&lt;/code>&lt;/br>
&lt;em>
int32
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>EvictionMaxPodGracePeriod describes the maximum allowed grace period (in seconds) to use when terminating pods in response to a soft eviction threshold being met.
Default: 90&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>evictionMinimumReclaim&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.KubeletConfigEvictionMinimumReclaim">
KubeletConfigEvictionMinimumReclaim
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>EvictionMinimumReclaim configures the amount of resources below the configured eviction threshold that the kubelet attempts to reclaim whenever the kubelet observes resource pressure.
Default: 0 for each resource&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>evictionPressureTransitionPeriod&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#Duration">
Kubernetes meta/v1.Duration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>EvictionPressureTransitionPeriod is the duration for which the kubelet has to wait before transitioning out of an eviction pressure condition.
Default: 4m0s&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>evictionSoft&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.KubeletConfigEviction">
KubeletConfigEviction
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>EvictionSoft describes a set of eviction thresholds (e.g. memory.available&amp;lt;1.5Gi) that if met over a corresponding grace period would trigger a Pod eviction.
Default:
memory.available: “200Mi/1.5Gi/10%”
nodefs.available: “10%”
nodefs.inodesFree: “10%”
imagefs.available: “10%”
imagefs.inodesFree: “10%”&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>evictionSoftGracePeriod&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.KubeletConfigEvictionSoftGracePeriod">
KubeletConfigEvictionSoftGracePeriod
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>EvictionSoftGracePeriod describes a set of eviction grace periods (e.g. memory.available=1m30s) that correspond to how long a soft eviction threshold must hold before triggering a Pod eviction.
Default:
memory.available: 1m30s
nodefs.available: 1m30s
nodefs.inodesFree: 1m30s
imagefs.available: 1m30s
imagefs.inodesFree: 1m30s&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>maxPods&lt;/code>&lt;/br>
&lt;em>
int32
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>MaxPods is the maximum number of Pods that are allowed by the Kubelet.
Default: 110&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>podPidsLimit&lt;/code>&lt;/br>
&lt;em>
int64
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>PodPIDsLimit is the maximum number of process IDs per pod allowed by the kubelet.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>imagePullProgressDeadline&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#Duration">
Kubernetes meta/v1.Duration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ImagePullProgressDeadline describes the time limit under which if no pulling progress is made, the image pulling will be cancelled.
Default: 1m&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>failSwapOn&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>FailSwapOn makes the Kubelet fail to start if swap is enabled on the node. (default true).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kubeReserved&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.KubeletConfigReserved">
KubeletConfigReserved
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>KubeReserved is the configuration for resources reserved for kubernetes node components (mainly kubelet and container runtime).
When updating these values, be aware that cgroup resizes may not succeed on active worker nodes. Look for the NodeAllocatableEnforced event to determine if the configuration was applied.
Default: cpu=80m,memory=1Gi,pid=20k&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>systemReserved&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.KubeletConfigReserved">
KubeletConfigReserved
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SystemReserved is the configuration for resources reserved for system processes not managed by kubernetes (e.g. journald).
When updating these values, be aware that cgroup resizes may not succeed on active worker nodes. Look for the NodeAllocatableEnforced event to determine if the configuration was applied.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>imageGCHighThresholdPercent&lt;/code>&lt;/br>
&lt;em>
int32
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ImageGCHighThresholdPercent describes the percent of the disk usage which triggers image garbage collection.
Default: 50&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>imageGCLowThresholdPercent&lt;/code>&lt;/br>
&lt;em>
int32
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ImageGCLowThresholdPercent describes the percent of the disk to which garbage collection attempts to free.
Default: 40&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>serializeImagePulls&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SerializeImagePulls describes whether the images are pulled one at a time.
Default: true&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>registryPullQPS&lt;/code>&lt;/br>
&lt;em>
int32
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>RegistryPullQPS is the limit of registry pulls per second. The value must not be a negative number.
Setting it to 0 means no limit.
Default: 5&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>registryBurst&lt;/code>&lt;/br>
&lt;em>
int32
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>RegistryBurst is the maximum size of bursty pulls, temporarily allows pulls to burst to this number,
while still not exceeding registryPullQPS. The value must not be a negative number.
Only used if registryPullQPS is greater than 0.
Default: 10&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>seccompDefault&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SeccompDefault enables the use of &lt;code>RuntimeDefault&lt;/code> as the default seccomp profile for all workloads.
This requires the corresponding SeccompDefault feature gate to be enabled as well.
This field is only available for Kubernetes v1.25 or later.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>containerLogMaxSize&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/api/resource#Quantity">
k8s.io/apimachinery/pkg/api/resource.Quantity
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>A quantity defines the maximum size of the container log file before it is rotated. For example: “5Mi” or “256Ki”.
Default: 100Mi&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>containerLogMaxFiles&lt;/code>&lt;/br>
&lt;em>
int32
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Maximum number of container log files that can be present for a container.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>protectKernelDefaults&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ProtectKernelDefaults ensures that the kernel tunables are equal to the kubelet defaults.
Defaults to true for Kubernetes v1.26 or later.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>streamingConnectionIdleTimeout&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#Duration">
Kubernetes meta/v1.Duration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>StreamingConnectionIdleTimeout is the maximum time a streaming connection can be idle before the connection is automatically closed.
This field cannot be set lower than “30s” or greater than “4h”.
Default:
“4h” for Kubernetes &amp;lt; v1.26.
“5m” for Kubernetes &amp;gt;= v1.26.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>memorySwap&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.MemorySwapConfiguration">
MemorySwapConfiguration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>MemorySwap configures swap memory available to container workloads.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.KubeletConfigEviction">KubeletConfigEviction
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.KubeletConfig">KubeletConfig&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>KubeletConfigEviction contains kubelet eviction thresholds supporting either a resource.Quantity or a percentage based value.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>memoryAvailable&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>MemoryAvailable is the threshold for the free memory on the host server.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>imageFSAvailable&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ImageFSAvailable is the threshold for the free disk space in the imagefs filesystem (docker images and container writable layers).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>imageFSInodesFree&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ImageFSInodesFree is the threshold for the available inodes in the imagefs filesystem.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>nodeFSAvailable&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>NodeFSAvailable is the threshold for the free disk space in the nodefs filesystem (docker volumes, logs, etc).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>nodeFSInodesFree&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>NodeFSInodesFree is the threshold for the available inodes in the nodefs filesystem.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.KubeletConfigEvictionMinimumReclaim">KubeletConfigEvictionMinimumReclaim
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.KubeletConfig">KubeletConfig&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>KubeletConfigEvictionMinimumReclaim contains configuration for the kubelet eviction minimum reclaim.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>memoryAvailable&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/api/resource#Quantity">
k8s.io/apimachinery/pkg/api/resource.Quantity
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>MemoryAvailable is the threshold for the memory reclaim on the host server.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>imageFSAvailable&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/api/resource#Quantity">
k8s.io/apimachinery/pkg/api/resource.Quantity
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ImageFSAvailable is the threshold for the disk space reclaim in the imagefs filesystem (docker images and container writable layers).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>imageFSInodesFree&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/api/resource#Quantity">
k8s.io/apimachinery/pkg/api/resource.Quantity
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ImageFSInodesFree is the threshold for the inodes reclaim in the imagefs filesystem.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>nodeFSAvailable&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/api/resource#Quantity">
k8s.io/apimachinery/pkg/api/resource.Quantity
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>NodeFSAvailable is the threshold for the disk space reclaim in the nodefs filesystem (docker volumes, logs, etc).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>nodeFSInodesFree&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/api/resource#Quantity">
k8s.io/apimachinery/pkg/api/resource.Quantity
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>NodeFSInodesFree is the threshold for the inodes reclaim in the nodefs filesystem.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.KubeletConfigEvictionSoftGracePeriod">KubeletConfigEvictionSoftGracePeriod
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.KubeletConfig">KubeletConfig&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>KubeletConfigEvictionSoftGracePeriod contains grace periods for kubelet eviction thresholds.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>memoryAvailable&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#Duration">
Kubernetes meta/v1.Duration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>MemoryAvailable is the grace period for the MemoryAvailable eviction threshold.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>imageFSAvailable&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#Duration">
Kubernetes meta/v1.Duration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ImageFSAvailable is the grace period for the ImageFSAvailable eviction threshold.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>imageFSInodesFree&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#Duration">
Kubernetes meta/v1.Duration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ImageFSInodesFree is the grace period for the ImageFSInodesFree eviction threshold.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>nodeFSAvailable&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#Duration">
Kubernetes meta/v1.Duration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>NodeFSAvailable is the grace period for the NodeFSAvailable eviction threshold.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>nodeFSInodesFree&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#Duration">
Kubernetes meta/v1.Duration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>NodeFSInodesFree is the grace period for the NodeFSInodesFree eviction threshold.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.KubeletConfigReserved">KubeletConfigReserved
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.KubeletConfig">KubeletConfig&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>KubeletConfigReserved contains reserved resources for daemons&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>cpu&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/api/resource#Quantity">
k8s.io/apimachinery/pkg/api/resource.Quantity
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>CPU is the reserved cpu.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>memory&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/api/resource#Quantity">
k8s.io/apimachinery/pkg/api/resource.Quantity
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Memory is the reserved memory.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>ephemeralStorage&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/api/resource#Quantity">
k8s.io/apimachinery/pkg/api/resource.Quantity
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>EphemeralStorage is the reserved ephemeral-storage.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>pid&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/api/resource#Quantity">
k8s.io/apimachinery/pkg/api/resource.Quantity
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>PID is the reserved process-ids.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.Kubernetes">Kubernetes
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootSpec">ShootSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>Kubernetes contains the version and configuration variables for the Shoot control plane.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>allowPrivilegedContainers&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>AllowPrivilegedContainers indicates whether privileged containers are allowed in the Shoot.
Defaults to true for Kubernetes versions below v1.25. Unusable for Kubernetes versions v1.25 and higher.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>clusterAutoscaler&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ClusterAutoscaler">
ClusterAutoscaler
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ClusterAutoscaler contains the configuration flags for the Kubernetes cluster autoscaler.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kubeAPIServer&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.KubeAPIServerConfig">
KubeAPIServerConfig
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>KubeAPIServer contains configuration settings for the kube-apiserver.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kubeControllerManager&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.KubeControllerManagerConfig">
KubeControllerManagerConfig
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>KubeControllerManager contains configuration settings for the kube-controller-manager.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kubeScheduler&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.KubeSchedulerConfig">
KubeSchedulerConfig
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>KubeScheduler contains configuration settings for the kube-scheduler.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kubeProxy&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.KubeProxyConfig">
KubeProxyConfig
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>KubeProxy contains configuration settings for the kube-proxy.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kubelet&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.KubeletConfig">
KubeletConfig
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Kubelet contains configuration settings for the kubelet.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>version&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Version is the semantic Kubernetes version to use for the Shoot cluster.
Defaults to the highest supported minor and patch version given in the referenced cloud profile.
The version can be omitted completely or partially specified, e.g. &lt;code>&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;&lt;/code>.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>verticalPodAutoscaler&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.VerticalPodAutoscaler">
VerticalPodAutoscaler
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>VerticalPodAutoscaler contains the configuration flags for the Kubernetes vertical pod autoscaler.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>enableStaticTokenKubeconfig&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>EnableStaticTokenKubeconfig indicates whether static token kubeconfig secret will be created for the Shoot cluster.
Defaults to true for Shoots with Kubernetes versions &amp;lt; 1.26. Defaults to false for Shoots with Kubernetes versions &amp;gt;= 1.26.
Starting Kubernetes 1.27 the field will be locked to false.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.KubernetesConfig">KubernetesConfig
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.KubeAPIServerConfig">KubeAPIServerConfig&lt;/a>,
&lt;a href="#core.gardener.cloud/v1beta1.KubeControllerManagerConfig">KubeControllerManagerConfig&lt;/a>,
&lt;a href="#core.gardener.cloud/v1beta1.KubeProxyConfig">KubeProxyConfig&lt;/a>,
&lt;a href="#core.gardener.cloud/v1beta1.KubeSchedulerConfig">KubeSchedulerConfig&lt;/a>,
&lt;a href="#core.gardener.cloud/v1beta1.KubeletConfig">KubeletConfig&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>KubernetesConfig contains common configuration fields for the control plane components.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>featureGates&lt;/code>&lt;/br>
&lt;em>
map[string]bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>FeatureGates contains information about enabled feature gates.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.KubernetesDashboard">KubernetesDashboard
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Addons">Addons&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>KubernetesDashboard describes configuration values for the kubernetes-dashboard addon.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>Addon&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Addon">
Addon
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>Addon&lt;/code> are embedded into this type.)
&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>authenticationMode&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>AuthenticationMode defines the authentication mode for the kubernetes-dashboard.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.KubernetesSettings">KubernetesSettings
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.CloudProfileSpec">CloudProfileSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>KubernetesSettings contains constraints regarding allowed values of the ‘kubernetes’ block in the Shoot specification.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>versions&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ExpirableVersion">
[]ExpirableVersion
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Versions is the list of allowed Kubernetes versions with optional expiration dates for Shoot clusters.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.LastError">LastError
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.BackupBucketStatus">BackupBucketStatus&lt;/a>,
&lt;a href="#core.gardener.cloud/v1beta1.BackupEntryStatus">BackupEntryStatus&lt;/a>,
&lt;a href="#core.gardener.cloud/v1beta1.ShootStatus">ShootStatus&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>LastError indicates the last occurred error for an operation on a resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>description&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>A human readable message indicating details about the last error.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>taskID&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ID of the task which caused this last error&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>codes&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ErrorCode">
[]ErrorCode
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Well-defined error codes of the last error(s).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastUpdateTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Last time the error was reported&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.LastMaintenance">LastMaintenance
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootStatus">ShootStatus&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>LastMaintenance holds information about a maintenance operation on the Shoot.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>description&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>A human-readable message containing details about the operations performed in the last maintenance.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>triggeredTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>TriggeredTime is the time when maintenance was triggered.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>state&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.LastOperationState">
LastOperationState
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Status of the last maintenance operation, one of Processing, Succeeded, Error.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>failureReason&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>FailureReason holds the information about the last maintenance operation failure reason.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.LastOperation">LastOperation
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.BackupBucketStatus">BackupBucketStatus&lt;/a>,
&lt;a href="#core.gardener.cloud/v1beta1.BackupEntryStatus">BackupEntryStatus&lt;/a>,
&lt;a href="#core.gardener.cloud/v1beta1.SeedStatus">SeedStatus&lt;/a>,
&lt;a href="#core.gardener.cloud/v1beta1.ShootStatus">ShootStatus&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>LastOperation indicates the type and the state of the last operation, along with a description
message and a progress indicator.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>description&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>A human readable message indicating details about the last operation.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastUpdateTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Last time the operation state transitioned from one to another.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>progress&lt;/code>&lt;/br>
&lt;em>
int32
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>The progress in percentage (0-100) of the last operation.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>state&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.LastOperationState">
LastOperationState
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Status of the last operation, one of Aborted, Processing, Succeeded, Error, Failed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>type&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.LastOperationType">
LastOperationType
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Type of the last operation, one of Create, Reconcile, Delete, Migrate, Restore.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.LastOperationState">LastOperationState
(&lt;code>string&lt;/code> alias)&lt;/p>&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.LastMaintenance">LastMaintenance&lt;/a>,
&lt;a href="#core.gardener.cloud/v1beta1.LastOperation">LastOperation&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>LastOperationState is a string alias.&lt;/p>
&lt;/p>
&lt;h3 id="core.gardener.cloud/v1beta1.LastOperationType">LastOperationType
(&lt;code>string&lt;/code> alias)&lt;/p>&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.LastOperation">LastOperation&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>LastOperationType is a string alias.&lt;/p>
&lt;/p>
&lt;h3 id="core.gardener.cloud/v1beta1.Machine">Machine
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Worker">Worker&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>Machine contains information about the machine type and image.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>type&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Type is the machine type of the worker group.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>image&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootMachineImage">
ShootMachineImage
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Image holds information about the machine image to use for all nodes of this pool. It will default to the
latest version of the first image stated in the referenced CloudProfile if no value has been provided.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>architecture&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Architecture is CPU architecture of machines in this worker pool.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.MachineControllerManagerSettings">MachineControllerManagerSettings
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Worker">Worker&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>MachineControllerManagerSettings contains configurations for different worker-pools. Eg. MachineDrainTimeout, MachineHealthTimeout.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>machineDrainTimeout&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#Duration">
Kubernetes meta/v1.Duration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>MachineDrainTimeout is the period after which machine is forcefully deleted.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>machineHealthTimeout&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#Duration">
Kubernetes meta/v1.Duration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>MachineHealthTimeout is the period after which machine is declared failed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>machineCreationTimeout&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#Duration">
Kubernetes meta/v1.Duration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>MachineCreationTimeout is the period after which creation of the machine is declared failed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>maxEvictRetries&lt;/code>&lt;/br>
&lt;em>
int32
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>MaxEvictRetries are the number of eviction retries on a pod after which drain is declared failed, and forceful deletion is triggered.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>nodeConditions&lt;/code>&lt;/br>
&lt;em>
[]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>NodeConditions are the set of conditions if set to true for the period of MachineHealthTimeout, machine will be declared failed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.MachineImage">MachineImage
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.CloudProfileSpec">CloudProfileSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>MachineImage defines the name and multiple versions of the machine image in any environment.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Name is the name of the image.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>versions&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.MachineImageVersion">
[]MachineImageVersion
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Versions contains versions, expiration dates and container runtimes of the machine image&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.MachineImageVersion">MachineImageVersion
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.MachineImage">MachineImage&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>MachineImageVersion is an expirable version with list of supported container runtimes and interfaces&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>ExpirableVersion&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ExpirableVersion">
ExpirableVersion
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>ExpirableVersion&lt;/code> are embedded into this type.)
&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>cri&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.CRI">
[]CRI
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>CRI list of supported container runtime and interfaces supported by this version&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>architectures&lt;/code>&lt;/br>
&lt;em>
[]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Architectures is the list of CPU architectures of the machine image in this version.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kubeletVersionConstraint&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>KubeletVersionConstraint is a constraint describing the supported kubelet versions by the machine image in this version.
If the field is not specified, it is assumed that the machine image in this version supports all kubelet versions.
Examples:
- ‘&amp;gt;= 1.26’ - supports only kubelet versions greater than or equal to 1.26
- ‘&amp;lt; 1.26’ - supports only kubelet versions less than 1.26&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.MachineType">MachineType
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.CloudProfileSpec">CloudProfileSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>MachineType contains certain properties of a machine type.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>cpu&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/api/resource#Quantity">
k8s.io/apimachinery/pkg/api/resource.Quantity
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>CPU is the number of CPUs for this machine type.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>gpu&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/api/resource#Quantity">
k8s.io/apimachinery/pkg/api/resource.Quantity
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>GPU is the number of GPUs for this machine type.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>memory&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/api/resource#Quantity">
k8s.io/apimachinery/pkg/api/resource.Quantity
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Memory is the amount of memory for this machine type.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Name is the name of the machine type.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>storage&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.MachineTypeStorage">
MachineTypeStorage
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Storage is the amount of storage associated with the root volume of this machine type.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>usable&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Usable defines if the machine type can be used for shoot clusters.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>architecture&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Architecture is the CPU architecture of this machine type.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.MachineTypeStorage">MachineTypeStorage
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.MachineType">MachineType&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>MachineTypeStorage is the amount of storage associated with the root volume of this machine type.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>class&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Class is the class of the storage type.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>size&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/api/resource#Quantity">
k8s.io/apimachinery/pkg/api/resource.Quantity
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>StorageSize is the storage size.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>type&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Type is the type of the storage.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>minSize&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/api/resource#Quantity">
k8s.io/apimachinery/pkg/api/resource.Quantity
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>MinSize is the minimal supported storage size.
This overrides any other common minimum size configuration from &lt;code>spec.volumeTypes[*].minSize&lt;/code>.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.Maintenance">Maintenance
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootSpec">ShootSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>Maintenance contains information about the time window for maintenance operations and which
operations should be performed.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>autoUpdate&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.MaintenanceAutoUpdate">
MaintenanceAutoUpdate
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>AutoUpdate contains information about which constraints should be automatically updated.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>timeWindow&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.MaintenanceTimeWindow">
MaintenanceTimeWindow
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>TimeWindow contains information about the time window for maintenance operations.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>confineSpecUpdateRollout&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ConfineSpecUpdateRollout prevents that changes/updates to the shoot specification will be rolled out immediately.
Instead, they are rolled out during the shoot’s maintenance time window. There is one exception that will trigger
an immediate roll out which is changes to the Spec.Hibernation.Enabled field.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.MaintenanceAutoUpdate">MaintenanceAutoUpdate
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Maintenance">Maintenance&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>MaintenanceAutoUpdate contains information about which constraints should be automatically updated.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>kubernetesVersion&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>KubernetesVersion indicates whether the patch Kubernetes version may be automatically updated (default: true).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>machineImageVersion&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>MachineImageVersion indicates whether the machine image version may be automatically updated (default: true).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.MaintenanceTimeWindow">MaintenanceTimeWindow
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Maintenance">Maintenance&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>MaintenanceTimeWindow contains information about the time window for maintenance operations.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>begin&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Begin is the beginning of the time window in the format HHMMSS+ZONE, e.g. “220000+0100”.
If not present, a random value will be computed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>end&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>End is the end of the time window in the format HHMMSS+ZONE, e.g. “220000+0100”.
If not present, the value will be computed based on the “Begin” value.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.MemorySwapConfiguration">MemorySwapConfiguration
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.KubeletConfig">KubeletConfig&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>MemorySwapConfiguration contains kubelet swap configuration
For more information, please see KEP: 2400-node-swap&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>swapBehavior&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SwapBehavior">
SwapBehavior
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SwapBehavior configures swap memory available to container workloads. May be one of {“LimitedSwap”, “UnlimitedSwap”}
defaults to: LimitedSwap&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.Monitoring">Monitoring
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootSpec">ShootSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>Monitoring contains information about the monitoring configuration for the shoot.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>alerting&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Alerting">
Alerting
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Alerting contains information about the alerting configuration for the shoot cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.NamedResourceReference">NamedResourceReference
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ExtensionResourceState">ExtensionResourceState&lt;/a>,
&lt;a href="#core.gardener.cloud/v1beta1.ShootSpec">ShootSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>NamedResourceReference is a named reference to a resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Name of the resource reference.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>resourceRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#crossversionobjectreference-v1-autoscaling">
Kubernetes autoscaling/v1.CrossVersionObjectReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>ResourceRef is a reference to a resource.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.Networking">Networking
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootSpec">ShootSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>Networking defines networking parameters for the shoot cluster.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>type&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Type identifies the type of the networking plugin. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>providerConfig&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ProviderConfig is the configuration passed to network resource.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>pods&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Pods is the CIDR of the pod network. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>nodes&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Nodes is the CIDR of the entire node network.
This field is immutable if the feature gate MutableShootSpecNetworkingNodes is disabled.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>services&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Services is the CIDR of the service network. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>ipFamilies&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.IPFamily">
[]IPFamily
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>IPFamilies specifies the IP protocol versions to use for shoot networking. This field is immutable.
See &lt;a href="https://gardener.cloud/docs/gardener/ipv6/">https://github.com/gardener/gardener/blob/master/docs/usage/ipv6.md&lt;/a>.
Defaults to [“IPv4”].&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.NginxIngress">NginxIngress
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Addons">Addons&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>NginxIngress describes configuration values for the nginx-ingress addon.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>Addon&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Addon">
Addon
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>Addon&lt;/code> are embedded into this type.)
&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>loadBalancerSourceRanges&lt;/code>&lt;/br>
&lt;em>
[]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LoadBalancerSourceRanges is list of allowed IP sources for NginxIngress&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>config&lt;/code>&lt;/br>
&lt;em>
map[string]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Config contains custom configuration for the nginx-ingress-controller configuration.
See &lt;a href="https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/configmap.md#configuration-options">https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/configmap.md#configuration-options&lt;/a>&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>externalTrafficPolicy&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#serviceexternaltrafficpolicy-v1-core">
Kubernetes core/v1.ServiceExternalTrafficPolicy
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ExternalTrafficPolicy controls the &lt;code>.spec.externalTrafficPolicy&lt;/code> value of the load balancer &lt;code>Service&lt;/code>
exposing the nginx-ingress. Defaults to &lt;code>Cluster&lt;/code>.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.NodeLocalDNS">NodeLocalDNS
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.SystemComponents">SystemComponents&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>NodeLocalDNS contains the settings of the node local DNS components running in the data plane of the Shoot cluster.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>enabled&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Enabled indicates whether node local DNS is enabled or not.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>forceTCPToClusterDNS&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ForceTCPToClusterDNS indicates whether the connection from the node local DNS to the cluster DNS (Core DNS) will be forced to TCP or not.
Default, if unspecified, is to enforce TCP.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>forceTCPToUpstreamDNS&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ForceTCPToUpstreamDNS indicates whether the connection from the node local DNS to the upstream DNS (infrastructure DNS) will be forced to TCP or not.
Default, if unspecified, is to enforce TCP.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>disableForwardToUpstreamDNS&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>DisableForwardToUpstreamDNS indicates whether requests from node local DNS to upstream DNS should be disabled.
Default, if unspecified, is to forward requests for external domains to upstream DNS&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.OIDCConfig">OIDCConfig
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.KubeAPIServerConfig">KubeAPIServerConfig&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>OIDCConfig contains configuration settings for the OIDC provider.
Note: Descriptions were taken from the Kubernetes documentation.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>caBundle&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>If set, the OpenID server’s certificate will be verified by one of the authorities in the oidc-ca-file, otherwise the host’s root CA set will be used.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>clientAuthentication&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.OpenIDConnectClientAuthentication">
OpenIDConnectClientAuthentication
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ClientAuthentication can optionally contain client configuration used for kubeconfig generation.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>clientID&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>The client ID for the OpenID Connect client, must be set if oidc-issuer-url is set.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>groupsClaim&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>If provided, the name of a custom OpenID Connect claim for specifying user groups. The claim value is expected to be a string or array of strings. This flag is experimental, please see the authentication documentation for further details.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>groupsPrefix&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>If provided, all groups will be prefixed with this value to prevent conflicts with other authentication strategies.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>issuerURL&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>The URL of the OpenID issuer, only HTTPS scheme will be accepted. If set, it will be used to verify the OIDC JSON Web Token (JWT).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>requiredClaims&lt;/code>&lt;/br>
&lt;em>
map[string]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>key=value pairs that describes a required claim in the ID Token. If set, the claim is verified to be present in the ID Token with a matching value.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>signingAlgs&lt;/code>&lt;/br>
&lt;em>
[]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>List of allowed JOSE asymmetric signing algorithms. JWTs with a ‘alg’ header value not in this list will be rejected. Values are defined by RFC 7518 &lt;a href="https://tools.ietf.org/html/rfc7518#section-3.1">https://tools.ietf.org/html/rfc7518#section-3.1&lt;/a>&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>usernameClaim&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>The OpenID claim to use as the user name. Note that claims other than the default (‘sub’) is not guaranteed to be unique and immutable. This flag is experimental, please see the authentication documentation for further details. (default “sub”)&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>usernamePrefix&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>If provided, all usernames will be prefixed with this value. If not provided, username claims other than ‘email’ are prefixed by the issuer URL to avoid clashes. To skip any prefixing, provide the value ‘-’.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ObservabilityRotation">ObservabilityRotation
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootCredentialsRotation">ShootCredentialsRotation&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ObservabilityRotation contains information about the observability credential rotation.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>lastInitiationTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastInitiationTime is the most recent time when the observability credential rotation was initiated.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastCompletionTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastCompletionTime is the most recent time when the observability credential rotation was successfully completed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.OpenIDConnectClientAuthentication">OpenIDConnectClientAuthentication
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.OIDCConfig">OIDCConfig&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>OpenIDConnectClientAuthentication contains configuration for OIDC clients.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>extraConfig&lt;/code>&lt;/br>
&lt;em>
map[string]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Extra configuration added to kubeconfig’s auth-provider.
Must not be any of idp-issuer-url, client-id, client-secret, idp-certificate-authority, idp-certificate-authority-data, id-token or refresh-token&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>secret&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>The client Secret for the OpenID Connect client.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ProjectMember">ProjectMember
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ProjectSpec">ProjectSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ProjectMember is a member of a project.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>Subject&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#subject-v1-rbac">
Kubernetes rbac/v1.Subject
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>Subject&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>Subject is representing a user name, an email address, or any other identifier of a user, group, or service
account that has a certain role.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>role&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Role represents the role of this member.
IMPORTANT: Be aware that this field will be removed in the &lt;code>v1&lt;/code> version of this API in favor of the &lt;code>roles&lt;/code>
list.
TODO: Remove this field in favor of the &lt;code>roles&lt;/code> list in &lt;code>v1&lt;/code>.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>roles&lt;/code>&lt;/br>
&lt;em>
[]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Roles represents the list of roles of this member.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ProjectPhase">ProjectPhase
(&lt;code>string&lt;/code> alias)&lt;/p>&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ProjectStatus">ProjectStatus&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ProjectPhase is a label for the condition of a project at the current time.&lt;/p>
&lt;/p>
&lt;h3 id="core.gardener.cloud/v1beta1.ProjectSpec">ProjectSpec
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Project">Project&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ProjectSpec is the specification of a Project.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>createdBy&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#subject-v1-rbac">
Kubernetes rbac/v1.Subject
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>CreatedBy is a subject representing a user name, an email address, or any other identifier of a user
who created the project. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>description&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Description is a human-readable description of what the project is used for.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>owner&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#subject-v1-rbac">
Kubernetes rbac/v1.Subject
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Owner is a subject representing a user name, an email address, or any other identifier of a user owning
the project.
IMPORTANT: Be aware that this field will be removed in the &lt;code>v1&lt;/code> version of this API in favor of the &lt;code>owner&lt;/code>
role. The only way to change the owner will be by moving the &lt;code>owner&lt;/code> role. In this API version the only way
to change the owner is to use this field.
TODO: Remove this field in favor of the &lt;code>owner&lt;/code> role in &lt;code>v1&lt;/code>.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>purpose&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Purpose is a human-readable explanation of the project’s purpose.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>members&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ProjectMember">
[]ProjectMember
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Members is a list of subjects representing a user name, an email address, or any other identifier of a user,
group, or service account that has a certain role.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>namespace&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Namespace is the name of the namespace that has been created for the Project object.
A nil value means that Gardener will determine the name of the namespace.
This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>tolerations&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ProjectTolerations">
ProjectTolerations
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Tolerations contains the tolerations for taints on seed clusters.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ProjectStatus">ProjectStatus
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Project">Project&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ProjectStatus holds the most recently observed status of the project.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>observedGeneration&lt;/code>&lt;/br>
&lt;em>
int64
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ObservedGeneration is the most recent generation observed for this project.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>phase&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ProjectPhase">
ProjectPhase
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Phase is the current phase of the project.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>staleSinceTimestamp&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>StaleSinceTimestamp contains the timestamp when the project was first discovered to be stale/unused.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>staleAutoDeleteTimestamp&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>StaleAutoDeleteTimestamp contains the timestamp when the project will be garbage-collected/automatically deleted
because it’s stale/unused.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastActivityTimestamp&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastActivityTimestamp contains the timestamp from the last activity performed in this project.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ProjectTolerations">ProjectTolerations
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ProjectSpec">ProjectSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ProjectTolerations contains the tolerations for taints on seed clusters.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>defaults&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Toleration">
[]Toleration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Defaults contains a list of tolerations that are added to the shoots in this project by default.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>whitelist&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Toleration">
[]Toleration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Whitelist contains a list of tolerations that are allowed to be added to the shoots in this project. Please note
that this list may only be added by users having the &lt;code>spec-tolerations-whitelist&lt;/code> verb for project resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.Provider">Provider
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootSpec">ShootSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>Provider contains provider-specific information that are handed-over to the provider-specific
extension controller.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>type&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Type is the type of the provider. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>controlPlaneConfig&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ControlPlaneConfig contains the provider-specific control plane config blob. Please look up the concrete
definition in the documentation of your provider extension.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>infrastructureConfig&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>InfrastructureConfig contains the provider-specific infrastructure config blob. Please look up the concrete
definition in the documentation of your provider extension.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>workers&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Worker">
[]Worker
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Workers is a list of worker groups.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>workersSettings&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.WorkersSettings">
WorkersSettings
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>WorkersSettings contains settings for all workers.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ProxyMode">ProxyMode
(&lt;code>string&lt;/code> alias)&lt;/p>&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.KubeProxyConfig">KubeProxyConfig&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ProxyMode available in Linux platform: ‘userspace’ (older, going to be EOL), ‘iptables’
(newer, faster), ‘ipvs’ (newest, better in performance and scalability).
As of now only ‘iptables’ and ‘ipvs’ is supported by Gardener.
In Linux platform, if the iptables proxy is selected, regardless of how, but the system’s kernel or iptables versions are
insufficient, this always falls back to the userspace proxy. IPVS mode will be enabled when proxy mode is set to ‘ipvs’,
and the fall back path is firstly iptables and then userspace.&lt;/p>
&lt;/p>
&lt;h3 id="core.gardener.cloud/v1beta1.QuotaSpec">QuotaSpec
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Quota">Quota&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>QuotaSpec is the specification of a Quota.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>clusterLifetimeDays&lt;/code>&lt;/br>
&lt;em>
int32
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ClusterLifetimeDays is the lifetime of a Shoot cluster in days before it will be terminated automatically.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metrics&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#resourcelist-v1-core">
Kubernetes core/v1.ResourceList
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Metrics is a list of resources which will be put under constraints.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>scope&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectreference-v1-core">
Kubernetes core/v1.ObjectReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Scope is the scope of the Quota object, either ‘project’ or ‘secret’. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.Region">Region
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.CloudProfileSpec">CloudProfileSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>Region contains certain properties of a region.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Name is a region name.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>zones&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.AvailabilityZone">
[]AvailabilityZone
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Zones is a list of availability zones in this region.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>labels&lt;/code>&lt;/br>
&lt;em>
map[string]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Labels is an optional set of key-value pairs that contain certain administrator-controlled labels for this region.
It can be used by Gardener administrators/operators to provide additional information about a region, e.g. wrt
quality, reliability, access restrictions, etc.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ResourceData">ResourceData
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootStateSpec">ShootStateSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ResourceData holds the data of a resource referred to by an extension controller state.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>CrossVersionObjectReference&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#crossversionobjectreference-v1-autoscaling">
Kubernetes autoscaling/v1.CrossVersionObjectReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>CrossVersionObjectReference&lt;/code> are embedded into this type.)
&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>data&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Data of the resource&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ResourceWatchCacheSize">ResourceWatchCacheSize
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.WatchCacheSizes">WatchCacheSizes&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ResourceWatchCacheSize contains configuration of the API server’s watch cache size for one specific resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>apiGroup&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>APIGroup is the API group of the resource for which the watch cache size should be configured.
An unset value is used to specify the legacy core API (e.g. for &lt;code>secrets&lt;/code>).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>resource&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Resource is the name of the resource for which the watch cache size should be configured
(in lowercase plural form, e.g. &lt;code>secrets&lt;/code>).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>size&lt;/code>&lt;/br>
&lt;em>
int32
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>CacheSize specifies the watch cache size that should be configured for the specified resource.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.SSHAccess">SSHAccess
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.WorkersSettings">WorkersSettings&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>SSHAccess contains settings regarding ssh access to the worker nodes.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>enabled&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Enabled indicates whether the SSH access to the worker nodes is ensured to be enabled or disabled in systemd.
Defaults to true.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.SchedulingProfile">SchedulingProfile
(&lt;code>string&lt;/code> alias)&lt;/p>&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.KubeSchedulerConfig">KubeSchedulerConfig&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>SchedulingProfile is a string alias used for scheduling profile values.&lt;/p>
&lt;/p>
&lt;h3 id="core.gardener.cloud/v1beta1.SecretBindingProvider">SecretBindingProvider
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.SecretBinding">SecretBinding&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>SecretBindingProvider defines the provider type of the SecretBinding.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>type&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Type is the type of the provider.&lt;/p>
&lt;p>For backwards compatibility, the field can contain multiple providers separated by a comma.
However the usage of single SecretBinding (hence Secret) for different cloud providers is strongly discouraged.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.SeedBackup">SeedBackup
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSpec">SeedSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>SeedBackup contains the object store configuration for backups for shoot (currently only etcd).&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>provider&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Provider is a provider name. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>providerConfig&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ProviderConfig is the configuration passed to BackupBucket resource.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>region&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Region is a region name. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>secretRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#secretreference-v1-core">
Kubernetes core/v1.SecretReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>SecretRef is a reference to a Secret object containing the cloud provider credentials for
the object store where backups should be stored. It should have enough privileges to manipulate
the objects as well as buckets.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.SeedDNS">SeedDNS
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSpec">SeedSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>SeedDNS contains DNS-relevant information about this seed cluster.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>provider&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedDNSProvider">
SeedDNSProvider
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Provider configures a DNSProvider&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.SeedDNSProvider">SeedDNSProvider
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedDNS">SeedDNS&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>SeedDNSProvider configures a DNSProvider for Seeds&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>type&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Type describes the type of the dns-provider, for example &lt;code>aws-route53&lt;/code>&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>secretRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#secretreference-v1-core">
Kubernetes core/v1.SecretReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>SecretRef is a reference to a Secret object containing cloud provider credentials used for registering external domains.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.SeedNetworks">SeedNetworks
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSpec">SeedSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>SeedNetworks contains CIDRs for the pod, service and node networks of a Kubernetes cluster.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>nodes&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Nodes is the CIDR of the node network. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>pods&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Pods is the CIDR of the pod network. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>services&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Services is the CIDR of the service network. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>shootDefaults&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootNetworks">
ShootNetworks
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ShootDefaults contains the default networks CIDRs for shoots.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>blockCIDRs&lt;/code>&lt;/br>
&lt;em>
[]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>BlockCIDRs is a list of network addresses that should be blocked for shoot control plane components running
in the seed cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>ipFamilies&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.IPFamily">
[]IPFamily
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>IPFamilies specifies the IP protocol versions to use for seed networking. This field is immutable.
See &lt;a href="https://gardener.cloud/docs/gardener/ipv6/">https://github.com/gardener/gardener/blob/master/docs/usage/ipv6.md&lt;/a>.
Defaults to [“IPv4”].&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.SeedProvider">SeedProvider
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSpec">SeedSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>SeedProvider defines the provider-specific information of this Seed cluster.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>type&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Type is the name of the provider.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>providerConfig&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ProviderConfig is the configuration passed to Seed resource.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>region&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Region is a name of a region.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>zones&lt;/code>&lt;/br>
&lt;em>
[]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Zones is the list of availability zones the seed cluster is deployed to.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.SeedSelector">SeedSelector
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.CloudProfileSpec">CloudProfileSpec&lt;/a>,
&lt;a href="#core.gardener.cloud/v1beta1.ExposureClassScheduling">ExposureClassScheduling&lt;/a>,
&lt;a href="#core.gardener.cloud/v1beta1.ShootSpec">ShootSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>SeedSelector contains constraints for selecting seed to be usable for shoots using a profile&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>LabelSelector&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#labelselector-v1-meta">
Kubernetes meta/v1.LabelSelector
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>LabelSelector&lt;/code> are embedded into this type.)
&lt;/p>
&lt;em>(Optional)&lt;/em>
&lt;p>LabelSelector is optional and can be used to select seeds by their label settings&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>providerTypes&lt;/code>&lt;/br>
&lt;em>
[]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Providers is optional and can be used by restricting seeds by their provider type. ‘*’ can be used to enable seeds regardless of their provider type.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.SeedSettingDependencyWatchdog">SeedSettingDependencyWatchdog
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSettings">SeedSettings&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>SeedSettingDependencyWatchdog controls the dependency-watchdog settings for the seed.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>endpoint&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSettingDependencyWatchdogEndpoint">
SeedSettingDependencyWatchdogEndpoint
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Endpoint controls the endpoint settings for the dependency-watchdog for the seed.
Deprecated: This field is deprecated and will be removed in a future version of Gardener. Use &lt;code>Weeder&lt;/code> instead.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>probe&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSettingDependencyWatchdogProbe">
SeedSettingDependencyWatchdogProbe
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Probe controls the probe settings for the dependency-watchdog for the seed.
Deprecated: This field is deprecated and will be removed in a future version of Gardener. Use &lt;code>Prober&lt;/code> instead.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>weeder&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSettingDependencyWatchdogWeeder">
SeedSettingDependencyWatchdogWeeder
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Weeder controls the weeder settings for the dependency-watchdog for the seed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>prober&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSettingDependencyWatchdogProber">
SeedSettingDependencyWatchdogProber
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Prober controls the prober settings for the dependency-watchdog for the seed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.SeedSettingDependencyWatchdogEndpoint">SeedSettingDependencyWatchdogEndpoint
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSettingDependencyWatchdog">SeedSettingDependencyWatchdog&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>SeedSettingDependencyWatchdogEndpoint controls the endpoint settings for the dependency-watchdog for the seed.
Deprecated: This type is deprecated and will be removed in a future version of Gardener. Use type &lt;code>SeedSettingDependencyWatchdogWeeder&lt;/code> instead.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>enabled&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Enabled controls whether the endpoint controller of the dependency-watchdog should be enabled. This controller
helps to alleviate the delay where control plane components remain unavailable by finding the respective pods in
CrashLoopBackoff status and restarting them once their dependants become ready and available again.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.SeedSettingDependencyWatchdogProbe">SeedSettingDependencyWatchdogProbe
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSettingDependencyWatchdog">SeedSettingDependencyWatchdog&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>SeedSettingDependencyWatchdogProbe controls the probe settings for the dependency-watchdog for the seed.
Deprecated: This type is deprecated and will be removed in a future version of Gardener. Use type &lt;code>SeedSettingDependencyWatchdogProber&lt;/code> instead.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>enabled&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Enabled controls whether the probe controller of the dependency-watchdog should be enabled. This controller
scales down the kube-controller-manager, machine-controller-manager and cluster-autoscaler of shoot clusters in case their respective kube-apiserver is not
reachable via its external ingress in order to avoid melt-down situations.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.SeedSettingDependencyWatchdogProber">SeedSettingDependencyWatchdogProber
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSettingDependencyWatchdog">SeedSettingDependencyWatchdog&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>SeedSettingDependencyWatchdogProber controls the prober settings for the dependency-watchdog for the seed.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>enabled&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Enabled controls whether the probe controller(prober) of the dependency-watchdog should be enabled. This controller
scales down the kube-controller-manager, machine-controller-manager and cluster-autoscaler of shoot clusters in case their respective kube-apiserver is not
reachable via its external ingress in order to avoid melt-down situations.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.SeedSettingDependencyWatchdogWeeder">SeedSettingDependencyWatchdogWeeder
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSettingDependencyWatchdog">SeedSettingDependencyWatchdog&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>SeedSettingDependencyWatchdogWeeder controls the weeder settings for the dependency-watchdog for the seed.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>enabled&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Enabled controls whether the endpoint controller(weeder) of the dependency-watchdog should be enabled. This controller
helps to alleviate the delay where control plane components remain unavailable by finding the respective pods in
CrashLoopBackoff status and restarting them once their dependants become ready and available again.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.SeedSettingExcessCapacityReservation">SeedSettingExcessCapacityReservation
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSettings">SeedSettings&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>SeedSettingExcessCapacityReservation controls the excess capacity reservation for shoot control planes in the seed.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>enabled&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Enabled controls whether the default excess capacity reservation should be enabled. When not specified, the functionality is enabled.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>configs&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSettingExcessCapacityReservationConfig">
[]SeedSettingExcessCapacityReservationConfig
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Configs configures excess capacity reservation deployments for shoot control planes in the seed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.SeedSettingExcessCapacityReservationConfig">SeedSettingExcessCapacityReservationConfig
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSettingExcessCapacityReservation">SeedSettingExcessCapacityReservation&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>SeedSettingExcessCapacityReservationConfig configures excess capacity reservation deployments for shoot control planes in the seed.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>resources&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#resourcelist-v1-core">
Kubernetes core/v1.ResourceList
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Resources specify the resource requests and limits of the excess-capacity-reservation pod.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>nodeSelector&lt;/code>&lt;/br>
&lt;em>
map[string]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>NodeSelector specifies the node where the excess-capacity-reservation pod should run.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>tolerations&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#toleration-v1-core">
[]Kubernetes core/v1.Toleration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Tolerations specify the tolerations for the the excess-capacity-reservation pod.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.SeedSettingLoadBalancerServices">SeedSettingLoadBalancerServices
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSettings">SeedSettings&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>SeedSettingLoadBalancerServices controls certain settings for services of type load balancer that are created in the
seed.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>annotations&lt;/code>&lt;/br>
&lt;em>
map[string]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Annotations is a map of annotations that will be injected/merged into every load balancer service object.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>externalTrafficPolicy&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#serviceexternaltrafficpolicy-v1-core">
Kubernetes core/v1.ServiceExternalTrafficPolicy
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ExternalTrafficPolicy describes how nodes distribute service traffic they
receive on one of the service’s “externally-facing” addresses.
Defaults to “Cluster”.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>zones&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSettingLoadBalancerServicesZones">
[]SeedSettingLoadBalancerServicesZones
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Zones controls settings, which are specific to the single-zone load balancers in a multi-zonal setup.
Can be empty for single-zone seeds. Each specified zone has to relate to one of the zones in seed.spec.provider.zones.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.SeedSettingLoadBalancerServicesZones">SeedSettingLoadBalancerServicesZones
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSettingLoadBalancerServices">SeedSettingLoadBalancerServices&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>SeedSettingLoadBalancerServicesZones controls settings, which are specific to the single-zone load balancers in a
multi-zonal setup.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Name is the name of the zone as specified in seed.spec.provider.zones.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>annotations&lt;/code>&lt;/br>
&lt;em>
map[string]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Annotations is a map of annotations that will be injected/merged into the zone-specific load balancer service object.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>externalTrafficPolicy&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#serviceexternaltrafficpolicy-v1-core">
Kubernetes core/v1.ServiceExternalTrafficPolicy
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ExternalTrafficPolicy describes how nodes distribute service traffic they
receive on one of the service’s “externally-facing” addresses.
Defaults to “Cluster”.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.SeedSettingScheduling">SeedSettingScheduling
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSettings">SeedSettings&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>SeedSettingScheduling controls settings for scheduling decisions for the seed.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>visible&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Visible controls whether the gardener-scheduler shall consider this seed when scheduling shoots. Invisible seeds
are not considered by the scheduler.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.SeedSettingTopologyAwareRouting">SeedSettingTopologyAwareRouting
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSettings">SeedSettings&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>SeedSettingTopologyAwareRouting controls certain settings for topology-aware traffic routing in the seed.
See &lt;a href="https://gardener.cloud/docs/gardener/topology_aware_routing/">https://github.com/gardener/gardener/blob/master/docs/operations/topology_aware_routing.md&lt;/a>.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>enabled&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Enabled controls whether certain Services deployed in the seed cluster should be topology-aware.
These Services are etcd-main-client, etcd-events-client, kube-apiserver, gardener-resource-manager and vpa-webhook.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.SeedSettingVerticalPodAutoscaler">SeedSettingVerticalPodAutoscaler
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSettings">SeedSettings&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>SeedSettingVerticalPodAutoscaler controls certain settings for the vertical pod autoscaler components deployed in the
seed.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>enabled&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Enabled controls whether the VPA components shall be deployed into the garden namespace in the seed cluster. It
is enabled by default because Gardener heavily relies on a VPA being deployed. You should only disable this if
your seed cluster already has another, manually/custom managed VPA deployment.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.SeedSettings">SeedSettings
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSpec">SeedSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>SeedSettings contains certain settings for this seed cluster.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>excessCapacityReservation&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSettingExcessCapacityReservation">
SeedSettingExcessCapacityReservation
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ExcessCapacityReservation controls the excess capacity reservation for shoot control planes in the seed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>scheduling&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSettingScheduling">
SeedSettingScheduling
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Scheduling controls settings for scheduling decisions for the seed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>loadBalancerServices&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSettingLoadBalancerServices">
SeedSettingLoadBalancerServices
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LoadBalancerServices controls certain settings for services of type load balancer that are created in the seed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>verticalPodAutoscaler&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSettingVerticalPodAutoscaler">
SeedSettingVerticalPodAutoscaler
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>VerticalPodAutoscaler controls certain settings for the vertical pod autoscaler components deployed in the seed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>dependencyWatchdog&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSettingDependencyWatchdog">
SeedSettingDependencyWatchdog
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>DependencyWatchdog controls certain settings for the dependency-watchdog components deployed in the seed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>topologyAwareRouting&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSettingTopologyAwareRouting">
SeedSettingTopologyAwareRouting
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>TopologyAwareRouting controls certain settings for topology-aware traffic routing in the seed.
See &lt;a href="https://gardener.cloud/docs/gardener/topology_aware_routing/">https://github.com/gardener/gardener/blob/master/docs/operations/topology_aware_routing.md&lt;/a>.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.SeedSpec">SeedSpec
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Seed">Seed&lt;/a>,
&lt;a href="#core.gardener.cloud/v1beta1.SeedTemplate">SeedTemplate&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>SeedSpec is the specification of a Seed.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>backup&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedBackup">
SeedBackup
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Backup holds the object store configuration for the backups of shoot (currently only etcd).
If it is not specified, then there won’t be any backups taken for shoots associated with this seed.
If backup field is present in seed, then backups of the etcd from shoot control plane will be stored
under the configured object store.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>dns&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedDNS">
SeedDNS
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>DNS contains DNS-relevant information about this seed cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>networks&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedNetworks">
SeedNetworks
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Networks defines the pod, service and worker network of the Seed cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>provider&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedProvider">
SeedProvider
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Provider defines the provider type and region for this Seed cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>secretRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#secretreference-v1-core">
Kubernetes core/v1.SecretReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SecretRef is a reference to a Secret object containing the Kubeconfig of the Kubernetes
cluster to be registered as Seed.&lt;/p>
&lt;p>Deprecated: This field is deprecated, gardenlet must run in the Seed cluster,
hence it should use the in-cluster rest config via ServiceAccount to communicate with the Seed cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>taints&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedTaint">
[]SeedTaint
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Taints describes taints on the seed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>volume&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedVolume">
SeedVolume
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Volume contains settings for persistentvolumes created in the seed cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>settings&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSettings">
SeedSettings
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Settings contains certain settings for this seed cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>ingress&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Ingress">
Ingress
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Ingress configures Ingress specific settings of the Seed cluster. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.SeedStatus">SeedStatus
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Seed">Seed&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>SeedStatus is the status of a Seed.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>gardener&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Gardener">
Gardener
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Gardener holds information about the Gardener which last acted on the Shoot.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kubernetesVersion&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>KubernetesVersion is the Kubernetes version of the seed cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>conditions&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Condition">
[]Condition
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Conditions represents the latest available observations of a Seed’s current state.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>observedGeneration&lt;/code>&lt;/br>
&lt;em>
int64
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ObservedGeneration is the most recent generation observed for this Seed. It corresponds to the
Seed’s generation, which is updated on mutation by the API Server.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>clusterIdentity&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ClusterIdentity is the identity of the Seed cluster. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>capacity&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#resourcelist-v1-core">
Kubernetes core/v1.ResourceList
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Capacity represents the total resources of a seed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>allocatable&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#resourcelist-v1-core">
Kubernetes core/v1.ResourceList
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Allocatable represents the resources of a seed that are available for scheduling.
Defaults to Capacity.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>clientCertificateExpirationTimestamp&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ClientCertificateExpirationTimestamp is the timestamp at which gardenlet’s client certificate expires.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastOperation&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.LastOperation">
LastOperation
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastOperation holds information about the last operation on the Seed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.SeedTaint">SeedTaint
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSpec">SeedSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>SeedTaint describes a taint on a seed.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>key&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Key is the taint key to be applied to a seed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>value&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Value is the taint value corresponding to the taint key.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.SeedTemplate">SeedTemplate
&lt;/h3>
&lt;p>
&lt;p>SeedTemplate is a template for creating a Seed object.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Standard object metadata.&lt;/p>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>spec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSpec">
SeedSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Specification of the desired behavior of the Seed.&lt;/p>
&lt;br/>
&lt;br/>
&lt;table>
&lt;tr>
&lt;td>
&lt;code>backup&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedBackup">
SeedBackup
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Backup holds the object store configuration for the backups of shoot (currently only etcd).
If it is not specified, then there won’t be any backups taken for shoots associated with this seed.
If backup field is present in seed, then backups of the etcd from shoot control plane will be stored
under the configured object store.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>dns&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedDNS">
SeedDNS
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>DNS contains DNS-relevant information about this seed cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>networks&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedNetworks">
SeedNetworks
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Networks defines the pod, service and worker network of the Seed cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>provider&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedProvider">
SeedProvider
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Provider defines the provider type and region for this Seed cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>secretRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#secretreference-v1-core">
Kubernetes core/v1.SecretReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SecretRef is a reference to a Secret object containing the Kubeconfig of the Kubernetes
cluster to be registered as Seed.&lt;/p>
&lt;p>Deprecated: This field is deprecated, gardenlet must run in the Seed cluster,
hence it should use the in-cluster rest config via ServiceAccount to communicate with the Seed cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>taints&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedTaint">
[]SeedTaint
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Taints describes taints on the seed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>volume&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedVolume">
SeedVolume
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Volume contains settings for persistentvolumes created in the seed cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>settings&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSettings">
SeedSettings
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Settings contains certain settings for this seed cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>ingress&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Ingress">
Ingress
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Ingress configures Ingress specific settings of the Seed cluster. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.SeedVolume">SeedVolume
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSpec">SeedSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>SeedVolume contains settings for persistentvolumes created in the seed cluster.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>minimumSize&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/api/resource#Quantity">
k8s.io/apimachinery/pkg/api/resource.Quantity
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>MinimumSize defines the minimum size that should be used for PVCs in the seed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>providers&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedVolumeProvider">
[]SeedVolumeProvider
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Providers is a list of storage class provisioner types for the seed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.SeedVolumeProvider">SeedVolumeProvider
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedVolume">SeedVolume&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>SeedVolumeProvider is a storage class provisioner type.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>purpose&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Purpose is the purpose of this provider.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Name is the name of the storage class provisioner type.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ServiceAccountConfig">ServiceAccountConfig
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.KubeAPIServerConfig">KubeAPIServerConfig&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ServiceAccountConfig is the kube-apiserver configuration for service accounts.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>issuer&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Issuer is the identifier of the service account token issuer. The issuer will assert this
identifier in “iss” claim of issued tokens. This value is used to generate new service account tokens.
This value is a string or URI. Defaults to URI of the API server.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>extendTokenExpiration&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ExtendTokenExpiration turns on projected service account expiration extension during token generation, which
helps safe transition from legacy token to bound service account token feature. If this flag is enabled,
admission injected tokens would be extended up to 1 year to prevent unexpected failure during transition,
ignoring value of service-account-max-token-expiration.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>maxTokenExpiration&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#Duration">
Kubernetes meta/v1.Duration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>MaxTokenExpiration is the maximum validity duration of a token created by the service account token issuer. If an
otherwise valid TokenRequest with a validity duration larger than this value is requested, a token will be issued
with a validity duration of this value.
This field must be within [30d,90d].&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>acceptedIssuers&lt;/code>&lt;/br>
&lt;em>
[]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>AcceptedIssuers is an additional set of issuers that are used to determine which service account tokens are accepted.
These values are not used to generate new service account tokens. Only useful when service account tokens are also
issued by another external system or a change of the current issuer that is used for generating tokens is being performed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ServiceAccountKeyRotation">ServiceAccountKeyRotation
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootCredentialsRotation">ShootCredentialsRotation&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ServiceAccountKeyRotation contains information about the service account key credential rotation.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>phase&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.CredentialsRotationPhase">
CredentialsRotationPhase
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Phase describes the phase of the service account key credential rotation.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastCompletionTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastCompletionTime is the most recent time when the service account key credential rotation was successfully
completed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastInitiationTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastInitiationTime is the most recent time when the service account key credential rotation was initiated.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastInitiationFinishedTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastInitiationFinishedTime is the recent time when the certificate authority credential rotation initiation was
completed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastCompletionTriggeredTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastCompletionTriggeredTime is the recent time when the certificate authority credential rotation completion was
triggered.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ShootAdvertisedAddress">ShootAdvertisedAddress
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootStatus">ShootStatus&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ShootAdvertisedAddress contains information for the shoot’s Kube API server.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Name of the advertised address. e.g. external&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>url&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>The URL of the API Server. e.g. &lt;a href="https://api.foo.bar">https://api.foo.bar&lt;/a> or &lt;a href="https://1.2.3.4">https://1.2.3.4&lt;/a>&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ShootCredentials">ShootCredentials
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootStatus">ShootStatus&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ShootCredentials contains information about the shoot credentials.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>rotation&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootCredentialsRotation">
ShootCredentialsRotation
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Rotation contains information about the credential rotations.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ShootCredentialsRotation">ShootCredentialsRotation
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootCredentials">ShootCredentials&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ShootCredentialsRotation contains information about the rotation of credentials.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>certificateAuthorities&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.CARotation">
CARotation
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>CertificateAuthorities contains information about the certificate authority credential rotation.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kubeconfig&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootKubeconfigRotation">
ShootKubeconfigRotation
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Kubeconfig contains information about the kubeconfig credential rotation.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>sshKeypair&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootSSHKeypairRotation">
ShootSSHKeypairRotation
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SSHKeypair contains information about the ssh-keypair credential rotation.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>observability&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ObservabilityRotation">
ObservabilityRotation
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Observability contains information about the observability credential rotation.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>serviceAccountKey&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ServiceAccountKeyRotation">
ServiceAccountKeyRotation
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ServiceAccountKey contains information about the service account key credential rotation.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>etcdEncryptionKey&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ETCDEncryptionKeyRotation">
ETCDEncryptionKeyRotation
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ETCDEncryptionKey contains information about the ETCD encryption key credential rotation.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ShootKubeconfigRotation">ShootKubeconfigRotation
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootCredentialsRotation">ShootCredentialsRotation&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ShootKubeconfigRotation contains information about the kubeconfig credential rotation.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>lastInitiationTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastInitiationTime is the most recent time when the kubeconfig credential rotation was initiated.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastCompletionTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastCompletionTime is the most recent time when the kubeconfig credential rotation was successfully completed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ShootMachineImage">ShootMachineImage
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Machine">Machine&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ShootMachineImage defines the name and the version of the shoot’s machine image in any environment. Has to be
defined in the respective CloudProfile.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Name is the name of the image.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>providerConfig&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ProviderConfig is the shoot’s individual configuration passed to an extension resource.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>version&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Version is the version of the shoot’s image.
If version is not provided, it will be defaulted to the latest version from the CloudProfile.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ShootNetworks">ShootNetworks
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedNetworks">SeedNetworks&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ShootNetworks contains the default networks CIDRs for shoots.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>pods&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Pods is the CIDR of the pod network.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>services&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Services is the CIDR of the service network.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ShootPurpose">ShootPurpose
(&lt;code>string&lt;/code> alias)&lt;/p>&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootSpec">ShootSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ShootPurpose is a type alias for string.&lt;/p>
&lt;/p>
&lt;h3 id="core.gardener.cloud/v1beta1.ShootSSHKeypairRotation">ShootSSHKeypairRotation
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootCredentialsRotation">ShootCredentialsRotation&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ShootSSHKeypairRotation contains information about the ssh-keypair credential rotation.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>lastInitiationTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastInitiationTime is the most recent time when the ssh-keypair credential rotation was initiated.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastCompletionTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastCompletionTime is the most recent time when the ssh-keypair credential rotation was successfully completed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ShootSpec">ShootSpec
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Shoot">Shoot&lt;/a>,
&lt;a href="#core.gardener.cloud/v1beta1.ShootTemplate">ShootTemplate&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ShootSpec is the specification of a Shoot.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>addons&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Addons">
Addons
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Addons contains information about enabled/disabled addons and their configuration.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>cloudProfileName&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>CloudProfileName is a name of a CloudProfile object. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>dns&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.DNS">
DNS
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>DNS contains information about the DNS settings of the Shoot.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>extensions&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Extension">
[]Extension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Extensions contain type and provider information for Shoot extensions.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>hibernation&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Hibernation">
Hibernation
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Hibernation contains information whether the Shoot is suspended or not.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kubernetes&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Kubernetes">
Kubernetes
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Kubernetes contains the version and configuration settings of the control plane components.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>networking&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Networking">
Networking
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Networking contains information about cluster networking such as CNI Plugin type, CIDRs, …etc.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>maintenance&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Maintenance">
Maintenance
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Maintenance contains information about the time window for maintenance operations and which
operations should be performed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>monitoring&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Monitoring">
Monitoring
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Monitoring contains information about custom monitoring configurations for the shoot.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>provider&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Provider">
Provider
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Provider contains all provider-specific and provider-relevant information.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>purpose&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootPurpose">
ShootPurpose
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Purpose is the purpose class for this cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>region&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Region is a name of a region. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>secretBindingName&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SecretBindingName is the name of the a SecretBinding that has a reference to the provider secret.
The credentials inside the provider secret will be used to create the shoot in the respective account.
This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>seedName&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SeedName is the name of the seed cluster that runs the control plane of the Shoot.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>seedSelector&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSelector">
SeedSelector
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SeedSelector is an optional selector which must match a seed’s labels for the shoot to be scheduled on that seed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>resources&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.NamedResourceReference">
[]NamedResourceReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Resources holds a list of named resource references that can be referred to in extension configs by their names.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>tolerations&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Toleration">
[]Toleration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Tolerations contains the tolerations for taints on seed clusters.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>exposureClassName&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ExposureClassName is the optional name of an exposure class to apply a control plane endpoint exposure strategy.
This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>systemComponents&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SystemComponents">
SystemComponents
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SystemComponents contains the settings of system components in the control or data plane of the Shoot cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>controlPlane&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ControlPlane">
ControlPlane
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ControlPlane contains general settings for the control plane of the shoot.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>schedulerName&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SchedulerName is the name of the responsible scheduler which schedules the shoot.
If not specified, the default scheduler takes over.
This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ShootStateSpec">ShootStateSpec
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootState">ShootState&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ShootStateSpec is the specification of the ShootState.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>gardener&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.GardenerResourceData">
[]GardenerResourceData
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Gardener holds the data required to generate resources deployed by the gardenlet&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>extensions&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ExtensionResourceState">
[]ExtensionResourceState
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Extensions holds the state of custom resources reconciled by extension controllers in the seed&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>resources&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ResourceData">
[]ResourceData
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Resources holds the data of resources referred to by extension controller states&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ShootStatus">ShootStatus
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Shoot">Shoot&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ShootStatus holds the most recently observed status of the Shoot cluster.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>conditions&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Condition">
[]Condition
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Conditions represents the latest available observations of a Shoots’s current state.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>constraints&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Condition">
[]Condition
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Constraints represents conditions of a Shoot’s current state that constraint some operations on it.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>gardener&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Gardener">
Gardener
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Gardener holds information about the Gardener which last acted on the Shoot.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>hibernated&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>IsHibernated indicates whether the Shoot is currently hibernated.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastOperation&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.LastOperation">
LastOperation
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastOperation holds information about the last operation on the Shoot.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastErrors&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.LastError">
[]LastError
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastErrors holds information about the last occurred error(s) during an operation.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>observedGeneration&lt;/code>&lt;/br>
&lt;em>
int64
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ObservedGeneration is the most recent generation observed for this Shoot. It corresponds to the
Shoot’s generation, which is updated on mutation by the API Server.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>retryCycleStartTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>RetryCycleStartTime is the start time of the last retry cycle (used to determine how often an operation
must be retried until we give up).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>seedName&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SeedName is the name of the seed cluster that runs the control plane of the Shoot. This value is only written
after a successful create/reconcile operation. It will be used when control planes are moved between Seeds.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>technicalID&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>TechnicalID is the name that is used for creating the Seed namespace, the infrastructure resources, and
basically everything that is related to this particular Shoot. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>uid&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/types#UID">
k8s.io/apimachinery/pkg/types.UID
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>UID is a unique identifier for the Shoot cluster to avoid portability between Kubernetes clusters.
It is used to compute unique hashes. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>clusterIdentity&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ClusterIdentity is the identity of the Shoot cluster. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>advertisedAddresses&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootAdvertisedAddress">
[]ShootAdvertisedAddress
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>List of addresses on which the Kube API server can be reached.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>migrationStartTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>MigrationStartTime is the time when a migration to a different seed was initiated.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>credentials&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootCredentials">
ShootCredentials
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Credentials contains information about the shoot credentials.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastHibernationTriggerTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastHibernationTriggerTime indicates the last time when the hibernation controller
managed to change the hibernation settings of the cluster&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastMaintenance&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.LastMaintenance">
LastMaintenance
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastMaintenance holds information about the last maintenance operations on the Shoot.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.ShootTemplate">ShootTemplate
&lt;/h3>
&lt;p>
&lt;p>ShootTemplate is a template for creating a Shoot object.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Standard object metadata.&lt;/p>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>spec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootSpec">
ShootSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Specification of the desired behavior of the Shoot.&lt;/p>
&lt;br/>
&lt;br/>
&lt;table>
&lt;tr>
&lt;td>
&lt;code>addons&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Addons">
Addons
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Addons contains information about enabled/disabled addons and their configuration.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>cloudProfileName&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>CloudProfileName is a name of a CloudProfile object. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>dns&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.DNS">
DNS
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>DNS contains information about the DNS settings of the Shoot.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>extensions&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Extension">
[]Extension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Extensions contain type and provider information for Shoot extensions.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>hibernation&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Hibernation">
Hibernation
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Hibernation contains information whether the Shoot is suspended or not.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kubernetes&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Kubernetes">
Kubernetes
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Kubernetes contains the version and configuration settings of the control plane components.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>networking&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Networking">
Networking
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Networking contains information about cluster networking such as CNI Plugin type, CIDRs, …etc.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>maintenance&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Maintenance">
Maintenance
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Maintenance contains information about the time window for maintenance operations and which
operations should be performed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>monitoring&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Monitoring">
Monitoring
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Monitoring contains information about custom monitoring configurations for the shoot.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>provider&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Provider">
Provider
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Provider contains all provider-specific and provider-relevant information.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>purpose&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootPurpose">
ShootPurpose
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Purpose is the purpose class for this cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>region&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Region is a name of a region. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>secretBindingName&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SecretBindingName is the name of the a SecretBinding that has a reference to the provider secret.
The credentials inside the provider secret will be used to create the shoot in the respective account.
This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>seedName&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SeedName is the name of the seed cluster that runs the control plane of the Shoot.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>seedSelector&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SeedSelector">
SeedSelector
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SeedSelector is an optional selector which must match a seed’s labels for the shoot to be scheduled on that seed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>resources&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.NamedResourceReference">
[]NamedResourceReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Resources holds a list of named resource references that can be referred to in extension configs by their names.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>tolerations&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Toleration">
[]Toleration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Tolerations contains the tolerations for taints on seed clusters.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>exposureClassName&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ExposureClassName is the optional name of an exposure class to apply a control plane endpoint exposure strategy.
This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>systemComponents&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SystemComponents">
SystemComponents
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SystemComponents contains the settings of system components in the control or data plane of the Shoot cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>controlPlane&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ControlPlane">
ControlPlane
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ControlPlane contains general settings for the control plane of the shoot.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>schedulerName&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SchedulerName is the name of the responsible scheduler which schedules the shoot.
If not specified, the default scheduler takes over.
This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.SwapBehavior">SwapBehavior
(&lt;code>string&lt;/code> alias)&lt;/p>&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.MemorySwapConfiguration">MemorySwapConfiguration&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>SwapBehavior configures swap memory available to container workloads&lt;/p>
&lt;/p>
&lt;h3 id="core.gardener.cloud/v1beta1.SystemComponents">SystemComponents
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ShootSpec">ShootSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>SystemComponents contains the settings of system components in the control or data plane of the Shoot cluster.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>coreDNS&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.CoreDNS">
CoreDNS
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>CoreDNS contains the settings of the Core DNS components running in the data plane of the Shoot cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>nodeLocalDNS&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.NodeLocalDNS">
NodeLocalDNS
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>NodeLocalDNS contains the settings of the node local DNS components running in the data plane of the Shoot cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.Toleration">Toleration
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ExposureClassScheduling">ExposureClassScheduling&lt;/a>,
&lt;a href="#core.gardener.cloud/v1beta1.ProjectTolerations">ProjectTolerations&lt;/a>,
&lt;a href="#core.gardener.cloud/v1beta1.ShootSpec">ShootSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>Toleration is a toleration for a seed taint.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>key&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Key is the toleration key to be applied to a project or shoot.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>value&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Value is the toleration value corresponding to the toleration key.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.VersionClassification">VersionClassification
(&lt;code>string&lt;/code> alias)&lt;/p>&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.ExpirableVersion">ExpirableVersion&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>VersionClassification is the logical state of a version.&lt;/p>
&lt;/p>
&lt;h3 id="core.gardener.cloud/v1beta1.VerticalPodAutoscaler">VerticalPodAutoscaler
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Kubernetes">Kubernetes&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>VerticalPodAutoscaler contains the configuration flags for the Kubernetes vertical pod autoscaler.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>enabled&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Enabled specifies whether the Kubernetes VPA shall be enabled for the shoot cluster.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>evictAfterOOMThreshold&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#Duration">
Kubernetes meta/v1.Duration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>EvictAfterOOMThreshold defines the threshold that will lead to pod eviction in case it OOMed in less than the given
threshold since its start and if it has only one container (default: 10m0s).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>evictionRateBurst&lt;/code>&lt;/br>
&lt;em>
int32
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>EvictionRateBurst defines the burst of pods that can be evicted (default: 1)&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>evictionRateLimit&lt;/code>&lt;/br>
&lt;em>
float64
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>EvictionRateLimit defines the number of pods that can be evicted per second. A rate limit set to 0 or -1 will
disable the rate limiter (default: -1).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>evictionTolerance&lt;/code>&lt;/br>
&lt;em>
float64
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>EvictionTolerance defines the fraction of replica count that can be evicted for update in case more than one
pod can be evicted (default: 0.5).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>recommendationMarginFraction&lt;/code>&lt;/br>
&lt;em>
float64
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>RecommendationMarginFraction is the fraction of usage added as the safety margin to the recommended request
(default: 0.15).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>updaterInterval&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#Duration">
Kubernetes meta/v1.Duration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>UpdaterInterval is the interval how often the updater should run (default: 1m0s).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>recommenderInterval&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#Duration">
Kubernetes meta/v1.Duration
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>RecommenderInterval is the interval how often metrics should be fetched (default: 1m0s).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.Volume">Volume
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Worker">Worker&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>Volume contains information about the volume type, size, and encryption.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Name of the volume to make it referencable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>type&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Type is the type of the volume.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>size&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>VolumeSize is the size of the volume.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>encrypted&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Encrypted determines if the volume should be encrypted.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.VolumeType">VolumeType
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.CloudProfileSpec">CloudProfileSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>VolumeType contains certain properties of a volume type.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>class&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Class is the class of the volume type.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Name is the name of the volume type.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>usable&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Usable defines if the volume type can be used for shoot clusters.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>minSize&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/api/resource#Quantity">
k8s.io/apimachinery/pkg/api/resource.Quantity
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>MinSize is the minimal supported storage size.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.WatchCacheSizes">WatchCacheSizes
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.KubeAPIServerConfig">KubeAPIServerConfig&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>WatchCacheSizes contains configuration of the API server’s watch cache sizes.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>default&lt;/code>&lt;/br>
&lt;em>
int32
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Default configures the default watch cache size of the kube-apiserver
(flag &lt;code>--default-watch-cache-size&lt;/code>, defaults to 100).
See: &lt;a href="https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/">https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/&lt;/a>&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>resources&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.ResourceWatchCacheSize">
[]ResourceWatchCacheSize
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Resources configures the watch cache size of the kube-apiserver per resource
(flag &lt;code>--watch-cache-sizes&lt;/code>).
See: &lt;a href="https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/">https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/&lt;/a>&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.Worker">Worker
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Provider">Provider&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>Worker is the base definition of a worker group.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>annotations&lt;/code>&lt;/br>
&lt;em>
map[string]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Annotations is a map of key/value pairs for annotations for all the &lt;code>Node&lt;/code> objects in this worker pool.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>caBundle&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>CABundle is a certificate bundle which will be installed onto every machine of this worker pool.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>cri&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.CRI">
CRI
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>CRI contains configurations of CRI support of every machine in the worker pool.
Defaults to a CRI with name &lt;code>containerd&lt;/code>.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kubernetes&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.WorkerKubernetes">
WorkerKubernetes
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Kubernetes contains configuration for Kubernetes components related to this worker pool.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>labels&lt;/code>&lt;/br>
&lt;em>
map[string]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Labels is a map of key/value pairs for labels for all the &lt;code>Node&lt;/code> objects in this worker pool.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Name is the name of the worker group.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>machine&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Machine">
Machine
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Machine contains information about the machine type and image.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>maximum&lt;/code>&lt;/br>
&lt;em>
int32
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Maximum is the maximum number of machines to create.
This value is divided by the number of configured zones for a fair distribution.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>minimum&lt;/code>&lt;/br>
&lt;em>
int32
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Minimum is the minimum number of machines to create.
This value is divided by the number of configured zones for a fair distribution.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>maxSurge&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/util/intstr#IntOrString">
k8s.io/apimachinery/pkg/util/intstr.IntOrString
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>MaxSurge is maximum number of machines that are created during an update.
This value is divided by the number of configured zones for a fair distribution.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>maxUnavailable&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/util/intstr#IntOrString">
k8s.io/apimachinery/pkg/util/intstr.IntOrString
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>MaxUnavailable is the maximum number of machines that can be unavailable during an update.
This value is divided by the number of configured zones for a fair distribution.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>providerConfig&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ProviderConfig is the provider-specific configuration for this worker pool.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>taints&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#taint-v1-core">
[]Kubernetes core/v1.Taint
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Taints is a list of taints for all the &lt;code>Node&lt;/code> objects in this worker pool.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>volume&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.Volume">
Volume
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Volume contains information about the volume type and size.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>dataVolumes&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.DataVolume">
[]DataVolume
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>DataVolumes contains a list of additional worker volumes.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kubeletDataVolumeName&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>KubeletDataVolumeName contains the name of a dataVolume that should be used for storing kubelet state.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>zones&lt;/code>&lt;/br>
&lt;em>
[]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Zones is a list of availability zones that are used to evenly distribute this worker pool. Optional
as not every provider may support availability zones.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>systemComponents&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.WorkerSystemComponents">
WorkerSystemComponents
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SystemComponents contains configuration for system components related to this worker pool&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>machineControllerManager&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.MachineControllerManagerSettings">
MachineControllerManagerSettings
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>MachineControllerManagerSettings contains configurations for different worker-pools. Eg. MachineDrainTimeout, MachineHealthTimeout.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>sysctls&lt;/code>&lt;/br>
&lt;em>
map[string]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Sysctls is a map of kernel settings to apply on all machines in this worker pool.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.WorkerKubernetes">WorkerKubernetes
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Worker">Worker&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>WorkerKubernetes contains configuration for Kubernetes components related to this worker pool.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>kubelet&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.KubeletConfig">
KubeletConfig
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Kubelet contains configuration settings for all kubelets of this worker pool.
If set, all &lt;code>spec.kubernetes.kubelet&lt;/code> settings will be overwritten for this worker pool (no merge of settings).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>version&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Version is the semantic Kubernetes version to use for the Kubelet in this Worker Group.
If not specified the kubelet version is derived from the global shoot cluster kubernetes version.
version must be equal or lower than the version of the shoot kubernetes version.
Only one minor version difference to other worker groups and global kubernetes version is allowed.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.WorkerSystemComponents">WorkerSystemComponents
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Worker">Worker&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>WorkerSystemComponents contains configuration for system components related to this worker pool&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>allow&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Allow determines whether the pool should be allowed to host system components or not (defaults to true)&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="core.gardener.cloud/v1beta1.WorkersSettings">WorkersSettings
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#core.gardener.cloud/v1beta1.Provider">Provider&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>WorkersSettings contains settings for all workers.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>sshAccess&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#core.gardener.cloud/v1beta1.SSHAccess">
SSHAccess
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SSHAccess contains settings regarding ssh access to the worker nodes.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr/>
&lt;p>&lt;em>
Generated with &lt;a href="https://github.com/ahmetb/gen-crd-api-reference-docs">gen-crd-api-reference-docs&lt;/a>
&lt;/em>&lt;/p></description></item><item><title>Docs: CSI Components</title><link>https://gardener.cloud/docs/gardener/csi_components/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/csi_components/</guid><description>
&lt;h1 id="custom-csi-components">(Custom) CSI Components&lt;/h1>
&lt;p>Some provider extensions for Gardener are using CSI components to manage persistent volumes in the shoot clusters.
Additionally, most of the provider extensions are deploying controllers for taking volume snapshots (CSI snapshotter).&lt;/p>
&lt;p>End-users can deploy their own CSI components and controllers into shoot clusters.
In such situations, there are multiple controllers acting on the &lt;code>VolumeSnapshot&lt;/code> custom resources (each responsible for those instances associated with their respective driver provisioner types).&lt;/p>
&lt;p>However, this might lead to operational conflicts that cannot be overcome by Gardener alone.
Concretely, Gardener cannot know which custom CSI components were installed by end-users which can lead to issues, especially during shoot cluster deletion.
You can add a label to your custom CSI components indicating that Gardener should not try to remove them during shoot cluster deletion. This means you have to take care of the lifecycle for these components yourself!&lt;/p>
&lt;h2 id="recommendations">Recommendations&lt;/h2>
&lt;p>Custom CSI components are typically regular &lt;code>Deployment&lt;/code>s running in the shoot clusters.&lt;/p>
&lt;p>&lt;strong>Please label them with the &lt;code>shoot.gardener.cloud/no-cleanup=true&lt;/code> label.&lt;/strong>&lt;/p>
&lt;h2 id="background-information">Background Information&lt;/h2>
&lt;p>When a shoot cluster is deleted, Gardener deletes most Kubernetes resources (&lt;code>Deployment&lt;/code>s, &lt;code>DaemonSet&lt;/code>s, &lt;code>StatefulSet&lt;/code>s, etc.). Gardener will also try to delete CSI components if they are not marked with the above mentioned label.&lt;/p>
&lt;p>This can result in &lt;code>VolumeSnapshot&lt;/code> resources still having finalizers that will never be cleaned up.
Consequently, manual intervention is required to clean them up before the cluster deletion can continue.&lt;/p></description></item><item><title>Docs: Custom containerd Configuration</title><link>https://gardener.cloud/docs/gardener/custom-containerd-config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/custom-containerd-config/</guid><description>
&lt;h1 id="custom-containerd-configuration">Custom &lt;code>containerd&lt;/code> Configuration&lt;/h1>
&lt;p>In case a &lt;code>Shoot&lt;/code> cluster uses &lt;code>containerd&lt;/code> (see &lt;a href="https://github.com/gardener/gardener/blob/master/docs/usage/docker-shim-removal.md">Kubernetes dockershim Removal&lt;/a>) for more information), it is possible to make the &lt;code>containerd&lt;/code> process load custom configuration files.
Gardener initializes &lt;code>containerd&lt;/code> with the following statement:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>imports = [&lt;span style="color:#a31515">&amp;#34;/etc/containerd/conf.d/*.toml&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This means that all &lt;code>*.toml&lt;/code> files in the &lt;code>/etc/containerd/conf.d&lt;/code> directory will be imported and merged with the default configuration.
To prevent unintended configuration overwrites, please be aware that containerd merges config sections, not individual keys (see &lt;a href="https://github.com/containerd/containerd/issues/5837#issuecomment-894840240">here&lt;/a> and &lt;a href="https://github.com/gardener/gardener/pull/7316">here&lt;/a>).
Please consult the &lt;a href="https://github.com/containerd/containerd/blob/main/docs/man/containerd-config.toml.5.md#format">upstream &lt;code>containerd&lt;/code> documentation&lt;/a> for more information.&lt;/p>
&lt;blockquote>
&lt;p>⚠️ Note that this only applies to nodes which were newly created after &lt;code>gardener/gardener@v1.51&lt;/code> was deployed. Existing nodes are not affected.&lt;/p>
&lt;/blockquote></description></item><item><title>Docs: Custom DNS Configuration</title><link>https://gardener.cloud/docs/gardener/custom-dns-config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/custom-dns-config/</guid><description>
&lt;h1 id="custom-dns-configuration">Custom DNS Configuration&lt;/h1>
&lt;p>Gardener provides Kubernetes-Clusters-As-A-Service where all the system components (e.g., kube-proxy, networking, dns) are managed.
As a result, Gardener needs to ensure and auto-correct additional configuration to those system components to avoid unnecessary down-time.&lt;/p>
&lt;p>In some cases, auto-correcting system components can prevent users from deploying applications on top of the cluster that requires bits of customization, DNS configuration can be a good example.&lt;/p>
&lt;p>To allow for customizations for DNS configuration (that could potentially lead to downtime) while having the option to &amp;ldquo;undo&amp;rdquo;, we utilize the &lt;code>import&lt;/code> plugin from CoreDNS [1].
which enables in-line configuration changes.&lt;/p>
&lt;h2 id="how-to-use">How to use&lt;/h2>
&lt;p>To customize your CoreDNS cluster config, you can simply edit a &lt;code>ConfigMap&lt;/code> named &lt;code>coredns-custom&lt;/code> in the &lt;code>kube-system&lt;/code> namespace.
By editing, this &lt;code>ConfigMap&lt;/code>, you are modifying CoreDNS configuration, therefore care is advised.&lt;/p>
&lt;p>For example, to apply new config to CoreDNS that would point all &lt;code>.global&lt;/code> DNS requests to another DNS pod, simply edit the configuration as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: ConfigMap
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: coredns-custom
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: kube-system
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>data:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> istio.server: |&lt;span style="color:#a31515">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> global:8053 {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> errors
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> cache 30
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> forward . 1.2.3.4
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> }&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> corefile.override: |&lt;span style="color:#a31515">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> # &amp;lt;some-plugin&amp;gt; &amp;lt;some-plugin-config&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> debug
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> whoami&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The port number 8053 in &lt;code>global:8053&lt;/code> is the specific port that CoreDNS is bound to and cannot be changed to any other port if it should act on ordinary name resolution requests from pods. Otherwise, CoreDNS will open a second port, but you are responsible to direct the traffic to this port. &lt;code>kube-dns&lt;/code> service in &lt;code>kube-system&lt;/code> namespace will direct name resolution requests within the cluster to port 8053 on the CoreDNS pods.
Moreover, additional network policies are needed to allow corresponding ingress traffic to CoreDNS pods.
In order for the destination DNS server to be reachable, it must listen on port 53 as it is required by network policies. Other ports are only possible if additional network policies allow corresponding egress traffic from CoreDNS pods.&lt;/p>
&lt;p>It is important to have the &lt;code>ConfigMap&lt;/code> keys ending with &lt;code>*.server&lt;/code> (if you would like to add a new server) or &lt;code>*.override&lt;/code>
if you want to customize the current server configuration (it is optional setting both).&lt;/p>
&lt;h2 id="optional-reload-coredns">[Optional] Reload CoreDNS&lt;/h2>
&lt;p>As Gardener is configuring the &lt;code>reload&lt;/code> &lt;a href="https://coredns.io/plugins/reload/">plugin&lt;/a> of CoreDNS a restart of the CoreDNS components is typically not necessary to propagate &lt;code>ConfigMap&lt;/code> changes. However, if you don&amp;rsquo;t want to wait for the default (30s) to kick in, you can roll-out your CoreDNS deployment using:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl -n kube-system rollout restart deploy coredns
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will reload the config into CoreDNS.&lt;/p>
&lt;p>The approach we follow here was inspired by AKS&amp;rsquo;s approach [2].&lt;/p>
&lt;h2 id="anti-pattern">Anti-Pattern&lt;/h2>
&lt;p>Applying a configuration that is in-compatible with the running version of CoreDNS is an anti-pattern (sometimes plugin configuration changes,
simply applying a configuration can break DNS).&lt;/p>
&lt;p>If incompatible changes are applied by mistake, simply delete the content of the &lt;code>ConfigMap&lt;/code> and re-apply.
This should bring the cluster DNS back to functioning state.&lt;/p>
&lt;h2 id="node-local-dns">Node Local DNS&lt;/h2>
&lt;p>Custom DNS configuration] may not work as expected in conjunction with &lt;code>NodeLocalDNS&lt;/code>.
With &lt;code>NodeLocalDNS&lt;/code>, ordinary DNS queries targeted at the upstream DNS servers, i.e. non-kubernetes domains,
will not end up at CoreDNS, but will instead be directly sent to the upstream DNS server. Therefore, configuration
applying to non-kubernetes entities, e.g. the &lt;code>istio.server&lt;/code> block in the
&lt;a href="https://gardener.cloud/docs/gardener/custom-dns-config/">custom DNS configuration&lt;/a> example, may not have any effect with &lt;code>NodeLocalDNS&lt;/code> enabled.
If this kind of custom configuration is required, forwarding to upstream DNS has to be disabled.
This can be done by setting the option (&lt;code>spec.systemComponents.nodeLocalDNS.disableForwardToUpstreamDNS&lt;/code>) in the &lt;code>Shoot&lt;/code> resource to &lt;code>true&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> systemComponents:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nodeLocalDNS:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> enabled: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> disableForwardToUpstreamDNS: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="references">References&lt;/h2>
&lt;p>[1] &lt;a href="https://github.com/coredns/coredns/tree/master/plugin/import">Import plugin&lt;/a>
[2] &lt;a href="https://docs.microsoft.com/en-us/azure/aks/coredns-custom">AKS Custom DNS&lt;/a>&lt;/p></description></item><item><title>Docs: Default Seccomp Profile</title><link>https://gardener.cloud/docs/gardener/default_seccomp_profile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/default_seccomp_profile/</guid><description>
&lt;h1 id="default-seccomp-profile-and-configuration">Default Seccomp Profile and Configuration&lt;/h1>
&lt;p>This is a short guide describing how to enable the defaulting of seccomp profiles for Gardener managed workloads in the seed.&lt;/p>
&lt;h2 id="default-kubernetes-behavior">Default Kubernetes Behavior&lt;/h2>
&lt;p>The state of Kubernetes in versions &amp;lt; 1.25 is such that all workloads by default run in &lt;code>Unconfined&lt;/code> (seccomp disabled) mode. This is undesirable since this is the least restrictive profile. Also, mind that any privileged container will always run as &lt;code>Unconfined&lt;/code>. More information about seccomp can be found in this &lt;a href="https://kubernetes.io/docs/tutorials/security/seccomp/">Kubernetes tutorial&lt;/a>.&lt;/p>
&lt;h2 id="setting-the-seccomp-profile-to-runtimedefault-for-seed-clusters">Setting the Seccomp Profile to RuntimeDefault for Seed Clusters&lt;/h2>
&lt;p>To address the above issue, Gardener provides a webhook that is capable of mutating pods in the seed clusters, explicitly providing them with a seccomp profile type of &lt;code>RuntimeDefault&lt;/code>. This profile is defined by the container runtime and represents a set of default syscalls that are allowed or not.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> securityContext:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> seccompProfile:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: RuntimeDefault
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>A &lt;code>Pod&lt;/code> is mutated when all of the following preconditions are fulfilled:&lt;/p>
&lt;ol>
&lt;li>The &lt;code>Pod&lt;/code> is created in a Gardener managed namespace.&lt;/li>
&lt;li>The &lt;code>Pod&lt;/code> is NOT labeled with &lt;code>seccompprofile.resources.gardener.cloud/skip&lt;/code>.&lt;/li>
&lt;li>The &lt;code>Pod&lt;/code> does NOT explicitly specify &lt;code>.spec.securityContext.seccompProfile.type&lt;/code>.&lt;/li>
&lt;/ol>
&lt;h3 id="how-to-configure">How to Configure&lt;/h3>
&lt;p>To enable this feature, the gardenlet &lt;code>DefaultSeccompProfile&lt;/code> feature gate must be set to &lt;code>true&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>featureGates:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DefaultSeccompProfile: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Please refer to the examples in this &lt;a href="https://github.com/gardener/gardener/blob/master/example/20-componentconfig-gardenlet.yaml">yaml file&lt;/a> for more information.&lt;/p>
&lt;p>Once the feature gate is enabled, the webhook will be registered and configured for the seed cluster. Newly created pods will be mutated to have their seccomp profile set to &lt;code>RuntimeDefault&lt;/code>.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Note:&lt;/strong> Please note that this feature is still in Alpha, so you might see instabilities every now and then.&lt;/p>
&lt;/blockquote>
&lt;h2 id="setting-the-seccomp-profile-to-runtimedefault-for-shoot-clusters">Setting the Seccomp Profile to RuntimeDefault for Shoot Clusters&lt;/h2>
&lt;p>For Kubernetes shoot versions &amp;gt;= 1.25, you can enable the use of &lt;code>RuntimeDefault&lt;/code> as the default seccomp profile for all workloads. If enabled, the kubelet will use the &lt;code>RuntimeDefault&lt;/code> seccomp profile by default, which is defined by the container runtime, instead of using the &lt;code>Unconfined&lt;/code> mode. More information for this feature can be found in the &lt;a href="https://kubernetes.io/docs/tutorials/security/seccomp/#enable-the-use-of-runtimedefault-as-the-default-seccomp-profile-for-all-workloads">Kubernetes documentation&lt;/a>.&lt;/p>
&lt;p>To use seccomp profile defaulting, you must run the kubelet with the &lt;code>SeccompDefault&lt;/code> feature gate enabled (this is the default for k8s versions &amp;gt;= 1.25).&lt;/p>
&lt;h3 id="how-to-configure-1">How to Configure&lt;/h3>
&lt;p>To enable this feature, the kubelet &lt;code>seccompDefault&lt;/code> configuration parameter must be set to &lt;code>true&lt;/code> in the shoot&amp;rsquo;s spec.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubernetes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> version: 1.25.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubelet:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> seccompDefault: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Please refer to the examples in this &lt;a href="https://github.com/gardener/gardener/blob/master/example/90-shoot.yaml">yaml file&lt;/a> for more information.&lt;/p></description></item><item><title>Docs: Dependencies</title><link>https://gardener.cloud/docs/gardener/dependencies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/dependencies/</guid><description>
&lt;h1 id="dependency-management">Dependency Management&lt;/h1>
&lt;p>We are using &lt;a href="https://github.com/golang/go/wiki/Modules">go modules&lt;/a> for depedency management.
In order to add a new package dependency to the project, you can perform &lt;code>go get &amp;lt;PACKAGE&amp;gt;@&amp;lt;VERSION&amp;gt;&lt;/code> or edit the &lt;code>go.mod&lt;/code> file and append the package along with the version you want to use.&lt;/p>
&lt;h2 id="updating-dependencies">Updating Dependencies&lt;/h2>
&lt;p>The &lt;code>Makefile&lt;/code> contains a rule called &lt;code>revendor&lt;/code> which performs &lt;code>go mod tidy&lt;/code> and &lt;code>go mod vendor&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>go mod tidy&lt;/code> makes sure &lt;code>go.mod&lt;/code> matches the source code in the module. It adds any missing modules necessary to build the current module&amp;rsquo;s packages and dependencies, and it removes unused modules that don&amp;rsquo;t provide any relevant packages.&lt;/li>
&lt;li>&lt;code>go mod vendor&lt;/code> resets the main module&amp;rsquo;s vendor directory to include all packages needed to build and test all the main module&amp;rsquo;s packages. It does not include test code for vendored packages.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>make revendor
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The dependencies are installed into the &lt;code>vendor&lt;/code> folder, which &lt;strong>should be added&lt;/strong> to the VCS.&lt;/p>
&lt;p>⚠️ Make sure that you test the code after you have updated the dependencies!&lt;/p>
&lt;h2 id="exported-packages">Exported Packages&lt;/h2>
&lt;p>This repository contains several packages that could be considered &amp;ldquo;exported packages&amp;rdquo;, in a sense that they are supposed to be reused in other Go projects.
For example:&lt;/p>
&lt;ul>
&lt;li>Gardener&amp;rsquo;s API packages: &lt;code>pkg/apis&lt;/code>&lt;/li>
&lt;li>Library for building Gardener extensions: &lt;code>extensions&lt;/code>&lt;/li>
&lt;li>Gardener&amp;rsquo;s Test Framework: &lt;code>test/framework&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>There are a few more folders in this repository (non-Go sources) that are reused across projects in the Gardener organization:&lt;/p>
&lt;ul>
&lt;li>GitHub templates: &lt;code>.github&lt;/code>&lt;/li>
&lt;li>Concourse / cc-utils related helpers: &lt;code>hack/.ci&lt;/code>&lt;/li>
&lt;li>Development, build and testing helpers: &lt;code>hack&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>These packages feature a dummy &lt;code>doc.go&lt;/code> file to allow other Go projects to pull them in as go mod dependencies.&lt;/p>
&lt;p>These packages are explicitly &lt;em>not&lt;/em> supposed to be used in other projects (consider them as &amp;ldquo;non-exported&amp;rdquo;):&lt;/p>
&lt;ul>
&lt;li>API validation packages: &lt;code>pkg/apis/*/*/validation&lt;/code>&lt;/li>
&lt;li>Operation package (main Gardener business logic regarding &lt;code>Seed&lt;/code> and &lt;code>Shoot&lt;/code> clusters): &lt;code>pkg/operation&lt;/code>&lt;/li>
&lt;li>Third party code: &lt;code>third_party&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Currently, we don&amp;rsquo;t have a mechanism yet for selectively syncing out these exported packages into dedicated repositories like kube&amp;rsquo;s &lt;a href="https://github.com/kubernetes/kubernetes/tree/master/staging">staging mechanism&lt;/a> (&lt;a href="https://github.com/kubernetes/publishing-bot">publishing-bot&lt;/a>).&lt;/p>
&lt;h2 id="import-restrictions">Import Restrictions&lt;/h2>
&lt;p>We want to make sure that other projects can depend on this repository&amp;rsquo;s &amp;ldquo;exported&amp;rdquo; packages without pulling in the entire repository (including &amp;ldquo;non-exported&amp;rdquo; packages) or a high number of other unwanted dependencies.
Hence, we have to be careful when adding new imports or references between our packages.&lt;/p>
&lt;blockquote>
&lt;p>ℹ️ General rule of thumb: the mentioned &amp;ldquo;exported&amp;rdquo; packages should be as self-contained as possible and depend on as few other packages in the repository and other projects as possible.&lt;/p>
&lt;/blockquote>
&lt;p>In order to support that rule and automatically check compliance with that goal, we leverage &lt;a href="https://github.com/kubernetes/code-generator/tree/master/cmd/import-boss">import-boss&lt;/a>.
The tool checks all imports of the given packages (including transitive imports) against rules defined in &lt;code>.import-restrictions&lt;/code> files in each directory.
An import is allowed if it matches at least one allowed prefix and does not match any forbidden prefixes.&lt;/p>
&lt;blockquote>
&lt;p>Note: &lt;code>''&lt;/code> (the empty string) is a prefix of everything.
For more details, see the &lt;a href="https://github.com/kubernetes/code-generator/tree/master/cmd/import-boss/README.md">import-boss&lt;/a> topic.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>import-boss&lt;/code> is executed on every pull request and blocks the PR if it doesn&amp;rsquo;t comply with the defined import restrictions.
You can also run it locally using &lt;code>make check&lt;/code>.&lt;/p>
&lt;p>Import restrictions should be changed in the following situations:&lt;/p>
&lt;ul>
&lt;li>We spot a new pattern of imports across our packages that was not restricted before but makes it more difficult for other projects to depend on our &amp;ldquo;exported&amp;rdquo; packages.
In that case, the imports should be further restricted to disallow such problematic imports, and the code/package structure should be reworked to comply with the newly given restrictions.&lt;/li>
&lt;li>We want to share code between packages, but existing import restrictions prevent us from doing so.
In that case, please consider what additional dependencies it will pull in, when loosening existing restrictions.
Also consider possible alternatives, like code restructurings or extracting shared code into dedicated packages for minimal impact on dependent projects.&lt;/li>
&lt;/ul></description></item><item><title>Docs: Deploy Gardenlet</title><link>https://gardener.cloud/docs/gardener/deployment/deploy_gardenlet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/deployment/deploy_gardenlet/</guid><description>
&lt;h1 id="deploying-gardenlets">Deploying Gardenlets&lt;/h1>
&lt;p>Gardenlets act as decentral &amp;ldquo;agents&amp;rdquo; to manage the shoot clusters of a seed cluster.&lt;/p>
&lt;p>To support scaleability in an automated way, gardenlets are deployed automatically. However, you can still deploy gardenlets manually to be more flexible, for example, when the shoot clusters that need to be managed by Gardener are behind a firewall. The gardenlet only requires network connectivity from the gardenlet to the Garden cluster (not the other way round), so it can be used to register Kubernetes clusters with no public endpoint.&lt;/p>
&lt;h2 id="procedure">Procedure&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>First, an initial gardenlet needs to be deployed:&lt;/p>
&lt;ul>
&lt;li>Deploy it manually if you have special requirements. For more information, see &lt;a href="https://gardener.cloud/docs/gardener/deployment/deploy_gardenlet_manually/">Deploy a Gardenlet Manually&lt;/a>.&lt;/li>
&lt;li>Let the Gardener installer deploy it automatically otherwise. For more information, see &lt;a href="https://gardener.cloud/docs/gardener/deployment/deploy_gardenlet_automatically/">Automatic Deployment of Gardenlets&lt;/a>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>To add additional seed clusters, it is recommended to use regular shoot clusters. You can do this by creating a &lt;code>ManagedSeed&lt;/code> resource with a &lt;code>gardenlet&lt;/code> section as described in &lt;a href="https://gardener.cloud/docs/gardener/managed_seed/">Register Shoot as Seed&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Docs: Deploy Gardenlet Automatically</title><link>https://gardener.cloud/docs/gardener/deployment/deploy_gardenlet_automatically/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/deployment/deploy_gardenlet_automatically/</guid><description>
&lt;h1 id="automatic-deployment-of-gardenlets">Automatic Deployment of gardenlets&lt;/h1>
&lt;p>The gardenlet can automatically deploy itself into shoot clusters, and register a cluster as a seed cluster.
These clusters are called &amp;ldquo;managed seeds&amp;rdquo; (aka &amp;ldquo;shooted seeds&amp;rdquo;).
This procedure is the preferred way to add additional seed clusters, because shoot clusters already come with production-grade qualities that are also demanded for seed clusters.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>The only prerequisite is to register an initial cluster as a seed cluster that already has a gardenlet deployed in one of the following ways:&lt;/p>
&lt;ul>
&lt;li>The gardenlet was deployed as part of a Gardener installation using a setup tool (for example, &lt;code>gardener/garden-setup&lt;/code>).&lt;/li>
&lt;li>The gardenlet was deployed manually (for a step-by-step manual installation guide, see &lt;a href="https://gardener.cloud/docs/gardener/deployment/deploy_gardenlet_manually/">Deploy a Gardenlet Manually&lt;/a>).&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>The initial cluster can be the garden cluster itself.&lt;/p>
&lt;/blockquote>
&lt;h2 id="self-deployment-of-gardenlets-in-additional-managed-seed-clusters">Self-Deployment of gardenlets in Additional Managed Seed Clusters&lt;/h2>
&lt;p>For a better scalability, you usually need more seed clusters that you can create, as follows:&lt;/p>
&lt;ol>
&lt;li>Use the initial cluster as the seed cluster for other managed seed clusters. It hosts the control planes of the other seed clusters.&lt;/li>
&lt;li>The gardenlet deployed in the initial cluster deploys itself automatically into the managed seed clusters.&lt;/li>
&lt;/ol>
&lt;p>The advantage of this approach is that there’s only one initial gardenlet installation required. Every other managed seed cluster has a gardenlet deployed automatically.&lt;/p>
&lt;h2 id="related-links">Related Links&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/gardener/managed_seed/">Register Shoot as Seed&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://github.com/gardener/garden-setup">garden-setup&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docs: Deploy Gardenlet Manually</title><link>https://gardener.cloud/docs/gardener/deployment/deploy_gardenlet_manually/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/deployment/deploy_gardenlet_manually/</guid><description>
&lt;h1 id="deploy-a-gardenlet-manually">Deploy a gardenlet Manually&lt;/h1>
&lt;p>Manually deploying a gardenlet is required in the following cases:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>The Kubernetes cluster to be registered as a seed cluster has no public endpoint,
because it is behind a firewall.
The gardenlet must then be deployed into the cluster itself.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The Kubernetes cluster to be registered as a seed cluster is managed externally
(the Kubernetes cluster is not a shoot cluster, so &lt;a href="https://gardener.cloud/docs/gardener/deployment/deploy_gardenlet_automatically/">Automatic Deployment of Gardenlets&lt;/a> cannot be used).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The gardenlet runs outside of the Kubernetes cluster
that should be registered as a seed cluster.
(The gardenlet is not restricted to run in the seed cluster or
to be deployed into a Kubernetes cluster at all).&lt;/p>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Once you’ve deployed a gardenlet manually, for example, behind a firewall, you can deploy new gardenlets automatically. The manually deployed gardenlet is then used as a template for the new gardenlets. For more information, see &lt;a href="https://gardener.cloud/docs/gardener/deployment/deploy_gardenlet_automatically/">Automatic Deployment of Gardenlets&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;h3 id="kubernetes-cluster-that-should-be-registered-as-a-seed-cluster">Kubernetes Cluster that Should Be Registered as a Seed Cluster&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Verify that the cluster has a &lt;a href="https://gardener.cloud/docs/gardener/supported_k8s_versions/">supported Kubernetes version&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Determine the nodes, pods, and services CIDR of the cluster.
You need to configure this information in the &lt;code>Seed&lt;/code> configuration.
Gardener uses this information to check that the shoot cluster isn’t created with overlapping CIDR ranges.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Every seed cluster needs an Ingress controller which distributes external requests to internal components like Plutono and Prometheus.
For this, configure the following lines in your &lt;a href="https://github.com/gardener/gardener/blob/master/example/50-seed.yaml">Seed resource&lt;/a>:&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dns:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> provider:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: aws-route53
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> secretRef:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: ingress-secret
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ingress:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> domain: ingress.my-seed.example.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> controller:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> providerConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;some-optional-provider-specific-config-for-the-ingressController&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="kubeconfig-for-the-seed-cluster">&lt;code>kubeconfig&lt;/code> for the Seed Cluster&lt;/h3>
&lt;p>The &lt;code>kubeconfig&lt;/code> is required to deploy the gardenlet Helm chart to the seed cluster.
The gardenlet requires certain privileges to be able to operate.
These privileges are described in RBAC resources in the gardenlet Helm chart (see &lt;a href="https://github.com/gardener/gardener/tree/master/charts/gardener/gardenlet/templates">charts/gardener/gardenlet/templates&lt;/a>).
The Helm chart contains a service account &lt;code>gardenlet&lt;/code>
that the gardenlet deployment uses by default to talk to the Seed API server.&lt;/p>
&lt;blockquote>
&lt;p>If the gardenlet isn’t deployed in the seed cluster,
the gardenlet can be configured to use a &lt;code>kubeconfig&lt;/code>,
which also requires the above-mentioned privileges, from a mounted directory.
The &lt;code>kubeconfig&lt;/code> is specified in the &lt;code>seedClientConnection.kubeconfig&lt;/code> section
of the &lt;a href="https://github.com/gardener/gardener/blob/master/example/20-componentconfig-gardenlet.yaml">Gardenlet configuration&lt;/a>.
This configuration option isn’t used in the following,
as this procedure only describes the recommended setup option
where the gardenlet is running in the seed cluster itself.&lt;/p>
&lt;/blockquote>
&lt;h2 id="procedure-overview">Procedure Overview&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Prepare the garden cluster:&lt;/p>
&lt;ol>
&lt;li>&lt;a href="#create-a-bootstrap-token-secret-in-the-kube-system-namespace-of-the-garden-cluster">Create a bootstrap token secret in the &lt;code>kube-system&lt;/code> namespace of the garden cluster&lt;/a>&lt;/li>
&lt;li>&lt;a href="#create-rbac-roles-for-the-gardenlet-to-allow-bootstrapping-in-the-garden-cluster">Create RBAC roles for the gardenlet to allow bootstrapping in the garden cluster&lt;/a>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="#prepare-the-gardenlet-helm-chart">Prepare the gardenlet Helm chart&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="#automatically-register-shoot-cluster-as-a-seed-cluster">Automatically register shoot cluster as a seed cluster&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="#deploy-the-gardenlet">Deploy the gardenlet&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="#check-that-the-gardenlet-is-successfully-deployed">Check that the gardenlet is successfully deployed&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="create-a-bootstrap-token-secret-in-the-kube-system-namespace-of-the-garden-cluster">Create a Bootstrap Token Secret in the &lt;code>kube-system&lt;/code> Namespace of the Garden Cluster&lt;/h2>
&lt;p>The gardenlet needs to talk to the &lt;a href="https://gardener.cloud/docs/gardener/concepts/apiserver/">Gardener API server&lt;/a> residing in the garden cluster.&lt;/p>
&lt;p>The gardenlet can be configured with an already existing garden cluster &lt;code>kubeconfig&lt;/code> in one of the following ways:&lt;/p>
&lt;ul>
&lt;li>By specifying &lt;code>gardenClientConnection.kubeconfig&lt;/code>
in the &lt;a href="https://github.com/gardener/gardener/blob/master/example/20-componentconfig-gardenlet.yaml">Gardenlet configuration&lt;/a>.&lt;/li>
&lt;li>By supplying the environment variable &lt;code>GARDEN_KUBECONFIG&lt;/code> pointing to
a mounted &lt;code>kubeconfig&lt;/code> file).&lt;/li>
&lt;/ul>
&lt;p>The preferred way, however, is to use the gardenlet&amp;rsquo;s ability to request
a signed certificate for the garden cluster by leveraging
&lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests/">Kubernetes Certificate Signing Requests&lt;/a>.
The gardenlet performs a TLS bootstrapping process that is similar to the
&lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/kubelet-tls-bootstrapping/">Kubelet TLS Bootstrapping&lt;/a>.
Make sure that the API server of the garden cluster has
&lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/#enabling-bootstrap-token-authentication">bootstrap token authentication&lt;/a>
enabled.&lt;/p>
&lt;p>The client credentials required for the gardenlet&amp;rsquo;s TLS bootstrapping process
need to be either &lt;code>token&lt;/code> or &lt;code>certificate&lt;/code> (OIDC isn’t supported) and have permissions
to create a Certificate Signing Request (&lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests/">CSR&lt;/a>).
It’s recommended to use &lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/">bootstrap tokens&lt;/a>
due to their desirable security properties (such as a limited token lifetime).&lt;/p>
&lt;p>Therefore, first create a bootstrap token secret for the garden cluster:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Secret
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># Name MUST be of form &amp;#34;bootstrap-token-&amp;lt;token id&amp;gt;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: bootstrap-token-07401b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: kube-system
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># Type MUST be &amp;#39;bootstrap.kubernetes.io/token&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>type: bootstrap.kubernetes.io/token
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>stringData:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># Human readable description. Optional.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> description: &lt;span style="color:#a31515">&amp;#34;Token to be used by the gardenlet for Seed `sweet-seed`.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># Token ID and secret. Required.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> token-id: 07401b &lt;span style="color:#008000"># 6 characters&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> token-secret: f395accd246ae52d &lt;span style="color:#008000"># 16 characters&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># Expiration. Optional.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># expiration: 2017-03-10T03:22:11Z&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># Allowed usages.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> usage-bootstrap-authentication: &lt;span style="color:#a31515">&amp;#34;true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> usage-bootstrap-signing: &lt;span style="color:#a31515">&amp;#34;true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>When you later prepare the gardenlet Helm chart,
a &lt;code>kubeconfig&lt;/code> based on this token is shared with the gardenlet upon deployment.&lt;/p>
&lt;h2 id="create-rbac-roles-for-the-gardenlet-to-allow-bootstrapping-in-the-garden-cluster">Create RBAC Roles for the gardenlet to Allow Bootstrapping in the Garden Cluster&lt;/h2>
&lt;p>This step is only required if the gardenlet you deploy is the first gardenlet
in the Gardener installation.
Additionally, when using the &lt;a href="https://github.com/gardener/gardener/tree/master/charts/gardener/controlplane">control plane chart&lt;/a>,
the following resources are already contained in the Helm chart,
that is, if you use it you can skip these steps as the needed RBAC roles already exist.&lt;/p>
&lt;p>The gardenlet uses the configured bootstrap &lt;code>kubeconfig&lt;/code> in &lt;code>gardenClientConnection.bootstrapKubeconfig&lt;/code> to request a signed certificate for the user &lt;code>gardener.cloud:system:seed:&amp;lt;seed-name&amp;gt;&lt;/code> in the group &lt;code>gardener.cloud:system:seeds&lt;/code>.&lt;/p>
&lt;p>Create a &lt;code>ClusterRole&lt;/code> and &lt;code>ClusterRoleBinding&lt;/code> that grant full admin permissions to authenticated gardenlets.&lt;/p>
&lt;p>Create the following resources in the garden cluster:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: rbac.authorization.k8s.io/v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: ClusterRole
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: gardener.cloud:system:seeds
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rules:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - apiGroups:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#a31515">&amp;#39;*&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resources:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#a31515">&amp;#39;*&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> verbs:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#a31515">&amp;#39;*&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: rbac.authorization.k8s.io/v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: ClusterRoleBinding
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: gardener.cloud:system:seeds
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>roleRef:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiGroup: rbac.authorization.k8s.io
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: ClusterRole
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: gardener.cloud:system:seeds
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>subjects:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - kind: Group
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: gardener.cloud:system:seeds
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiGroup: rbac.authorization.k8s.io
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: rbac.authorization.k8s.io/v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: ClusterRole
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: gardener.cloud:system:seed-bootstrapper
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rules:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - apiGroups:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - certificates.k8s.io
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resources:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - certificatesigningrequests
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> verbs:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - create
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - get
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - apiGroups:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - certificates.k8s.io
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resources:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - certificatesigningrequests/seedclient
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> verbs:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - create
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># A kubelet/gardenlet authenticating using bootstrap tokens is authenticated as a user in the group system:bootstrappers&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># Allows the Gardenlet to create a CSR&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: rbac.authorization.k8s.io/v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: ClusterRoleBinding
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: gardener.cloud:system:seed-bootstrapper
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>roleRef:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiGroup: rbac.authorization.k8s.io
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: ClusterRole
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: gardener.cloud:system:seed-bootstrapper
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>subjects:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - kind: Group
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: system:bootstrappers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiGroup: rbac.authorization.k8s.io
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>ℹ️ After bootstrapping, the gardenlet has full administrative access to the garden cluster.
You might be interested to harden this and limit its permissions to only resources related to the seed cluster it is responsible for.
Please take a look at &lt;a href="https://gardener.cloud/docs/gardener/deployment/gardenlet_api_access/">Scoped API Access for Gardenlets&lt;/a>.&lt;/p>
&lt;h2 id="prepare-the-gardenlet-helm-chart">Prepare the gardenlet Helm Chart&lt;/h2>
&lt;p>This section only describes the minimal configuration,
using the global configuration values of the gardenlet Helm chart.
For an overview over all values, see the &lt;a href="https://github.com/gardener/gardener/blob/master/charts/gardener/gardenlet/values.yaml">configuration values&lt;/a>.
We refer to the global configuration values as &lt;em>gardenlet configuration&lt;/em> in the following procedure.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Create a gardenlet configuration &lt;code>gardenlet-values.yaml&lt;/code> based on &lt;a href="https://github.com/gardener/gardener/blob/master/charts/gardener/gardenlet/values.yaml">this template&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create a bootstrap &lt;code>kubeconfig&lt;/code> based on the bootstrap token created in the garden cluster.&lt;/p>
&lt;p>Replace the &lt;code>&amp;lt;bootstrap-token&amp;gt;&lt;/code> with &lt;code>token-id.token-secret&lt;/code> (from our previous example: &lt;code>07401b.f395accd246ae52d&lt;/code>) from the bootstrap token secret.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>current-context: gardenlet-bootstrap@default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>clusters:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- cluster:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> certificate-authority-data: &amp;lt;ca-of-garden-cluster&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server: https://&amp;lt;endpoint-of-garden-cluster&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>contexts:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- context:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cluster: default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user: gardenlet-bootstrap
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: gardenlet-bootstrap@default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>users:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- name: gardenlet-bootstrap
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> token: &amp;lt;bootstrap-token&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>In the &lt;code>gardenClientConnection.bootstrapKubeconfig&lt;/code> section of your gardenlet configuration, provide the bootstrap &lt;code>kubeconfig&lt;/code> together with a name and namespace to the gardenlet Helm chart.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>gardenClientConnection:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> bootstrapKubeconfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: gardenlet-kubeconfig-bootstrap
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubeconfig: |&lt;span style="color:#a31515">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> &lt;/span> &amp;lt;bootstrap-kubeconfig&amp;gt; &lt;span style="color:#008000"># will be base64 encoded by helm&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The bootstrap &lt;code>kubeconfig&lt;/code> is stored in the specified secret.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>In the &lt;code>gardenClientConnection.kubeconfigSecret&lt;/code> section of your gardenlet configuration,
define a name and a namespace where the gardenlet stores
the real &lt;code>kubeconfig&lt;/code> that it creates during the bootstrap process. If the secret doesn&amp;rsquo;t exist,
the gardenlet creates it for you.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>gardenClientConnection:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubeconfigSecret:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: gardenlet-kubeconfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: garden
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="updating-the-garden-cluster-ca">Updating the Garden Cluster CA&lt;/h3>
&lt;p>The kubeconfig created by the gardenlet in step 4 will not be recreated as long as it exists, even if a new bootstrap kubeconfig is provided. To enable rotation of the garden cluster CA certificate, a new bundle can be provided via the &lt;code>gardenClientConnection.gardenClusterCACert&lt;/code> field. If the provided bundle differs from the one currently in the gardenlet&amp;rsquo;s kubeconfig secret then it will be updated. To remove the CA completely (e.g. when switching to a publicly trusted endpoint), this field can be set to either &lt;code>none&lt;/code> or &lt;code>null&lt;/code>.&lt;/p>
&lt;h2 id="automatically-register-a-shoot-cluster-as-a-seed-cluster">Automatically Register a Shoot Cluster as a Seed Cluster&lt;/h2>
&lt;p>A seed cluster can either be registered by manually creating
the &lt;a href="https://github.com/gardener/gardener/blob/master/example/50-seed.yaml">&lt;code>Seed&lt;/code> resource&lt;/a>
or automatically by the gardenlet.
This functionality is useful for managed seed clusters,
as the gardenlet in the garden cluster deploys a copy of itself
into the cluster with automatic registration of the &lt;code>Seed&lt;/code> configured.
However, it can also be used to have a streamlined seed cluster registration process when manually deploying the gardenlet.&lt;/p>
&lt;blockquote>
&lt;p>This procedure doesn’t describe all the possible configurations
for the &lt;code>Seed&lt;/code> resource. For more information, see:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/gardener/gardener/blob/master/example/50-seed.yaml">Example Seed resource&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/gardener/seed_settings/">Configurable Seed settings&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h3 id="adjust-the-gardenlet-component-configuration">Adjust the gardenlet Component Configuration&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Supply the &lt;code>Seed&lt;/code> resource in the &lt;code>seedConfig&lt;/code> section of your gardenlet configuration &lt;code>gardenlet-values.yaml&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Add the &lt;code>seedConfig&lt;/code> to your gardenlet configuration &lt;code>gardenlet-values.yaml&lt;/code>.
The field &lt;code>seedConfig.spec.provider.type&lt;/code> specifies the infrastructure provider type (for example, &lt;code>aws&lt;/code>) of the seed cluster.
For all supported infrastructure providers, see &lt;a href="https://github.com/gardener/gardener/blob/master/extensions/README.md#known-extension-implementations">Known Extension Implementations&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>seedConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: sweet-seed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> labels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> environment: evaluation
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> annotations:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> custom.gardener.cloud/option: special
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dns:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> provider:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: &amp;lt;provider&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> secretRef:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: ingress-secret
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ingress: &lt;span style="color:#008000"># see prerequisites&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> domain: ingress.dev.my-seed.example.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> controller:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> networks: &lt;span style="color:#008000"># see prerequisites&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nodes: 10.240.0.0/16
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pods: 100.244.0.0/16
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> services: 100.32.0.0/13
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> shootDefaults: # optional: non-overlapping default CIDRs for shoot clusters of that Seed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pods: 100.96.0.0/11
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> services: 100.64.0.0/13
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> provider:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> region: eu-west-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: &amp;lt;provider&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;p>Apart from the seed&amp;rsquo;s name, &lt;code>seedConfig.metadata&lt;/code> can optionally contain &lt;code>labels&lt;/code> and &lt;code>annotations&lt;/code>.
gardenlet will set the labels of the registered &lt;code>Seed&lt;/code> object to the labels given in the &lt;code>seedConfig&lt;/code> plus &lt;code>gardener.cloud/role=seed&lt;/code>.
Any custom labels on the &lt;code>Seed&lt;/code> object will be removed on the next restart of gardenlet.
If a label is removed from the &lt;code>seedConfig&lt;/code> it is removed from the &lt;code>Seed&lt;/code> object as well.
In contrast to labels, annotations in the &lt;code>seedConfig&lt;/code> are added to existing annotations on the &lt;code>Seed&lt;/code> object.
Thus, custom annotations that are added to the &lt;code>Seed&lt;/code> object during runtime are not removed by gardenlet on restarts.
Furthermore, if an annotation is removed from the &lt;code>seedConfig&lt;/code>, gardenlet does &lt;strong>not&lt;/strong> remove it from the &lt;code>Seed&lt;/code> object.&lt;/p>
&lt;h3 id="optional-enable-ha-mode">Optional: Enable HA Mode&lt;/h3>
&lt;p>You may consider running &lt;code>gardenlet&lt;/code> with multiple replicas, especially if the seed cluster is configured to host &lt;a href="https://gardener.cloud/docs/gardener/shoot_high_availability/">HA shoot control planes&lt;/a>.
Therefore, the following Helm chart values define the degree of high availability you want to achieve for the &lt;code>gardenlet&lt;/code> deployment.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>replicaCount: 2 &lt;span style="color:#008000"># or more if a higher failure tolerance is required.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>failureToleranceType: zone &lt;span style="color:#008000"># One of `zone` or `node` - defines how replicas are spread.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="optional-enable-backup-and-restore">Optional: Enable Backup and Restore&lt;/h3>
&lt;p>The seed cluster can be set up with backup and restore
for the main &lt;code>etcds&lt;/code> of shoot clusters.&lt;/p>
&lt;p>Gardener uses &lt;a href="https://github.com/gardener/etcd-backup-restore">etcd-backup-restore&lt;/a>
that &lt;a href="https://github.com/gardener/etcd-backup-restore/blob/master/docs/deployment/getting_started.md">integrates with different storage providers&lt;/a>
to store the shoot cluster&amp;rsquo;s main &lt;code>etcd&lt;/code> backups.
Make sure to obtain client credentials that have sufficient permissions with the chosen storage provider.&lt;/p>
&lt;p>Create a secret in the garden cluster with client credentials for the storage provider.
The format of the secret is cloud provider specific and can be found
in the repository of the respective Gardener extension.
For example, the secret for AWS S3 can be found in the AWS provider extension
(&lt;a href="https://github.com/gardener/gardener-extension-provider-aws/blob/master/example/30-etcd-backup-secret.yaml">30-etcd-backup-secret.yaml&lt;/a>).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Secret
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: sweet-seed-backup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>type: Opaque
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>data:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># client credentials format is provider specific&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Configure the &lt;code>Seed&lt;/code> resource in the &lt;code>seedConfig&lt;/code> section of your gardenlet configuration to use backup and restore:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>seedConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: sweet-seed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> backup:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> provider: &amp;lt;provider&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> secretRef:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: sweet-seed-backup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: garden
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="deploy-the-gardenlet">Deploy the gardenlet&lt;/h2>
&lt;blockquote>
&lt;p>The gardenlet doesn’t have to run in the same Kubernetes cluster as the seed cluster
it’s registering and reconciling, but it is in most cases advantageous
to use in-cluster communication to talk to the Seed API server.
Running a gardenlet outside of the cluster is mostly used for local development.&lt;/p>
&lt;/blockquote>
&lt;p>The &lt;code>gardenlet-values.yaml&lt;/code> looks something like this
(with automatic Seed registration and backup for shoot clusters enabled):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># &amp;lt;default config&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>config:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> gardenClientConnection:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> bootstrapKubeconfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: gardenlet-bootstrap-kubeconfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubeconfig: |&lt;span style="color:#a31515">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> apiVersion: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> clusters:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> - cluster:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> certificate-authority-data: &amp;lt;dummy&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> server: &amp;lt;my-garden-cluster-endpoint&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> name: my-kubernetes-cluster
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> # ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubeconfigSecret:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: gardenlet-kubeconfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># &amp;lt;default config&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> seedConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: sweet-seed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dns:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> provider:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: &amp;lt;provider&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> secretRef:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: ingress-secret
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ingress: &lt;span style="color:#008000"># see prerequisites&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> domain: ingress.dev.my-seed.example.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> controller:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> networks:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nodes: 10.240.0.0/16
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pods: 100.244.0.0/16
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> services: 100.32.0.0/13
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> shootDefaults:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pods: 100.96.0.0/11
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> services: 100.64.0.0/13
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> provider:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> region: eu-west-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: &amp;lt;provider&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> backup:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> provider: &amp;lt;provider&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> secretRef:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: sweet-seed-backup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: garden
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Deploy the gardenlet Helm chart to the Kubernetes cluster:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>helm install gardenlet charts/gardener/gardenlet &lt;span style="color:#a31515">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515">&lt;/span> --namespace garden &lt;span style="color:#a31515">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515">&lt;/span> -f gardenlet-values.yaml &lt;span style="color:#a31515">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515">&lt;/span> --wait
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This helm chart creates:&lt;/p>
&lt;ul>
&lt;li>A service account &lt;code>gardenlet&lt;/code> that the gardenlet can use to talk to the Seed API server.&lt;/li>
&lt;li>RBAC roles for the service account (full admin rights at the moment).&lt;/li>
&lt;li>The secret (&lt;code>garden&lt;/code>/&lt;code>gardenlet-bootstrap-kubeconfig&lt;/code>) containing the bootstrap &lt;code>kubeconfig&lt;/code>.&lt;/li>
&lt;li>The gardenlet deployment in the &lt;code>garden&lt;/code> namespace.&lt;/li>
&lt;/ul>
&lt;h2 id="check-that-the-gardenlet-is-successfully-deployed">Check that the gardenlet Is Successfully Deployed&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Check that the gardenlets certificate bootstrap was successful.&lt;/p>
&lt;p>Check if the secret &lt;code>gardenlet-kubeconfig&lt;/code> in the namespace &lt;code>garden&lt;/code> in the seed cluster
is created and contains a &lt;code>kubeconfig&lt;/code> with a valid certificate.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Get the &lt;code>kubeconfig&lt;/code> from the created secret.&lt;/p>
&lt;pre tabindex="0">&lt;code>$ kubectl -n garden get secret gardenlet-kubeconfig -o json | jq -r .data.kubeconfig | base64 -d
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>Test against the garden cluster and verify it’s working.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Extract the &lt;code>client-certificate-data&lt;/code> from the user &lt;code>gardenlet&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>View the certificate:&lt;/p>
&lt;pre tabindex="0">&lt;code>$ openssl x509 -in ./gardenlet-cert -noout -text
&lt;/code>&lt;/pre>&lt;p>Check that the certificate is valid for a year (that is the lifetime of new certificates).&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>Check that the bootstrap secret &lt;code>gardenlet-bootstrap-kubeconfig&lt;/code> has been deleted from the seed cluster in namespace &lt;code>garden&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Check that the seed cluster is registered and &lt;code>READY&lt;/code> in the garden cluster.&lt;/p>
&lt;p>Check that the seed cluster &lt;code>sweet-seed&lt;/code> exists and all conditions indicate that it’s available.
If so, the &lt;a href="https://gardener.cloud/docs/gardener/concepts/gardenlet/#heartbeats">Gardenlet is sending regular heartbeats&lt;/a> and the &lt;a href="https://gardener.cloud/docs/gardener/seed_bootstrapping/">seed bootstrapping&lt;/a> was successful.&lt;/p>
&lt;p>Check that the conditions on the &lt;code>Seed&lt;/code> resource look similar to the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl get seed sweet-seed -o json | jq .status.conditions
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;lastTransitionTime&amp;#34;&lt;/span>: &lt;span style="color:#a31515">&amp;#34;2020-07-17T09:17:29Z&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;lastUpdateTime&amp;#34;&lt;/span>: &lt;span style="color:#a31515">&amp;#34;2020-07-17T09:17:29Z&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;message&amp;#34;&lt;/span>: &lt;span style="color:#a31515">&amp;#34;Gardenlet is posting ready status.&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;reason&amp;#34;&lt;/span>: &lt;span style="color:#a31515">&amp;#34;GardenletReady&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;status&amp;#34;&lt;/span>: &lt;span style="color:#a31515">&amp;#34;True&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#a31515">&amp;#34;GardenletReady&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;lastTransitionTime&amp;#34;&lt;/span>: &lt;span style="color:#a31515">&amp;#34;2020-07-17T09:17:49Z&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;lastUpdateTime&amp;#34;&lt;/span>: &lt;span style="color:#a31515">&amp;#34;2020-07-17T09:53:17Z&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;message&amp;#34;&lt;/span>: &lt;span style="color:#a31515">&amp;#34;Backup Buckets are available.&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;reason&amp;#34;&lt;/span>: &lt;span style="color:#a31515">&amp;#34;BackupBucketsAvailable&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;status&amp;#34;&lt;/span>: &lt;span style="color:#a31515">&amp;#34;True&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#a31515">&amp;#34;BackupBucketsReady&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="related-links">Related Links&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/gardener/gardener/issues/1724">Issue #1724: Harden Gardenlet RBAC privileges&lt;/a>.&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/gardener/concepts/backup-restore/">Backup and Restore&lt;/a>.&lt;/li>
&lt;/ul></description></item><item><title>Docs: DNS Autoscaling</title><link>https://gardener.cloud/docs/gardener/dns-autoscaling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/dns-autoscaling/</guid><description>
&lt;h1 id="dns-autoscaling">DNS Autoscaling&lt;/h1>
&lt;p>This is a short guide describing different options how to automatically scale CoreDNS in the shoot cluster.&lt;/p>
&lt;h2 id="background">Background&lt;/h2>
&lt;p>Currently, Gardener uses CoreDNS as DNS server. Per default, it is installed as a deployment into the shoot cluster that is auto-scaled horizontally to cover for QPS-intensive applications. However, doing so does not seem to be enough to completely circumvent DNS bottlenecks such as:&lt;/p>
&lt;ul>
&lt;li>Cloud provider limits for DNS lookups.&lt;/li>
&lt;li>Unreliable UDP connections that forces a period of timeout in case packets are dropped.&lt;/li>
&lt;li>Unnecessary node hopping since CoreDNS is not deployed on all nodes, and as a result DNS queries end-up traversing multiple nodes before reaching the destination server.&lt;/li>
&lt;li>Inefficient load-balancing of services (e.g., round-robin might not be enough when using IPTables mode).&lt;/li>
&lt;li>Overload of the CoreDNS replicas as the maximum amount of replicas is fixed.&lt;/li>
&lt;li>and more &amp;hellip;&lt;/li>
&lt;/ul>
&lt;p>As an alternative with extended configuration options, Gardener provides cluster-proportional autoscaling of CoreDNS. This guide focuses on the configuration of cluster-proportional autoscaling of CoreDNS and its advantages/disadvantages compared to the horizontal
autoscaling.
Please note that there is also the option to use a &lt;a href="https://gardener.cloud/docs/gardener/node-local-dns/">node-local DNS cache&lt;/a>, which helps mitigate potential DNS bottlenecks (see &lt;a href="#trade-offs-in-conjunction-with-nodelocaldns">Trade-offs in conjunction with NodeLocalDNS&lt;/a> for considerations regarding using NodeLocalDNS together with one of the CoreDNS autoscaling approaches).&lt;/p>
&lt;h2 id="configuring-cluster-proportional-dns-autoscaling">Configuring Cluster-Proportional DNS Autoscaling&lt;/h2>
&lt;p>All that needs to be done to enable the usage of cluster-proportional autoscaling of CoreDNS is to set the corresponding option (&lt;code>spec.systemComponents.coreDNS.autoscaling.mode&lt;/code>) in the &lt;code>Shoot&lt;/code> resource to &lt;code>cluster-proportional&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> systemComponents:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> coreDNS:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> autoscaling:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mode: cluster-proportional
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To switch back to horizontal DNS autoscaling, you can set the &lt;code>spec.systemComponents.coreDNS.autoscaling.mode&lt;/code> to &lt;code>horizontal&lt;/code> (or remove the &lt;code>coreDNS&lt;/code> section).&lt;/p>
&lt;p>Once the cluster-proportional autoscaling of CoreDNS has been enabled and the Shoot cluster has been reconciled afterwards, a ConfigMap called &lt;code>coredns-autoscaler&lt;/code> will be created in the &lt;code>kube-system&lt;/code> namespace with the default settings. The content will be similar to the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>linear: &lt;span style="color:#a31515">&amp;#39;{&amp;#34;coresPerReplica&amp;#34;:256,&amp;#34;min&amp;#34;:2,&amp;#34;nodesPerReplica&amp;#34;:16}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It is possible to adapt the ConfigMap according to your needs in case the defaults do not work as desired. The number of CoreDNS replicas is calculated according to the following formula:&lt;/p>
&lt;pre tabindex="0">&lt;code>replicas = max( ceil( cores × 1 / coresPerReplica ) , ceil( nodes × 1 / nodesPerReplica ) )
&lt;/code>&lt;/pre>&lt;p>Depending on your needs, you can adjust &lt;code>coresPerReplica&lt;/code> or &lt;code>nodesPerReplica&lt;/code>, but it is also possible to override &lt;code>min&lt;/code> if required.&lt;/p>
&lt;h2 id="trade-offs-of-horizontal-and-cluster-proportional-dns-autoscaling">Trade-Offs of Horizontal and Cluster-Proportional DNS Autoscaling&lt;/h2>
&lt;p>The horizontal autoscaling of CoreDNS as implemented by Gardener is fully managed, i.e., you do not need to perform any configuration changes. It scales according to the CPU usage of CoreDNS replicas, meaning that it will create new replicas if the existing ones are under heavy load. This approach scales between 2 and 5 instances, which is sufficient for most workloads. In case this is not enough, the cluster-proportional autoscaling approach can be used instead, with its more flexible configuration options.&lt;/p>
&lt;p>The cluster-proportional autoscaling of CoreDNS as implemented by Gardener is fully managed, but allows more configuration options to adjust the default settings to your individual needs. It scales according to the cluster size, i.e., if your cluster grows in terms of cores/nodes so will the amount of CoreDNS replicas. However, it does not take the actual workload, e.g., CPU consumption, into account.&lt;/p>
&lt;p>Experience shows that the horizontal autoscaling of CoreDNS works for a variety of workloads. It does reach its limits if a cluster has a high amount of DNS requests, though. The cluster-proportional autoscaling approach allows to fine-tune the amount of CoreDNS replicas. It helps to scale in clusters of changing size. However, please keep in mind that you need to cater for the maximum amount of DNS requests as the replicas will not be adapted according to the workload, but only according to the cluster size (cores/nodes).&lt;/p>
&lt;h2 id="trade-offs-in-conjunction-with-nodelocaldns">Trade-Offs in Conjunction with NodeLocalDNS&lt;/h2>
&lt;p>Using a &lt;a href="https://gardener.cloud/docs/gardener/node-local-dns/">node-local DNS cache&lt;/a> can mitigate a lot of the potential DNS related problems. It works fine with a DNS workload that can be handle through the cache and reduces the inter-node DNS communication. As &lt;a href="https://gardener.cloud/docs/gardener/node-local-dns/">node-local DNS cache&lt;/a> reduces the amount of traffic being sent to the cluster&amp;rsquo;s CoreDNS replicas, it usually works fine with horizontally scaled CoreDNS. Nevertheless, it also works with CoreDNS scaled in a cluster-proportional approach. In this mode, though, it might make sense to adapt the default settings as the CoreDNS workload is likely significantly reduced.&lt;/p>
&lt;p>Overall, you can view the DNS options on a scale. Horizontally scaled DNS provides a small amount of DNS servers. Especially for bigger clusters, a cluster-proportional approach will yield more CoreDNS instances and hence may yield a more balanced DNS solution. By adapting the settings you can further increase the amount of CoreDNS replicas. On the other end of the spectrum, a &lt;a href="https://gardener.cloud/docs/gardener/node-local-dns/">node-local DNS cache&lt;/a> provides DNS on every node and allows to reduce the amount of (backend) CoreDNS instances regardless if they are horizontally or cluster-proportionally scaled.&lt;/p></description></item><item><title>Docs: DNS Record</title><link>https://gardener.cloud/docs/gardener/extensions/dnsrecord/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/extensions/dnsrecord/</guid><description>
&lt;h1 id="contract-dnsrecord-resources">Contract: &lt;code>DNSRecord&lt;/code> Resources&lt;/h1>
&lt;p>Every shoot cluster requires external DNS records that are publicly resolvable.
The management of these DNS records requires provider-specific knowledge which is to be developed outside the Gardener&amp;rsquo;s core repository.&lt;/p>
&lt;p>Currently, Gardener uses &lt;code>DNSProvider&lt;/code> and &lt;code>DNSEntry&lt;/code> resources. However, this introduces undesired coupling of Gardener to a controller that does not adhere to the Gardener extension contracts. Because of this, we plan to stop using &lt;code>DNSProvider&lt;/code> and &lt;code>DNSEntry&lt;/code> resources for Gardener DNS records in the future and use the &lt;code>DNSRecord&lt;/code> resources described here instead.&lt;/p>
&lt;h2 id="what-does-gardener-create-dns-records-for">What does Gardener create DNS records for?&lt;/h2>
&lt;h3 id="internal-domain-name">Internal Domain Name&lt;/h3>
&lt;p>Every shoot cluster&amp;rsquo;s kube-apiserver running in the seed is exposed via a load balancer that has a public endpoint (IP or hostname).
This endpoint is used by end-users and also by system components (that are running in another network, e.g., the kubelet or kube-proxy) to talk to the cluster.
In order to be robust against changes of this endpoint (e.g., caused due to re-creation of the load balancer or move of the DNS record to another seed cluster), Gardener creates a so-called &lt;em>internal domain name&lt;/em> for every shoot cluster.
The &lt;em>internal domain name&lt;/em> is a publicly resolvable DNS record that points to the load balancer of the kube-apiserver.
Gardener uses this domain name in the kubeconfigs of all system components, instead of using directly the load balancer endpoint.
This way Gardener does not need to recreate all kubeconfigs if the endpoint changes - it just needs to update the DNS record.&lt;/p>
&lt;h3 id="external-domain-name">External Domain Name&lt;/h3>
&lt;p>The internal domain name is not configurable by end-users directly but configured by the Gardener administrator.
However, end-users usually prefer to have another DNS name, maybe even using their own domain sometimes, to access their Kubernetes clusters.
Gardener supports that by creating another DNS record, named &lt;em>external domain name&lt;/em>, that actually points to the &lt;em>internal domain name&lt;/em>.
The kubeconfig handed out to end-users does contain this &lt;em>external domain name&lt;/em>, i.e., users can access their clusters with the DNS name they like to.&lt;/p>
&lt;p>As not every end-user has an own domain, it is possible for Gardener administrators to configure so-called &lt;em>default domains&lt;/em>.
If configured, shoots that do not specify a domain explicitly get an &lt;em>external domain name&lt;/em> based on a default domain (unless explicitly stated that this shoot should not get an external domain name (&lt;code>.spec.dns.provider=unmanaged&lt;/code>).&lt;/p>
&lt;h3 id="ingress-domain-name-deprecated">Ingress Domain Name (Deprecated)&lt;/h3>
&lt;p>Gardener allows to deploy a &lt;code>nginx-ingress-controller&lt;/code> into a shoot cluster (deprecated).
This controller is exposed via a public load balancer (again, either IP or hostname).
Gardener creates a wildcard DNS record pointing to this load balancer.
&lt;code>Ingress&lt;/code> resources can later use this wildcard DNS record to expose underlying applications.&lt;/p>
&lt;h3 id="seed-ingress">Seed Ingress&lt;/h3>
&lt;p>If &lt;code>.spec.ingress&lt;/code> is configured in the Seed, Gardener deploys the ingress controller mentioned in &lt;code>.spec.ingress.controller.kind&lt;/code> to the seed cluster. Currently, the only supported kind is &amp;ldquo;nginx&amp;rdquo;. If the ingress field is set, then &lt;code>.spec.dns.provider&lt;/code> must also be set. Gardener creates a wildcard DNS record pointing to the load balancer of the ingress controller. The &lt;code>Ingress&lt;/code> resources of components like Plutono and Prometheus in the &lt;code>garden&lt;/code> namespace and the shoot namespaces use this wildcard DNS record to expose their underlying applications.&lt;/p>
&lt;h2 id="what-needs-to-be-implemented-to-support-a-new-dns-provider">What needs to be implemented to support a new DNS provider?&lt;/h2>
&lt;p>As part of the shoot flow, Gardener will create a number of &lt;code>DNSRecord&lt;/code> resources in the seed cluster (one for each of the DNS records mentioned above) that need to be reconciled by an extension controller.
These resources contain the following information:&lt;/p>
&lt;ul>
&lt;li>The DNS provider type (e.g., &lt;code>aws-route53&lt;/code>, &lt;code>google-clouddns&lt;/code>, &amp;hellip;)&lt;/li>
&lt;li>A reference to a &lt;code>Secret&lt;/code> object that contains the provider-specific credentials used to communicate with the provider&amp;rsquo;s API.&lt;/li>
&lt;li>The fully qualified domain name (FQDN) of the DNS record, e.g. &amp;ldquo;api.&amp;lt;shoot domain&amp;gt;&amp;rdquo;.&lt;/li>
&lt;li>The DNS record type, one of &lt;code>A&lt;/code>, &lt;code>AAAA&lt;/code>, &lt;code>CNAME&lt;/code>, or &lt;code>TXT&lt;/code>.&lt;/li>
&lt;li>The DNS record values, that is a list of IP addresses for A records, a single hostname for CNAME records, or a list of texts for TXT records.&lt;/li>
&lt;/ul>
&lt;p>Optionally, the &lt;code>DNSRecord&lt;/code> resource may contain also the following information:&lt;/p>
&lt;ul>
&lt;li>The region of the DNS record. If not specified, the region specified in the referenced &lt;code>Secret&lt;/code> shall be used. If that is also not specified, the extension controller shall use a certain default region.&lt;/li>
&lt;li>The DNS hosted zone of the DNS record. If not specified, it shall be determined automatically by the extension controller by getting all hosted zones of the account and searching for the longest zone name that is a suffix of the fully qualified domain name (FQDN) mentioned above.&lt;/li>
&lt;li>The TTL of the DNS record in seconds. If not specified, it shall be set by the extension controller to 120.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Example &lt;code>DNSRecord&lt;/code>&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Secret
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: dnsrecord-bar-external
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: shoot--foo--bar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>type: Opaque
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>data:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># aws-route53 specific credentials here&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: DNSRecord
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: dnsrecord-external
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: aws-route53
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> secretRef:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: dnsrecord-bar-external
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: shoot--foo--bar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># region: eu-west-1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># zone: ZFOO&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: api.bar.foo.my-fancy-domain.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> recordType: A
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> values:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - 1.2.3.4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># ttl: 600&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In order to support a new DNS record provider, you need to write a controller that watches all &lt;code>DNSRecord&lt;/code>s with &lt;code>.spec.type=&amp;lt;my-provider-name&amp;gt;&lt;/code>.
You can take a look at the below referenced example implementation for the AWS route53 provider.&lt;/p>
&lt;h2 id="key-names-in-secrets-containing-provider-specific-credentials">Key Names in Secrets Containing Provider-Specific Credentials&lt;/h2>
&lt;p>For compatibility with existing setups, extension controllers shall support two different namings of keys in secrets containing provider-specific credentials:&lt;/p>
&lt;ul>
&lt;li>The naming used by the &lt;a href="https://github.com/gardener/external-dns-management">external-dns-management DNS controller&lt;/a>. For example, on AWS the key names are &lt;code>AWS_ACCESS_KEY_ID&lt;/code>, &lt;code>AWS_SECRET_ACCESS_KEY&lt;/code>, and &lt;code>AWS_REGION&lt;/code>.&lt;/li>
&lt;li>The naming used by other provider-specific extension controllers, e.g. for &lt;a href="https://gardener.cloud/docs/gardener/extensions/infrastructure/">infrastructure&lt;/a>. For example, on AWS the key names are &lt;code>accessKeyId&lt;/code>, &lt;code>secretAccessKey&lt;/code>, and &lt;code>region&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h2 id="avoiding-reading-the-dns-hosted-zones">Avoiding Reading the DNS Hosted Zones&lt;/h2>
&lt;p>If the DNS hosted zone is not specified in the &lt;code>DNSRecord&lt;/code> resource, during the first reconciliation the extension controller shall determine the correct DNS hosted zone for the specified FQDN and write it to the status of the resource:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: DNSRecord
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: dnsrecord-external
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: shoot--foo--bar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>status:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lastOperation: ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zone: ZFOO
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>On subsequent reconciliations, the extension controller shall use the zone from the status and avoid reading the DNS hosted zones from the provider.
If the &lt;code>DNSRecord&lt;/code> resource specifies a zone in &lt;code>.spec.zone&lt;/code> and the extension controller has written a value to &lt;code>.status.zone&lt;/code>, the first one shall be considered with higher priority by the extension controller.&lt;/p>
&lt;h2 id="non-provider-specific-information-required-for-dns-record-creation">Non-Provider Specific Information Required for DNS Record Creation&lt;/h2>
&lt;p>Some providers might require further information that is not provider specific but already part of the shoot resource.
As Gardener cannot know which information is required by providers, it simply mirrors the &lt;code>Shoot&lt;/code>, &lt;code>Seed&lt;/code>, and &lt;code>CloudProfile&lt;/code> resources into the seed.
They are part of the &lt;a href="https://gardener.cloud/docs/gardener/extensions/cluster/">&lt;code>Cluster&lt;/code> extension resource&lt;/a> and can be used to extract information that is not part of the &lt;code>DNSRecord&lt;/code> resource itself.&lt;/p>
&lt;h2 id="using-dnsrecord-resources">Using &lt;code>DNSRecord&lt;/code> Resources&lt;/h2>
&lt;p>gardenlet manages &lt;code>DNSRecord&lt;/code> resources for all three DNS records mentioned above (internal, external, and ingress).
In order to successfully reconcile a shoot with the feature gate enabled, extension controllers for &lt;code>DNSRecord&lt;/code> resources for types used in the default, internal, and custom domain secrets should be registered via &lt;code>ControllerRegistration&lt;/code> resources.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Note:&lt;/strong> For compatibility reasons, the &lt;code>spec.dns.providers&lt;/code> section is still used to specify additional providers. Only the one marked as &lt;code>primary: true&lt;/code> will be used for &lt;code>DNSRecord&lt;/code>. All others are considered by the &lt;code>shoot-dns-service&lt;/code> extension only (if deployed).&lt;/p>
&lt;/blockquote>
&lt;h3 id="support-for-dnsrecord-resources-in-the-provider-extensions">Support for &lt;code>DNSRecord&lt;/code> Resources in the Provider Extensions&lt;/h3>
&lt;p>The following table contains information about the provider extension version that adds support for &lt;code>DNSRecord&lt;/code> resources:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Extension&lt;/th>
&lt;th>Version&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>provider-alicloud&lt;/td>
&lt;td>&lt;code>v1.26.0&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>provider-aws&lt;/td>
&lt;td>&lt;code>v1.27.0&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>provider-azure&lt;/td>
&lt;td>&lt;code>v1.21.0&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>provider-gcp&lt;/td>
&lt;td>&lt;code>v1.18.0&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>provider-openstack&lt;/td>
&lt;td>&lt;code>v1.21.0&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>provider-vsphere&lt;/td>
&lt;td>N/A&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>provider-equinix-metal&lt;/td>
&lt;td>N/A&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>provider-kubevirt&lt;/td>
&lt;td>N/A&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>provider-openshift&lt;/td>
&lt;td>N/A&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="support-for-dnsrecord-ipv6-recordtype-aaaa-in-the-provider-extensions">Support for &lt;code>DNSRecord&lt;/code> IPv6 &lt;code>recordType: AAAA&lt;/code> in the Provider Extensions&lt;/h3>
&lt;p>The following table contains information about the provider extension version that adds support for &lt;code>DNSRecord&lt;/code> IPv6 &lt;code>recordType: AAAA&lt;/code>:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Extension&lt;/th>
&lt;th>Version&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>provider-alicloud&lt;/td>
&lt;td>N/A&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>provider-aws&lt;/td>
&lt;td>N/A&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>provider-azure&lt;/td>
&lt;td>N/A&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>provider-gcp&lt;/td>
&lt;td>N/A&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>provider-openstack&lt;/td>
&lt;td>N/A&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>provider-vsphere&lt;/td>
&lt;td>N/A&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>provider-equinix-metal&lt;/td>
&lt;td>N/A&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>provider-kubevirt&lt;/td>
&lt;td>N/A&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>provider-openshift&lt;/td>
&lt;td>N/A&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>provider-local&lt;/td>
&lt;td>&lt;code>v1.63.0&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="references-and-additional-resources">References and Additional Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/gardener/gardener/blob/master/pkg/apis/extensions/v1alpha1/types_dnsrecord.go">&lt;code>DNSRecord&lt;/code> API (Golang specification)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gardener/gardener-extension-provider-aws/tree/master/pkg/controller/dnsrecord">Sample Implementation for the AWS Route53 Provider&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docs: DNS Search Path Optimization</title><link>https://gardener.cloud/docs/gardener/dns-search-path-optimization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/dns-search-path-optimization/</guid><description>
&lt;h1 id="dns-search-path-optimization">DNS Search Path Optimization&lt;/h1>
&lt;h2 id="dns-search-path">DNS Search Path&lt;/h2>
&lt;p>Using fully qualified names has some downsides, e.g., it may become harder to move deployments from one landscape to the
next. It is far easier and simple to rely on short/local names, which may have different meaning depending on the context
they are used in.&lt;/p>
&lt;p>The DNS search path allows for the usage of short/local names. It is an ordered list of DNS suffixes to append to short/local
names to create a fully qualified name.&lt;/p>
&lt;p>If a short/local name should be resolved, each entry is appended to it one by one to check whether it can be resolved. The
process stops when either the name could be resolved or the DNS search path ends. As the last step after trying the search
path, the short/local name is attempted to be resolved on it own.&lt;/p>
&lt;h2 id="dns-option-ndots">DNS Option &lt;code>ndots&lt;/code>&lt;/h2>
&lt;p>As explained in the &lt;a href="#dns-search-path">section above&lt;/a>, the DNS search path is used for short/local names to create fully
qualified names. The DNS option &lt;code>ndots&lt;/code> specifies how many dots (&lt;code>.&lt;/code>) a name needs to have to be considered fully qualified.
For names with less than &lt;code>ndots&lt;/code> dots (&lt;code>.&lt;/code>), the &lt;a href="#dns-search-path">DNS search path&lt;/a> will be applied.&lt;/p>
&lt;h2 id="dns-search-path-ndots-and-kubernetes">DNS Search Path, &lt;code>ndots&lt;/code>, and Kubernetes&lt;/h2>
&lt;p>Kubernetes tries to make it easy/convenient for developers to use name resolution. It provides several means to address a
service, most notably by its name directly, using the namespace as suffix, utilizing &lt;code>&amp;lt;namespace&amp;gt;.svc&lt;/code> as suffix or as a
fully qualified name as &lt;code>&amp;lt;service&amp;gt;.&amp;lt;namespace&amp;gt;.svc.cluster.local&lt;/code> (assuming &lt;code>cluster.local&lt;/code> to be the cluster domain).&lt;/p>
&lt;p>This is why the DNS search path is fairly long in Kubernetes, usually consisting of &lt;code>&amp;lt;namespace&amp;gt;.svc.cluster.local&lt;/code>,
&lt;code>svc.cluster.local&lt;/code>, &lt;code>cluster.local&lt;/code>, and potentially some additional entries coming from the local network of the cluster.
For various reasons, the default &lt;code>ndots&lt;/code> value in the context of Kubernetes is with &lt;code>5&lt;/code>, also fairly large. See
&lt;a href="https://github.com/kubernetes/kubernetes/issues/33554#issuecomment-266251056">this comment&lt;/a> for a more detailed description.&lt;/p>
&lt;h2 id="dns-search-pathndots-problem-in-kubernetes">DNS Search Path/&lt;code>ndots&lt;/code> Problem in Kubernetes&lt;/h2>
&lt;p>As the DNS search path is long and &lt;code>ndots&lt;/code> is large, a lot of DNS queries might traverse the DNS search path. This results
in an explosion of DNS requests.&lt;/p>
&lt;p>For example, consider the name resolution of the default kubernetes service &lt;code>kubernetes.default.svc.cluster.local&lt;/code>. As this
name has only four dots, it is not considered a fully qualified name according to the default &lt;code>ndots=5&lt;/code> setting. Therefore,
the DNS search path is applied, resulting in the following queries being created&lt;/p>
&lt;ul>
&lt;li>&lt;code>kubernetes.default.svc.cluster.local.some-namespace.svc.cluster.local&lt;/code>&lt;/li>
&lt;li>&lt;code>kubernetes.default.svc.cluster.local.svc.cluster.local&lt;/code>&lt;/li>
&lt;li>&lt;code>kubernetes.default.svc.cluster.local.cluster.local&lt;/code>&lt;/li>
&lt;li>&lt;code>kubernetes.default.svc.cluster.local.network-domain&lt;/code>&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;p>In IPv4/IPv6 dual stack systems, the amount of DNS requests may even double as each name is resolved for IPv4 and IPv6.&lt;/p>
&lt;h2 id="general-workaroundsmitigations">General Workarounds/Mitigations&lt;/h2>
&lt;p>Kubernetes provides the capability to set the DNS options for each pod (see
&lt;a href="https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-dns-config">Pod DNS config&lt;/a> for details).
However, this has to be applied for every pod (doing name resolution) to resolve the problem. A mutating webhook may be
useful in this regard. Unfortunately, the DNS requirements may be different depending on the workload. Therefore, a general
solution may difficult to impossible.&lt;/p>
&lt;p>Another approach is to use always fully qualified names and append a dot (&lt;code>.&lt;/code>) to the name to prevent the name resolution
system from using the DNS search path. This might be somewhat counterintuitive as most developers are not used to the
trailing dot (&lt;code>.&lt;/code>). Furthermore, it makes moving to different landscapes more difficult/error-prone.&lt;/p>
&lt;h2 id="gardener-specific-workaroundsmitigations">Gardener Specific Workarounds/Mitigations&lt;/h2>
&lt;p>Gardener allows users to &lt;a href="https://gardener.cloud/docs/gardener/custom-dns-config/">customize their DNS configuration&lt;/a>. CoreDNS allows several approaches to deal with
the requests generated by the DNS search path. &lt;a href="https://coredns.io/plugins/cache/">Caching&lt;/a> is possible as well as
&lt;a href="https://coredns.io/plugins/rewrite/">query rewriting&lt;/a>. There are also several other &lt;a href="https://coredns.io/plugins/">plugins&lt;/a>
available, which may mitigate the situation.&lt;/p>
&lt;h2 id="gardener-dns-query-rewriting">Gardener DNS Query Rewriting&lt;/h2>
&lt;p>As explained &lt;a href="#dns-search-path-ndots-and-kubernetes">above&lt;/a>, the application of the DNS search path may lead to the undesired
creation of DNS requests. Especially with the default setting of &lt;code>ndots=5&lt;/code>, seemingly fully qualified names pointing to
services in the cluster may trigger the DNS search path application.&lt;/p>
&lt;p>Gardener allows to automatically rewrite some obviously incorrect DNS names, which stem from an application of the DNS search
path to the most likely desired name. The feature can be enabled by setting the Gardenlet feature gate &lt;code>CoreDNSQueryRewriting&lt;/code> to &lt;code>true&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>featureGates:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CoreDNSQueryRewriting: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In case the feature is enabled in the gardenlet, it can be disabled per shoot cluster by setting the annotation
&lt;code>alpha.featuregates.shoot.gardener.cloud/core-dns-rewriting-disabled&lt;/code> to any value.&lt;/p>
&lt;p>This will automatically rewrite requests like &lt;code>service.namespace.svc.cluster.local.svc.cluster.local&lt;/code> to
&lt;code>service.namespace.svc.cluster.local&lt;/code>.&lt;/p>
&lt;p>In case the applications also target services for name resolution, which are outside of the cluster and have less than &lt;code>ndots&lt;/code> dots,
it might be helpful to prevent search path application for them as well. One way to achieve it is by adding them to the
&lt;code>commonSuffixes&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> systemComponents:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> coreDNS:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rewriting:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> commonSuffixes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - gardener.cloud
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - example.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>DNS requests containing a common suffix and ending in &lt;code>.svc.cluster.local&lt;/code> are assumed to be incorrect application of the DNS
search path. Therefore, they are rewritten to everything ending in the common suffix. For example, &lt;code>www.gardener.cloud.svc.cluster.local&lt;/code>
would be rewritten to &lt;code>www.gardener.cloud&lt;/code>.&lt;/p>
&lt;p>Please note that the common suffixes should be long enough and include enough dots (&lt;code>.&lt;/code>) to prevent random overlap with
other DNS queries. For example, it would be a bad idea to simply put &lt;code>com&lt;/code> on the list of common suffixes, as there may be
services/namespaces which have &lt;code>com&lt;/code> as part of their name. The effect would be seemingly random DNS requests. Gardener
requires that common suffixes contain at least one dot (.) and adds a second dot at the beginning. For instance, a common
suffix of &lt;code>example.com&lt;/code> in the configuration would match &lt;code>*.example.com&lt;/code>.&lt;/p>
&lt;p>Since some clients verify the host in the response of a DNS query, the host must also be rewritten.
For that reason, we can&amp;rsquo;t rewrite a query for &lt;code>service.dst-namespace.svc.cluster.local.src-namespace.svc.cluster.local&lt;/code> or
&lt;code>www.example.com.src-namespace.svc.cluster.local&lt;/code>, as for an answer rewrite &lt;code>src-namespace&lt;/code> would not be known.&lt;/p></description></item><item><title>Docs: etcd</title><link>https://gardener.cloud/docs/gardener/concepts/etcd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/concepts/etcd/</guid><description>
&lt;h1 id="etcd---key-value-store-for-kubernetes">etcd - Key-Value Store for Kubernetes&lt;/h1>
&lt;p>&lt;a href="https://etcd.io/">etcd&lt;/a> is a strongly consistent key-value store and the most prevalent choice for the Kubernetes
persistence layer. All API cluster objects like &lt;code>Pod&lt;/code>s, &lt;code>Deployment&lt;/code>s, &lt;code>Secret&lt;/code>s, etc., are stored in &lt;code>etcd&lt;/code>, which
makes it an essential part of a &lt;a href="https://kubernetes.io/docs/concepts/overview/components/#control-plane-components">Kubernetes control plane&lt;/a>.&lt;/p>
&lt;h2 id="garden-or-shoot-cluster-persistence">Garden or Shoot Cluster Persistence&lt;/h2>
&lt;p>Each garden or shoot cluster gets its very own persistence for the control plane.
It runs in the shoot namespace on the respective seed cluster (or in the &lt;code>garden&lt;/code> namespace in the garden cluster, respectively).
Concretely, there are two etcd instances per shoot cluster, which the &lt;code>kube-apiserver&lt;/code> is configured to use in the following way:&lt;/p>
&lt;ul>
&lt;li>&lt;code>etcd-main&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>A store that contains all &amp;ldquo;cluster critical&amp;rdquo; or &amp;ldquo;long-term&amp;rdquo; objects.
These object kinds are typically considered for a backup to prevent any data loss.&lt;/p>
&lt;ul>
&lt;li>&lt;code>etcd-events&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>A store that contains all &lt;code>Event&lt;/code> objects (&lt;code>events.k8s.io&lt;/code>) of a cluster.
&lt;code>Events&lt;/code> usually have a short retention period and occur frequently, but are not essential for a disaster recovery.&lt;/p>
&lt;p>The setup above prevents both, the critical &lt;code>etcd-main&lt;/code> is not flooded by Kubernetes &lt;code>Events&lt;/code>, as well as backup space is not occupied by non-critical data.
This separation saves time and resources.&lt;/p>
&lt;h2 id="etcd-operator">etcd Operator&lt;/h2>
&lt;p>Configuring, maintaining, and health-checking etcd is outsourced to a dedicated operator called &lt;a href="https://github.com/gardener/etcd-druid/">etcd Druid&lt;/a>.
When a &lt;a href="https://gardener.cloud/docs/gardener/concepts/gardenlet/">&lt;code>gardenlet&lt;/code>&lt;/a> reconciles a &lt;code>Shoot&lt;/code> resource or a &lt;a href="https://gardener.cloud/docs/gardener/concepts/operator/">&lt;code>gardener-operator&lt;/code>&lt;/a> reconciles a &lt;code>Garden&lt;/code> resource, they manage an &lt;a href="https://github.com/gardener/etcd-druid/blob/1d427e9167adac1476d1847c0e265c2c09d6bc62/config/samples/druid_v1alpha1_etcd.yaml">&lt;code>Etcd&lt;/code>&lt;/a> resource in the seed or garden cluster, containing necessary information (backup information, defragmentation schedule, resources, etc.).
&lt;code>etcd-druid&lt;/code> needs to manage the lifecycle of the desired etcd instance (today &lt;code>main&lt;/code> or &lt;code>events&lt;/code>).
Likewise, when the &lt;code>Shoot&lt;/code> or &lt;code>Garden&lt;/code> is deleted, &lt;code>gardenlet&lt;/code> or &lt;code>gardener-operator&lt;/code> deletes the &lt;code>Etcd&lt;/code> resources and &lt;a href="https://github.com/gardener/etcd-druid/">etcd Druid&lt;/a> takes care of cleaning up all related objects, e.g. the backing &lt;code>StatefulSet&lt;/code>s.&lt;/p>
&lt;h2 id="autoscaling">Autoscaling&lt;/h2>
&lt;p>Gardenlet maintains &lt;a href="https://github.com/gardener/hvpa-controller/blob/master/config/samples/autoscaling_v1alpha1_hvpa.yaml">&lt;code>HVPA&lt;/code>&lt;/a> objects for etcd &lt;code>StatefulSet&lt;/code>s if the corresponding &lt;a href="https://gardener.cloud/docs/gardener/deployment/feature_gates/">feature gate&lt;/a> is enabled.
This enables a vertical scaling for etcd.
Downscaling is handled more pessimistically to prevent many subsequent etcd restarts.
Thus, for &lt;code>production&lt;/code> and &lt;code>infrastructure&lt;/code> shoot clusters (or all garden clusters), downscaling is deactivated for the main etcd.
For all other shoot clusters, lower advertised requests/limits are only applied during a shoot&amp;rsquo;s maintenance time window.&lt;/p>
&lt;h2 id="backup">Backup&lt;/h2>
&lt;p>If &lt;code>Seed&lt;/code>s specify backups for etcd (&lt;a href="https://github.com/gardener/gardener/blob/master/example/50-seed.yaml">example&lt;/a>), then Gardener and the respective &lt;a href="https://gardener.cloud/docs/gardener/extensions/overview/">provider extensions&lt;/a> are responsible for creating a bucket on the cloud provider&amp;rsquo;s side (modelled through a &lt;a href="https://gardener.cloud/docs/gardener/extensions/backupbucket/">BackupBucket resource&lt;/a>).
The bucket stores backups of &lt;code>Shoot&lt;/code>s scheduled on that &lt;code>Seed&lt;/code>.
Furthermore, Gardener creates a &lt;a href="https://gardener.cloud/docs/gardener/extensions/backupentry/">BackupEntry&lt;/a>, which subdivides the bucket and thus makes it possible to store backups of multiple shoot clusters.&lt;/p>
&lt;p>How long backups are stored in the bucket after a shoot has been deleted depends on the configured &lt;em>retention period&lt;/em> in the &lt;code>Seed&lt;/code> resource.
Please see this &lt;a href="https://github.com/gardener/gardener/blob/849cd857d0d20e5dde26b9740ca2814603a56dfd/example/20-componentconfig-gardenlet.yaml#L20">example configuration&lt;/a> for more information.&lt;/p>
&lt;p>For &lt;code>Garden&lt;/code>s specifying backups for etcd (&lt;a href="https://github.com/gardener/gardener/blob/master/example/operator/20-garden.yaml">example&lt;/a>), the bucket must be pre-created externally and provided via the &lt;code>Garden&lt;/code> specification.&lt;/p>
&lt;p>Both etcd instances are configured to run with a special backup-restore &lt;em>sidecar&lt;/em>.
It takes care about regularly backing up etcd data and restoring it in case of data loss (in the main etcd only).
The sidecar also performs defragmentation and other house-keeping tasks.
More information can be found in the &lt;a href="https://github.com/gardener/etcd-backup-restore">component&amp;rsquo;s GitHub repository&lt;/a>.&lt;/p>
&lt;h2 id="housekeeping">Housekeeping&lt;/h2>
&lt;p>&lt;a href="https://etcd.io/docs/v3.3/op-guide/maintenance/">etcd maintenance tasks&lt;/a> must be performed from time to time in order to re-gain database storage and to ensure the system&amp;rsquo;s reliability.
The &lt;a href="https://github.com/gardener/etcd-backup-restore">backup-restore&lt;/a> &lt;em>sidecar&lt;/em> takes care about this job as well.&lt;/p>
&lt;p>For both &lt;code>Shoot&lt;/code>s and &lt;code>Garden&lt;/code>s, a random time &lt;strong>within the shoot&amp;rsquo;s maintenance time&lt;/strong> is chosen for scheduling these tasks.&lt;/p></description></item><item><title>Docs: ExposureClasses</title><link>https://gardener.cloud/docs/gardener/exposureclasses/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/exposureclasses/</guid><description>
&lt;h1 id="exposureclasses">ExposureClasses&lt;/h1>
&lt;p>The Gardener API server provides a cluster-scoped &lt;code>ExposureClass&lt;/code> resource.
This resource is used to allow exposing the control plane of a Shoot cluster in various network environments like restricted corporate networks, DMZ, etc.&lt;/p>
&lt;h2 id="background">Background&lt;/h2>
&lt;p>The &lt;code>ExposureClass&lt;/code> resource is based on the concept for the &lt;code>RuntimeClass&lt;/code> resource in Kubernetes.&lt;/p>
&lt;p>A &lt;code>RuntimeClass&lt;/code> abstracts the installation of a certain container runtime (e.g., gVisor, Kata Containers) on all nodes or a subset of the nodes in a Kubernetes cluster.
See &lt;a href="https://kubernetes.io/docs/concepts/containers/runtime-class/">Runtime Class&lt;/a> for more information.&lt;/p>
&lt;p>In contrast, an &lt;code>ExposureClass&lt;/code> abstracts the ability to expose a Shoot clusters control plane in certain network environments (e.g., corporate networks, DMZ, internet) on all Seeds or a subset of the Seeds.&lt;/p>
&lt;p>Example: &lt;code>RuntimeClass&lt;/code> and &lt;code>ExposureClass&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: node.k8s.io/v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: RuntimeClass
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: gvisor
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>handler: gvisorconfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># scheduling:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># nodeSelector:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># env: prod&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: ExposureClass
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: internet
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>handler: internet-config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># scheduling:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># seedSelector:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># matchLabels:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># network/env: internet&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Similar to &lt;code>RuntimeClasses&lt;/code>, &lt;code>ExposureClasses&lt;/code> also define a &lt;code>.handler&lt;/code> field reflecting the name reference for the corresponding CRI configuration of the &lt;code>RuntimeClass&lt;/code> and the control plane exposure configuration for the &lt;code>ExposureClass&lt;/code>.&lt;/p>
&lt;p>The CRI handler for &lt;code>RuntimeClasses&lt;/code> is usually installed by an administrator (e.g., via a &lt;code>DaemonSet&lt;/code> which installs the corresponding container runtime on the nodes).
The control plane exposure configuration for &lt;code>ExposureClasses&lt;/code> will be also provided by an administrator.
This exposure configuration is part of the gardenlet configuration, as this component is responsible to configure the control plane accordingly.
See the &lt;a href="#gardenlet-configuration-exposureclass-handlers">gardenlet Configuration &lt;code>ExposureClass&lt;/code> Handlers&lt;/a> section for more information.&lt;/p>
&lt;p>The &lt;code>RuntimeClass&lt;/code> also supports the selection of a node subset (which have the respective controller runtime binaries installed) for pod scheduling via its &lt;code>.scheduling&lt;/code> section.
The &lt;code>ExposureClass&lt;/code> also supports the selection of a subset of available Seed clusters whose gardenlet is capable of applying the exposure configuration for the Shoot control plane accordingly via its &lt;code>.scheduling&lt;/code> section.&lt;/p>
&lt;h2 id="usage-by-a-shoot">Usage by a &lt;code>Shoot&lt;/code>&lt;/h2>
&lt;p>A &lt;code>Shoot&lt;/code> can reference an &lt;code>ExposureClass&lt;/code> via the &lt;code>.spec.exposureClassName&lt;/code> field.&lt;/p>
&lt;blockquote>
&lt;p>⚠️ When creating a &lt;code>Shoot&lt;/code> resource, the Gardener scheduler will try to assign the &lt;code>Shoot&lt;/code> to a &lt;code>Seed&lt;/code> which will host its control plane.&lt;/p>
&lt;/blockquote>
&lt;p>The scheduling behaviour can be influenced via the &lt;code>.spec.seedSelectors&lt;/code> and/or &lt;code>.spec.tolerations&lt;/code> fields in the &lt;code>Shoot&lt;/code>.
&lt;code>ExposureClass&lt;/code>es can also contain scheduling instructions.
If a &lt;code>Shoot&lt;/code> is referencing an &lt;code>ExposureClass&lt;/code>, then the scheduling instructions of both will be merged into the &lt;code>Shoot&lt;/code>.
Those unions of scheduling instructions might lead to a selection of a &lt;code>Seed&lt;/code> which is not able to deal with the &lt;code>handler&lt;/code> of the &lt;code>ExposureClass&lt;/code> and the &lt;code>Shoot&lt;/code> creation might end up in an error.
In such case, the &lt;code>Shoot&lt;/code> scheduling instructions should be revisited to check that they are not interfering with the ones from the &lt;code>ExposureClass&lt;/code>.
If this is not feasible, then the combination with the &lt;code>ExposureClass&lt;/code> might not be possible and you need to contact your Gardener administrator.&lt;/p>
&lt;details>
&lt;summary>Example: Shoot and ExposureClass scheduling instructions merge flow&lt;/summary>
&lt;ol>
&lt;li>Assuming there is the following &lt;code>Shoot&lt;/code> which is referencing the &lt;code>ExposureClass&lt;/code> below:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Shoot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: abc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: garden-dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exposureClassName: abc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> seedSelectors:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> matchLabels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> env: prod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: ExposureClass
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: abc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>handler: abc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>scheduling:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> seedSelector:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> matchLabels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> network: internal
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Both &lt;code>seedSelectors&lt;/code> would be merged into the &lt;code>Shoot&lt;/code>. The result would be the following:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Shoot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: abc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: garden-dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exposureClassName: abc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> seedSelectors:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> matchLabels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> env: prod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> network: internal
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Now the Gardener Scheduler would try to find a &lt;code>Seed&lt;/code> with those labels.&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>If there are &lt;strong>no&lt;/strong> Seeds with matching labels for the seed selector, then the &lt;code>Shoot&lt;/code> will be unschedulable.&lt;/li>
&lt;li>If there are Seeds with matching labels for the seed selector, then the Shoot will be assigned to the best candidate after the scheduling strategy is applied, see &lt;a href="https://gardener.cloud/docs/gardener/concepts/scheduler/#algorithm-overview">Gardener Scheduler&lt;/a>.
&lt;ul>
&lt;li>If the &lt;code>Seed&lt;/code> is &lt;strong>not&lt;/strong> able to serve the &lt;code>ExposureClass&lt;/code> handler &lt;code>abc&lt;/code>, then the Shoot will end up in error state.&lt;/li>
&lt;li>If the &lt;code>Seed&lt;/code> is able to serve the &lt;code>ExposureClass&lt;/code> handler &lt;code>abc&lt;/code>, then the &lt;code>Shoot&lt;/code> will be created.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/details>
&lt;h2 id="gardenlet-configuration-exposureclass-handlers">gardenlet Configuration &lt;code>ExposureClass&lt;/code> Handlers&lt;/h2>
&lt;p>The gardenlet is responsible to realize the control plane exposure strategy defined in the referenced &lt;code>ExposureClass&lt;/code> of a &lt;code>Shoot&lt;/code>.&lt;/p>
&lt;p>Therefore, the &lt;code>GardenletConfiguration&lt;/code> can contain an &lt;code>.exposureClassHandlers&lt;/code> list with the respective configuration.&lt;/p>
&lt;p>Example of the &lt;code>GardenletConfiguration&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>exposureClassHandlers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- name: internet-config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> loadBalancerService:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> annotations:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> loadbalancer/network: internet
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- name: internal-config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> loadBalancerService:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> annotations:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> loadbalancer/network: internal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sni:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ingress:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: ingress-internal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> labels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> network: internal
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Each gardenlet can define how the handler of a certain &lt;code>ExposureClass&lt;/code> needs to be implemented for the Seed(s) where it is responsible for.&lt;/p>
&lt;p>The &lt;code>.name&lt;/code> is the name of the handler config and it must match to the &lt;code>.handler&lt;/code> in the &lt;code>ExposureClass&lt;/code>.&lt;/p>
&lt;p>All control planes on a &lt;code>Seed&lt;/code> are exposed via a load balancer, either a dedicated one or a central shared one.
The load balancer service needs to be configured in a way that it is reachable from the target network environment.
Therefore, the configuration of load balancer service need to be specified, which can be done via the &lt;code>.loadBalancerService&lt;/code> section.
The common way to influence load balancer service behaviour is via annotations where the respective cloud-controller-manager will react on and configure the infrastructure load balancer accordingly.&lt;/p>
&lt;p>The control planes on a &lt;code>Seed&lt;/code> will be exposed via a central load balancer and with Envoy via TLS SNI passthrough proxy.
In this case, the gardenlet will install a dedicated ingress gateway (Envoy + load balancer + respective configuration) for each handler on the &lt;code>Seed&lt;/code>.
The configuration of the ingress gateways can be controlled via the &lt;code>.sni&lt;/code> section in the same way like for the default ingress gateways.&lt;/p></description></item><item><title>Docs: Extension</title><link>https://gardener.cloud/docs/gardener/extensions/extension/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/extensions/extension/</guid><description>
&lt;h1 id="contract-extension-resource">Contract: &lt;code>Extension&lt;/code> Resource&lt;/h1>
&lt;p>Gardener defines common procedures which must be passed to create a functioning shoot cluster. Well known steps are represented by special resources like &lt;code>Infrastructure&lt;/code>, &lt;code>OperatingSystemConfig&lt;/code> or &lt;code>DNS&lt;/code>. These resources are typically reconciled by dedicated controllers setting up the infrastructure on the hyperscaler or managing DNS entries, etc.&lt;/p>
&lt;p>But, some requirements don&amp;rsquo;t match with those special resources or don&amp;rsquo;t depend on being proceeded at a specific step in the creation / deletion flow of the shoot. They require a more generic hook. Therefore, Gardener offers the &lt;code>Extension&lt;/code> resource.&lt;/p>
&lt;h2 id="what-is-required-to-register-and-support-an-extension-type">What is required to register and support an Extension type?&lt;/h2>
&lt;p>Gardener creates one &lt;code>Extension&lt;/code> resource per registered extension type in &lt;code>ControllerRegistration&lt;/code> per shoot.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: ControllerRegistration
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: extension-example
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resources:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - kind: Extension
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: example
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> globallyEnabled: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> workerlessSupported: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If &lt;code>spec.resources[].globallyEnabled&lt;/code> is &lt;code>true&lt;/code>, then the &lt;code>Extension&lt;/code> resources of the given &lt;code>type&lt;/code> is created for every shoot cluster. Set to &lt;code>false&lt;/code>, the &lt;code>Extension&lt;/code> resource is only created if configured in the &lt;code>Shoot&lt;/code> manifest. In case of workerless &lt;code>Shoot&lt;/code>, a globally enabled &lt;code>Extension&lt;/code> resource is created only if &lt;code>spec.resources[].workerlessSupported&lt;/code> is also set to &lt;code>true&lt;/code>. If an extension configured in the spec of a workerless &lt;code>Shoot&lt;/code> is not supported yet, the admission request will be rejected.&lt;/p>
&lt;p>The &lt;code>Extension&lt;/code> resources are created in the shoot namespace of the seed cluster.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Extension
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: example
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: shoot--foo--bar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: example
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> providerConfig: {}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Your controller needs to reconcile &lt;code>extensions.extensions.gardener.cloud&lt;/code>. Since there can exist multiple &lt;code>Extension&lt;/code> resources per shoot, each one holds a &lt;code>spec.type&lt;/code> field to let controllers check their responsibility (similar to all other extension resources of Gardener).&lt;/p>
&lt;h2 id="providerconfig">ProviderConfig&lt;/h2>
&lt;p>It is possible to provide data in the &lt;code>Shoot&lt;/code> resource which is copied to &lt;code>spec.providerConfig&lt;/code> of the &lt;code>Extension&lt;/code> resource.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Shoot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: bar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: garden-foo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> extensions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - type: example
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> providerConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> foo: bar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>results in&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Extension
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: example
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: shoot--foo--bar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: example
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> providerConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> foo: bar
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="shoot-reconciliation-flow-and-extension-status">Shoot Reconciliation Flow and Extension Status&lt;/h2>
&lt;p>Gardener creates Extension resources as part of the Shoot reconciliation. Moreover, it is guaranteed that the &lt;a href="https://gardener.cloud/docs/gardener/extensions/cluster/">Cluster&lt;/a> resource exists before the &lt;code>Extension&lt;/code> resource is created. &lt;code>Extension&lt;/code>s can be reconciled at different stages during Shoot reconciliation depending on the defined extension lifecycle strategy in the respective &lt;a href="https://gardener.cloud/docs/gardener/extensions/controllerregistration/">ControllerRegistration&lt;/a> resource. Please consult the &lt;a href="https://gardener.cloud/docs/gardener/extensions/controllerregistration/#extension-lifecycle">Extension Lifecycle&lt;/a> section for more information.&lt;/p>
&lt;p>For an &lt;code>Extension&lt;/code> controller it is crucial to maintain the &lt;code>Extension&lt;/code>&amp;rsquo;s status correctly. At the end Gardener checks the status of each &lt;code>Extension&lt;/code> and only reports a successful shoot reconciliation if the state of the last operation is &lt;code>Succeeded&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Extension
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generation: 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: example
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: shoot--foo--bar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: example
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>status:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lastOperation:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> state: Succeeded
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> observedGeneration: 1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Extensions</title><link>https://gardener.cloud/docs/gardener/api-reference/extensions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/api-reference/extensions/</guid><description>
&lt;p>Packages:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="#extensions.gardener.cloud%2fv1alpha1">extensions.gardener.cloud/v1alpha1&lt;/a>
&lt;/li>
&lt;/ul>
&lt;h2 id="extensions.gardener.cloud/v1alpha1">extensions.gardener.cloud/v1alpha1&lt;/h2>
&lt;p>
&lt;p>Package v1alpha1 is the v1alpha1 version of the API.&lt;/p>
&lt;/p>
Resource Types:
&lt;ul>&lt;li>
&lt;a href="#extensions.gardener.cloud/v1alpha1.BackupBucket">BackupBucket&lt;/a>
&lt;/li>&lt;li>
&lt;a href="#extensions.gardener.cloud/v1alpha1.BackupEntry">BackupEntry&lt;/a>
&lt;/li>&lt;li>
&lt;a href="#extensions.gardener.cloud/v1alpha1.Bastion">Bastion&lt;/a>
&lt;/li>&lt;li>
&lt;a href="#extensions.gardener.cloud/v1alpha1.Cluster">Cluster&lt;/a>
&lt;/li>&lt;li>
&lt;a href="#extensions.gardener.cloud/v1alpha1.ContainerRuntime">ContainerRuntime&lt;/a>
&lt;/li>&lt;li>
&lt;a href="#extensions.gardener.cloud/v1alpha1.ControlPlane">ControlPlane&lt;/a>
&lt;/li>&lt;li>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DNSRecord">DNSRecord&lt;/a>
&lt;/li>&lt;li>
&lt;a href="#extensions.gardener.cloud/v1alpha1.Extension">Extension&lt;/a>
&lt;/li>&lt;li>
&lt;a href="#extensions.gardener.cloud/v1alpha1.Infrastructure">Infrastructure&lt;/a>
&lt;/li>&lt;li>
&lt;a href="#extensions.gardener.cloud/v1alpha1.Network">Network&lt;/a>
&lt;/li>&lt;li>
&lt;a href="#extensions.gardener.cloud/v1alpha1.OperatingSystemConfig">OperatingSystemConfig&lt;/a>
&lt;/li>&lt;li>
&lt;a href="#extensions.gardener.cloud/v1alpha1.Worker">Worker&lt;/a>
&lt;/li>&lt;/ul>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.BackupBucket">BackupBucket
&lt;/h3>
&lt;p>
&lt;p>BackupBucket is a specification for backup bucket.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>apiVersion&lt;/code>&lt;/br>
string&lt;/td>
&lt;td>
&lt;code>
extensions.gardener.cloud/v1alpha1
&lt;/code>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
string
&lt;/td>
&lt;td>&lt;code>BackupBucket&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>spec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.BackupBucketSpec">
BackupBucketSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Specification of the BackupBucket.
If the object’s deletion timestamp is set, this field is immutable.&lt;/p>
&lt;br/>
&lt;br/>
&lt;table>
&lt;tr>
&lt;td>
&lt;code>DefaultSpec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultSpec">
DefaultSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultSpec&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultSpec is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>region&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Region is the region of this bucket. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>secretRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#secretreference-v1-core">
Kubernetes core/v1.SecretReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>SecretRef is a reference to a secret that contains the credentials to access object store.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>status&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.BackupBucketStatus">
BackupBucketStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.BackupEntry">BackupEntry
&lt;/h3>
&lt;p>
&lt;p>BackupEntry is a specification for backup Entry.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>apiVersion&lt;/code>&lt;/br>
string&lt;/td>
&lt;td>
&lt;code>
extensions.gardener.cloud/v1alpha1
&lt;/code>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
string
&lt;/td>
&lt;td>&lt;code>BackupEntry&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>spec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.BackupEntrySpec">
BackupEntrySpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Specification of the BackupEntry.
If the object’s deletion timestamp is set, this field is immutable.&lt;/p>
&lt;br/>
&lt;br/>
&lt;table>
&lt;tr>
&lt;td>
&lt;code>DefaultSpec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultSpec">
DefaultSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultSpec&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultSpec is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>backupBucketProviderStatus&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>BackupBucketProviderStatus contains the provider status that has
been generated by the controller responsible for the &lt;code>BackupBucket&lt;/code> resource.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>region&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Region is the region of this Entry. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>bucketName&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>BucketName is the name of backup bucket for this Backup Entry.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>secretRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#secretreference-v1-core">
Kubernetes core/v1.SecretReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>SecretRef is a reference to a secret that contains the credentials to access object store.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>status&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.BackupEntryStatus">
BackupEntryStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.Bastion">Bastion
&lt;/h3>
&lt;p>
&lt;p>Bastion is a bastion or jump host that is dynamically created
to provide SSH access to shoot nodes.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>apiVersion&lt;/code>&lt;/br>
string&lt;/td>
&lt;td>
&lt;code>
extensions.gardener.cloud/v1alpha1
&lt;/code>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
string
&lt;/td>
&lt;td>&lt;code>Bastion&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>spec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.BastionSpec">
BastionSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Spec is the specification of this Bastion.
If the object’s deletion timestamp is set, this field is immutable.&lt;/p>
&lt;br/>
&lt;br/>
&lt;table>
&lt;tr>
&lt;td>
&lt;code>DefaultSpec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultSpec">
DefaultSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultSpec&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultSpec is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>userData&lt;/code>&lt;/br>
&lt;em>
[]byte
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>UserData is the base64-encoded user data for the bastion instance. This should
contain code to provision the SSH key on the bastion instance.
This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>ingress&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.BastionIngressPolicy">
[]BastionIngressPolicy
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Ingress controls from where the created bastion host should be reachable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>status&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.BastionStatus">
BastionStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Status is the bastion’s status.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.Cluster">Cluster
&lt;/h3>
&lt;p>
&lt;p>Cluster is a specification for a Cluster resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>apiVersion&lt;/code>&lt;/br>
string&lt;/td>
&lt;td>
&lt;code>
extensions.gardener.cloud/v1alpha1
&lt;/code>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
string
&lt;/td>
&lt;td>&lt;code>Cluster&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>spec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.ClusterSpec">
ClusterSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;br/>
&lt;br/>
&lt;table>
&lt;tr>
&lt;td>
&lt;code>cloudProfile&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>CloudProfile is a raw extension field that contains the cloudprofile resource referenced
by the shoot that has to be reconciled.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>seed&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Seed is a raw extension field that contains the seed resource referenced by the shoot that
has to be reconciled.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>shoot&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Shoot is a raw extension field that contains the shoot resource that has to be reconciled.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.ContainerRuntime">ContainerRuntime
&lt;/h3>
&lt;p>
&lt;p>ContainerRuntime is a specification for a container runtime resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>apiVersion&lt;/code>&lt;/br>
string&lt;/td>
&lt;td>
&lt;code>
extensions.gardener.cloud/v1alpha1
&lt;/code>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
string
&lt;/td>
&lt;td>&lt;code>ContainerRuntime&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>spec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.ContainerRuntimeSpec">
ContainerRuntimeSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Specification of the ContainerRuntime.
If the object’s deletion timestamp is set, this field is immutable.&lt;/p>
&lt;br/>
&lt;br/>
&lt;table>
&lt;tr>
&lt;td>
&lt;code>binaryPath&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>BinaryPath is the Worker’s machine path where container runtime extensions should copy the binaries to.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>workerPool&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.ContainerRuntimeWorkerPool">
ContainerRuntimeWorkerPool
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>WorkerPool identifies the worker pool of the Shoot.
For each worker pool and type, Gardener deploys a ContainerRuntime CRD.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>DefaultSpec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultSpec">
DefaultSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultSpec&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultSpec is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>status&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.ContainerRuntimeStatus">
ContainerRuntimeStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.ControlPlane">ControlPlane
&lt;/h3>
&lt;p>
&lt;p>ControlPlane is a specification for a ControlPlane resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>apiVersion&lt;/code>&lt;/br>
string&lt;/td>
&lt;td>
&lt;code>
extensions.gardener.cloud/v1alpha1
&lt;/code>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
string
&lt;/td>
&lt;td>&lt;code>ControlPlane&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>spec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.ControlPlaneSpec">
ControlPlaneSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Specification of the ControlPlane.
If the object’s deletion timestamp is set, this field is immutable.&lt;/p>
&lt;br/>
&lt;br/>
&lt;table>
&lt;tr>
&lt;td>
&lt;code>DefaultSpec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultSpec">
DefaultSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultSpec&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultSpec is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>purpose&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.Purpose">
Purpose
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Purpose contains the data if a cloud provider needs additional components in order to expose the control plane.
This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>infrastructureProviderStatus&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>InfrastructureProviderStatus contains the provider status that has
been generated by the controller responsible for the &lt;code>Infrastructure&lt;/code> resource.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>region&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Region is the region of this control plane. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>secretRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#secretreference-v1-core">
Kubernetes core/v1.SecretReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>SecretRef is a reference to a secret that contains the cloud provider specific credentials.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>status&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.ControlPlaneStatus">
ControlPlaneStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.DNSRecord">DNSRecord
&lt;/h3>
&lt;p>
&lt;p>DNSRecord is a specification for a DNSRecord resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>apiVersion&lt;/code>&lt;/br>
string&lt;/td>
&lt;td>
&lt;code>
extensions.gardener.cloud/v1alpha1
&lt;/code>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
string
&lt;/td>
&lt;td>&lt;code>DNSRecord&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>spec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DNSRecordSpec">
DNSRecordSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Specification of the DNSRecord.
If the object’s deletion timestamp is set, this field is immutable.&lt;/p>
&lt;br/>
&lt;br/>
&lt;table>
&lt;tr>
&lt;td>
&lt;code>DefaultSpec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultSpec">
DefaultSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultSpec&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultSpec is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>secretRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#secretreference-v1-core">
Kubernetes core/v1.SecretReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>SecretRef is a reference to a secret that contains the cloud provider specific credentials.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>region&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Region is the region of this DNS record. If not specified, the region specified in SecretRef will be used.
If that is also not specified, the extension controller will use its default region.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>zone&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Zone is the DNS hosted zone of this DNS record. If not specified, it will be determined automatically by
getting all hosted zones of the account and searching for the longest zone name that is a suffix of Name.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Name is the fully qualified domain name, e.g. “api.&lt;shoot domain="">”. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>recordType&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DNSRecordType">
DNSRecordType
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>RecordType is the DNS record type. Only A, CNAME, and TXT records are currently supported. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>values&lt;/code>&lt;/br>
&lt;em>
[]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Values is a list of IP addresses for A records, a single hostname for CNAME records, or a list of texts for TXT records.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>ttl&lt;/code>&lt;/br>
&lt;em>
int64
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>TTL is the time to live in seconds. Defaults to 120.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>status&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DNSRecordStatus">
DNSRecordStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.Extension">Extension
&lt;/h3>
&lt;p>
&lt;p>Extension is a specification for a Extension resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>apiVersion&lt;/code>&lt;/br>
string&lt;/td>
&lt;td>
&lt;code>
extensions.gardener.cloud/v1alpha1
&lt;/code>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
string
&lt;/td>
&lt;td>&lt;code>Extension&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>spec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.ExtensionSpec">
ExtensionSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Specification of the Extension.
If the object’s deletion timestamp is set, this field is immutable.&lt;/p>
&lt;br/>
&lt;br/>
&lt;table>
&lt;tr>
&lt;td>
&lt;code>DefaultSpec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultSpec">
DefaultSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultSpec&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultSpec is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>status&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.ExtensionStatus">
ExtensionStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.Infrastructure">Infrastructure
&lt;/h3>
&lt;p>
&lt;p>Infrastructure is a specification for cloud provider infrastructure.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>apiVersion&lt;/code>&lt;/br>
string&lt;/td>
&lt;td>
&lt;code>
extensions.gardener.cloud/v1alpha1
&lt;/code>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
string
&lt;/td>
&lt;td>&lt;code>Infrastructure&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>spec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.InfrastructureSpec">
InfrastructureSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Specification of the Infrastructure.
If the object’s deletion timestamp is set, this field is immutable.&lt;/p>
&lt;br/>
&lt;br/>
&lt;table>
&lt;tr>
&lt;td>
&lt;code>DefaultSpec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultSpec">
DefaultSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultSpec&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultSpec is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>region&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Region is the region of this infrastructure. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>secretRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#secretreference-v1-core">
Kubernetes core/v1.SecretReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>SecretRef is a reference to a secret that contains the cloud provider credentials.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>sshPublicKey&lt;/code>&lt;/br>
&lt;em>
[]byte
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SSHPublicKey is the public SSH key that should be used with this infrastructure.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>status&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.InfrastructureStatus">
InfrastructureStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.Network">Network
&lt;/h3>
&lt;p>
&lt;p>Network is the specification for cluster networking.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>apiVersion&lt;/code>&lt;/br>
string&lt;/td>
&lt;td>
&lt;code>
extensions.gardener.cloud/v1alpha1
&lt;/code>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
string
&lt;/td>
&lt;td>&lt;code>Network&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>spec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.NetworkSpec">
NetworkSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Specification of the Network.
If the object’s deletion timestamp is set, this field is immutable.&lt;/p>
&lt;br/>
&lt;br/>
&lt;table>
&lt;tr>
&lt;td>
&lt;code>DefaultSpec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultSpec">
DefaultSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultSpec&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultSpec is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>podCIDR&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>PodCIDR defines the CIDR that will be used for pods. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>serviceCIDR&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>ServiceCIDR defines the CIDR that will be used for services. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>ipFamilies&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.IPFamily">
[]IPFamily
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>IPFamilies specifies the IP protocol versions to use for shoot networking. This field is immutable.
See &lt;a href="https://gardener.cloud/docs/gardener/ipv6/">https://github.com/gardener/gardener/blob/master/docs/usage/ipv6.md&lt;/a>&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>status&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.NetworkStatus">
NetworkStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.OperatingSystemConfig">OperatingSystemConfig
&lt;/h3>
&lt;p>
&lt;p>OperatingSystemConfig is a specification for a OperatingSystemConfig resource&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>apiVersion&lt;/code>&lt;/br>
string&lt;/td>
&lt;td>
&lt;code>
extensions.gardener.cloud/v1alpha1
&lt;/code>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
string
&lt;/td>
&lt;td>&lt;code>OperatingSystemConfig&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>spec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.OperatingSystemConfigSpec">
OperatingSystemConfigSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Specification of the OperatingSystemConfig.
If the object’s deletion timestamp is set, this field is immutable.&lt;/p>
&lt;br/>
&lt;br/>
&lt;table>
&lt;tr>
&lt;td>
&lt;code>criConfig&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.CRIConfig">
CRIConfig
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>CRI config is a structure contains configurations of the CRI library&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>DefaultSpec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultSpec">
DefaultSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultSpec&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultSpec is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>purpose&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.OperatingSystemConfigPurpose">
OperatingSystemConfigPurpose
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Purpose describes how the result of this OperatingSystemConfig is used by Gardener. Either it
gets sent to the &lt;code>Worker&lt;/code> extension controller to bootstrap a VM, or it is downloaded by the
cloud-config-downloader script already running on a bootstrapped VM.
This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>reloadConfigFilePath&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ReloadConfigFilePath is the path to the generated operating system configuration. If set, controllers
are asked to use it when determining the .status.command of this resource. For example, if for CoreOS
the reload-path might be “/var/lib/config”; then the controller shall set .status.command to
“/usr/bin/coreos-cloudinit –from-file=/var/lib/config”.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>units&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.Unit">
[]Unit
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Units is a list of unit for the operating system configuration (usually, a systemd unit).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>files&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.File">
[]File
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Files is a list of files that should get written to the host’s file system.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>status&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.OperatingSystemConfigStatus">
OperatingSystemConfigStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.Worker">Worker
&lt;/h3>
&lt;p>
&lt;p>Worker is a specification for a Worker resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>apiVersion&lt;/code>&lt;/br>
string&lt;/td>
&lt;td>
&lt;code>
extensions.gardener.cloud/v1alpha1
&lt;/code>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kind&lt;/code>&lt;/br>
string
&lt;/td>
&lt;td>&lt;code>Worker&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>metadata&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#objectmeta-v1-meta">
Kubernetes meta/v1.ObjectMeta
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
Refer to the Kubernetes API documentation for the fields of the
&lt;code>metadata&lt;/code> field.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>spec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.WorkerSpec">
WorkerSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Specification of the Worker.
If the object’s deletion timestamp is set, this field is immutable.&lt;/p>
&lt;br/>
&lt;br/>
&lt;table>
&lt;tr>
&lt;td>
&lt;code>DefaultSpec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultSpec">
DefaultSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultSpec&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultSpec is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>infrastructureProviderStatus&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>InfrastructureProviderStatus is a raw extension field that contains the provider status that has
been generated by the controller responsible for the &lt;code>Infrastructure&lt;/code> resource.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>region&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Region is the name of the region where the worker pool should be deployed to. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>secretRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#secretreference-v1-core">
Kubernetes core/v1.SecretReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>SecretRef is a reference to a secret that contains the cloud provider specific credentials.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>sshPublicKey&lt;/code>&lt;/br>
&lt;em>
[]byte
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SSHPublicKey is the public SSH key that should be used with these workers.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>pools&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.WorkerPool">
[]WorkerPool
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Pools is a list of worker pools.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>status&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.WorkerStatus">
WorkerStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.BackupBucketSpec">BackupBucketSpec
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.BackupBucket">BackupBucket&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>BackupBucketSpec is the spec for an BackupBucket resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>DefaultSpec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultSpec">
DefaultSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultSpec&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultSpec is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>region&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Region is the region of this bucket. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>secretRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#secretreference-v1-core">
Kubernetes core/v1.SecretReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>SecretRef is a reference to a secret that contains the credentials to access object store.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.BackupBucketStatus">BackupBucketStatus
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.BackupBucket">BackupBucket&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>BackupBucketStatus is the status for an BackupBucket resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>DefaultStatus&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultStatus">
DefaultStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultStatus&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultStatus is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>generatedSecretRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#secretreference-v1-core">
Kubernetes core/v1.SecretReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>GeneratedSecretRef is reference to the secret generated by backup bucket, which
will have object store specific credentials.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.BackupEntrySpec">BackupEntrySpec
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.BackupEntry">BackupEntry&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>BackupEntrySpec is the spec for an BackupEntry resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>DefaultSpec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultSpec">
DefaultSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultSpec&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultSpec is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>backupBucketProviderStatus&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>BackupBucketProviderStatus contains the provider status that has
been generated by the controller responsible for the &lt;code>BackupBucket&lt;/code> resource.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>region&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Region is the region of this Entry. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>bucketName&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>BucketName is the name of backup bucket for this Backup Entry.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>secretRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#secretreference-v1-core">
Kubernetes core/v1.SecretReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>SecretRef is a reference to a secret that contains the credentials to access object store.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.BackupEntryStatus">BackupEntryStatus
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.BackupEntry">BackupEntry&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>BackupEntryStatus is the status for an BackupEntry resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>DefaultStatus&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultStatus">
DefaultStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultStatus&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultStatus is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.BastionIngressPolicy">BastionIngressPolicy
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.BastionSpec">BastionSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>BastionIngressPolicy represents an ingress policy for SSH bastion hosts.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>ipBlock&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#ipblock-v1-networking">
Kubernetes networking/v1.IPBlock
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>IPBlock defines an IP block that is allowed to access the bastion.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.BastionSpec">BastionSpec
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.Bastion">Bastion&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>BastionSpec contains the specification for an SSH bastion host.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>DefaultSpec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultSpec">
DefaultSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultSpec&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultSpec is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>userData&lt;/code>&lt;/br>
&lt;em>
[]byte
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>UserData is the base64-encoded user data for the bastion instance. This should
contain code to provision the SSH key on the bastion instance.
This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>ingress&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.BastionIngressPolicy">
[]BastionIngressPolicy
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Ingress controls from where the created bastion host should be reachable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.BastionStatus">BastionStatus
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.Bastion">Bastion&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>BastionStatus holds the most recently observed status of the Bastion.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>DefaultStatus&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultStatus">
DefaultStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultStatus&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultStatus is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>ingress&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#loadbalanceringress-v1-core">
Kubernetes core/v1.LoadBalancerIngress
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Ingress is the external IP and/or hostname of the bastion host.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.CRIConfig">CRIConfig
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.OperatingSystemConfigSpec">OperatingSystemConfigSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>CRIConfig contains configurations of the CRI library.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.CRIName">
CRIName
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Name is a mandatory string containing the name of the CRI library. Supported values are &lt;code>docker&lt;/code> and &lt;code>containerd&lt;/code>.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.CRIName">CRIName
(&lt;code>string&lt;/code> alias)&lt;/p>&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.CRIConfig">CRIConfig&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>CRIName is a type alias for the CRI name string.&lt;/p>
&lt;/p>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.CloudConfig">CloudConfig
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.OperatingSystemConfigStatus">OperatingSystemConfigStatus&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>CloudConfig contains the generated output for the given operating system
config spec. It contains a reference to a secret as the result may contain confidential data.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>secretRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#secretreference-v1-core">
Kubernetes core/v1.SecretReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>SecretRef is a reference to a secret that contains the actual result of the generated cloud config.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.ClusterSpec">ClusterSpec
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.Cluster">Cluster&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ClusterSpec is the spec for a Cluster resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>cloudProfile&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>CloudProfile is a raw extension field that contains the cloudprofile resource referenced
by the shoot that has to be reconciled.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>seed&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Seed is a raw extension field that contains the seed resource referenced by the shoot that
has to be reconciled.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>shoot&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Shoot is a raw extension field that contains the shoot resource that has to be reconciled.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.ContainerRuntimeSpec">ContainerRuntimeSpec
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.ContainerRuntime">ContainerRuntime&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ContainerRuntimeSpec is the spec for a ContainerRuntime resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>binaryPath&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>BinaryPath is the Worker’s machine path where container runtime extensions should copy the binaries to.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>workerPool&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.ContainerRuntimeWorkerPool">
ContainerRuntimeWorkerPool
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>WorkerPool identifies the worker pool of the Shoot.
For each worker pool and type, Gardener deploys a ContainerRuntime CRD.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>DefaultSpec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultSpec">
DefaultSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultSpec&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultSpec is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.ContainerRuntimeStatus">ContainerRuntimeStatus
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.ContainerRuntime">ContainerRuntime&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ContainerRuntimeStatus is the status for a ContainerRuntime resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>DefaultStatus&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultStatus">
DefaultStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultStatus&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultStatus is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.ContainerRuntimeWorkerPool">ContainerRuntimeWorkerPool
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.ContainerRuntimeSpec">ContainerRuntimeSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ContainerRuntimeWorkerPool identifies a Shoot worker pool by its name and selector.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Name specifies the name of the worker pool the container runtime should be available for.
This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>selector&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#labelselector-v1-meta">
Kubernetes meta/v1.LabelSelector
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Selector is the label selector used by the extension to match the nodes belonging to the worker pool.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.ControlPlaneSpec">ControlPlaneSpec
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.ControlPlane">ControlPlane&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ControlPlaneSpec is the spec of a ControlPlane resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>DefaultSpec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultSpec">
DefaultSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultSpec&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultSpec is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>purpose&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.Purpose">
Purpose
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Purpose contains the data if a cloud provider needs additional components in order to expose the control plane.
This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>infrastructureProviderStatus&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>InfrastructureProviderStatus contains the provider status that has
been generated by the controller responsible for the &lt;code>Infrastructure&lt;/code> resource.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>region&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Region is the region of this control plane. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>secretRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#secretreference-v1-core">
Kubernetes core/v1.SecretReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>SecretRef is a reference to a secret that contains the cloud provider specific credentials.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.ControlPlaneStatus">ControlPlaneStatus
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.ControlPlane">ControlPlane&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ControlPlaneStatus is the status of a ControlPlane resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>DefaultStatus&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultStatus">
DefaultStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultStatus&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultStatus is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.DNSRecordSpec">DNSRecordSpec
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DNSRecord">DNSRecord&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>DNSRecordSpec is the spec of a DNSRecord resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>DefaultSpec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultSpec">
DefaultSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultSpec&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultSpec is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>secretRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#secretreference-v1-core">
Kubernetes core/v1.SecretReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>SecretRef is a reference to a secret that contains the cloud provider specific credentials.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>region&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Region is the region of this DNS record. If not specified, the region specified in SecretRef will be used.
If that is also not specified, the extension controller will use its default region.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>zone&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Zone is the DNS hosted zone of this DNS record. If not specified, it will be determined automatically by
getting all hosted zones of the account and searching for the longest zone name that is a suffix of Name.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Name is the fully qualified domain name, e.g. “api.&lt;shoot domain="">”. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>recordType&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DNSRecordType">
DNSRecordType
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>RecordType is the DNS record type. Only A, CNAME, and TXT records are currently supported. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>values&lt;/code>&lt;/br>
&lt;em>
[]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Values is a list of IP addresses for A records, a single hostname for CNAME records, or a list of texts for TXT records.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>ttl&lt;/code>&lt;/br>
&lt;em>
int64
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>TTL is the time to live in seconds. Defaults to 120.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.DNSRecordStatus">DNSRecordStatus
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DNSRecord">DNSRecord&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>DNSRecordStatus is the status of a DNSRecord resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>DefaultStatus&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultStatus">
DefaultStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultStatus&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultStatus is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>zone&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Zone is the DNS hosted zone of this DNS record.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.DNSRecordType">DNSRecordType
(&lt;code>string&lt;/code> alias)&lt;/p>&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DNSRecordSpec">DNSRecordSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>DNSRecordType is a string alias.&lt;/p>
&lt;/p>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.DataVolume">DataVolume
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.WorkerPool">WorkerPool&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>DataVolume contains information about a data volume.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Name of the volume to make it referencable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>type&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Type is the type of the volume.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>size&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Size is the of the root volume.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>encrypted&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Encrypted determines if the volume should be encrypted.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.DefaultSpec">DefaultSpec
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.BackupBucketSpec">BackupBucketSpec&lt;/a>,
&lt;a href="#extensions.gardener.cloud/v1alpha1.BackupEntrySpec">BackupEntrySpec&lt;/a>,
&lt;a href="#extensions.gardener.cloud/v1alpha1.BastionSpec">BastionSpec&lt;/a>,
&lt;a href="#extensions.gardener.cloud/v1alpha1.ContainerRuntimeSpec">ContainerRuntimeSpec&lt;/a>,
&lt;a href="#extensions.gardener.cloud/v1alpha1.ControlPlaneSpec">ControlPlaneSpec&lt;/a>,
&lt;a href="#extensions.gardener.cloud/v1alpha1.DNSRecordSpec">DNSRecordSpec&lt;/a>,
&lt;a href="#extensions.gardener.cloud/v1alpha1.ExtensionSpec">ExtensionSpec&lt;/a>,
&lt;a href="#extensions.gardener.cloud/v1alpha1.InfrastructureSpec">InfrastructureSpec&lt;/a>,
&lt;a href="#extensions.gardener.cloud/v1alpha1.NetworkSpec">NetworkSpec&lt;/a>,
&lt;a href="#extensions.gardener.cloud/v1alpha1.OperatingSystemConfigSpec">OperatingSystemConfigSpec&lt;/a>,
&lt;a href="#extensions.gardener.cloud/v1alpha1.WorkerSpec">WorkerSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>DefaultSpec contains common status fields for every extension resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>type&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Type contains the instance of the resource’s kind.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>providerConfig&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ProviderConfig is the provider specific configuration.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.DefaultStatus">DefaultStatus
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.BackupBucketStatus">BackupBucketStatus&lt;/a>,
&lt;a href="#extensions.gardener.cloud/v1alpha1.BackupEntryStatus">BackupEntryStatus&lt;/a>,
&lt;a href="#extensions.gardener.cloud/v1alpha1.BastionStatus">BastionStatus&lt;/a>,
&lt;a href="#extensions.gardener.cloud/v1alpha1.ContainerRuntimeStatus">ContainerRuntimeStatus&lt;/a>,
&lt;a href="#extensions.gardener.cloud/v1alpha1.ControlPlaneStatus">ControlPlaneStatus&lt;/a>,
&lt;a href="#extensions.gardener.cloud/v1alpha1.DNSRecordStatus">DNSRecordStatus&lt;/a>,
&lt;a href="#extensions.gardener.cloud/v1alpha1.ExtensionStatus">ExtensionStatus&lt;/a>,
&lt;a href="#extensions.gardener.cloud/v1alpha1.InfrastructureStatus">InfrastructureStatus&lt;/a>,
&lt;a href="#extensions.gardener.cloud/v1alpha1.NetworkStatus">NetworkStatus&lt;/a>,
&lt;a href="#extensions.gardener.cloud/v1alpha1.OperatingSystemConfigStatus">OperatingSystemConfigStatus&lt;/a>,
&lt;a href="#extensions.gardener.cloud/v1alpha1.WorkerStatus">WorkerStatus&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>DefaultStatus contains common status fields for every extension resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>providerStatus&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ProviderStatus contains provider-specific status.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>conditions&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://gardener.cloud/docs/gardener/api-reference/core/#core.gardener.cloud/v1beta1.Condition">
[]github.com/gardener/gardener/pkg/apis/core/v1beta1.Condition
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Conditions represents the latest available observations of a Seed’s current state.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastError&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://gardener.cloud/docs/gardener/api-reference/core/#core.gardener.cloud/v1beta1.LastError">
github.com/gardener/gardener/pkg/apis/core/v1beta1.LastError
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastError holds information about the last occurred error during an operation.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>lastOperation&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://gardener.cloud/docs/gardener/api-reference/core/#core.gardener.cloud/v1beta1.LastOperation">
github.com/gardener/gardener/pkg/apis/core/v1beta1.LastOperation
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>LastOperation holds information about the last operation on the resource.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>observedGeneration&lt;/code>&lt;/br>
&lt;em>
int64
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>ObservedGeneration is the most recent generation observed for this resource.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>state&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>State can be filled by the operating controller with what ever data it needs.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>resources&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://gardener.cloud/docs/gardener/api-reference/core/#core.gardener.cloud/v1beta1.NamedResourceReference">
[]github.com/gardener/gardener/pkg/apis/core/v1beta1.NamedResourceReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Resources holds a list of named resource references that can be referred to in the state by their names.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.DropIn">DropIn
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.Unit">Unit&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>DropIn is a drop-in configuration for a systemd unit.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Name is the name of the drop-in.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>content&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Content is the content of the drop-in.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.ExtensionSpec">ExtensionSpec
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.Extension">Extension&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ExtensionSpec is the spec for a Extension resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>DefaultSpec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultSpec">
DefaultSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultSpec&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultSpec is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.ExtensionStatus">ExtensionStatus
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.Extension">Extension&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>ExtensionStatus is the status for a Extension resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>DefaultStatus&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultStatus">
DefaultStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultStatus&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultStatus is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.File">File
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.OperatingSystemConfigSpec">OperatingSystemConfigSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>File is a file that should get written to the host’s file system. The content can either be inlined or
referenced from a secret in the same namespace.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>path&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Path is the path of the file system where the file should get written to.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>permissions&lt;/code>&lt;/br>
&lt;em>
int32
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Permissions describes with which permissions the file should get written to the file system.
Should be defaulted to octal 0644.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>content&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.FileContent">
FileContent
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Content describe the file’s content.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.FileCodecID">FileCodecID
(&lt;code>string&lt;/code> alias)&lt;/p>&lt;/h3>
&lt;p>
&lt;p>FileCodecID is the id of a FileCodec for cloud-init scripts.&lt;/p>
&lt;/p>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.FileContent">FileContent
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.File">File&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>FileContent can either reference a secret or contain inline configuration.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>secretRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.FileContentSecretRef">
FileContentSecretRef
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SecretRef is a struct that contains information about the referenced secret.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>inline&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.FileContentInline">
FileContentInline
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Inline is a struct that contains information about the inlined data.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>transmitUnencoded&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>TransmitUnencoded set to true will ensure that the os-extension does not encode the file content when sent to the node.
This for example can be used to manipulate the clear-text content before it reaches the node.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.FileContentInline">FileContentInline
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.FileContent">FileContent&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>FileContentInline contains keys for inlining a file content’s data and encoding.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>encoding&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Encoding is the file’s encoding (e.g. base64).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>data&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Data is the file’s data.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.FileContentSecretRef">FileContentSecretRef
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.FileContent">FileContent&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>FileContentSecretRef contains keys for referencing a file content’s data from a secret in the same namespace.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Name is the name of the secret.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>dataKey&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>DataKey is the key in the secret’s &lt;code>.data&lt;/code> field that should be read.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.IPFamily">IPFamily
(&lt;code>string&lt;/code> alias)&lt;/p>&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.NetworkSpec">NetworkSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>IPFamily is a type for specifying an IP protocol version to use in Gardener clusters.&lt;/p>
&lt;/p>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.InfrastructureSpec">InfrastructureSpec
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.Infrastructure">Infrastructure&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>InfrastructureSpec is the spec for an Infrastructure resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>DefaultSpec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultSpec">
DefaultSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultSpec&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultSpec is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>region&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Region is the region of this infrastructure. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>secretRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#secretreference-v1-core">
Kubernetes core/v1.SecretReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>SecretRef is a reference to a secret that contains the cloud provider credentials.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>sshPublicKey&lt;/code>&lt;/br>
&lt;em>
[]byte
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SSHPublicKey is the public SSH key that should be used with this infrastructure.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.InfrastructureStatus">InfrastructureStatus
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.Infrastructure">Infrastructure&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>InfrastructureStatus is the status for an Infrastructure resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>DefaultStatus&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultStatus">
DefaultStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultStatus&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultStatus is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>nodesCIDR&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>NodesCIDR is the CIDR of the node network that was optionally created by the acting extension controller.
This might be needed in environments in which the CIDR for the network for the shoot worker node cannot
be statically defined in the Shoot resource but must be computed dynamically.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.MachineDeployment">MachineDeployment
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.WorkerStatus">WorkerStatus&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>MachineDeployment is a created machine deployment.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Name is the name of the &lt;code>MachineDeployment&lt;/code> resource.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>minimum&lt;/code>&lt;/br>
&lt;em>
int32
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Minimum is the minimum number for this machine deployment.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>maximum&lt;/code>&lt;/br>
&lt;em>
int32
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Maximum is the maximum number for this machine deployment.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.MachineImage">MachineImage
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.WorkerPool">WorkerPool&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>MachineImage contains logical information about the name and the version of the machie image that
should be used. The logical information must be mapped to the provider-specific information (e.g.,
AMIs, …) by the provider itself.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Name is the logical name of the machine image.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>version&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Version is the version of the machine image.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.NetworkSpec">NetworkSpec
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.Network">Network&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>NetworkSpec is the spec for an Network resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>DefaultSpec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultSpec">
DefaultSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultSpec&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultSpec is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>podCIDR&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>PodCIDR defines the CIDR that will be used for pods. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>serviceCIDR&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>ServiceCIDR defines the CIDR that will be used for services. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>ipFamilies&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.IPFamily">
[]IPFamily
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>IPFamilies specifies the IP protocol versions to use for shoot networking. This field is immutable.
See &lt;a href="https://gardener.cloud/docs/gardener/ipv6/">https://github.com/gardener/gardener/blob/master/docs/usage/ipv6.md&lt;/a>&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.NetworkStatus">NetworkStatus
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.Network">Network&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>NetworkStatus is the status for an Network resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>DefaultStatus&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultStatus">
DefaultStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultStatus&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultStatus is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.NodeTemplate">NodeTemplate
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.WorkerPool">WorkerPool&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>NodeTemplate contains information about the expected node properties.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>capacity&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#resourcelist-v1-core">
Kubernetes core/v1.ResourceList
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Capacity represents the expected Node capacity.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.Object">Object
&lt;/h3>
&lt;p>
&lt;p>Object is an extension object resource.&lt;/p>
&lt;/p>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.OperatingSystemConfigPurpose">OperatingSystemConfigPurpose
(&lt;code>string&lt;/code> alias)&lt;/p>&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.OperatingSystemConfigSpec">OperatingSystemConfigSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>OperatingSystemConfigPurpose is a string alias.&lt;/p>
&lt;/p>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.OperatingSystemConfigSpec">OperatingSystemConfigSpec
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.OperatingSystemConfig">OperatingSystemConfig&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>OperatingSystemConfigSpec is the spec for a OperatingSystemConfig resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>criConfig&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.CRIConfig">
CRIConfig
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>CRI config is a structure contains configurations of the CRI library&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>DefaultSpec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultSpec">
DefaultSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultSpec&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultSpec is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>purpose&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.OperatingSystemConfigPurpose">
OperatingSystemConfigPurpose
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Purpose describes how the result of this OperatingSystemConfig is used by Gardener. Either it
gets sent to the &lt;code>Worker&lt;/code> extension controller to bootstrap a VM, or it is downloaded by the
cloud-config-downloader script already running on a bootstrapped VM.
This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>reloadConfigFilePath&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ReloadConfigFilePath is the path to the generated operating system configuration. If set, controllers
are asked to use it when determining the .status.command of this resource. For example, if for CoreOS
the reload-path might be “/var/lib/config”; then the controller shall set .status.command to
“/usr/bin/coreos-cloudinit –from-file=/var/lib/config”.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>units&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.Unit">
[]Unit
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Units is a list of unit for the operating system configuration (usually, a systemd unit).&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>files&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.File">
[]File
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Files is a list of files that should get written to the host’s file system.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.OperatingSystemConfigStatus">OperatingSystemConfigStatus
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.OperatingSystemConfig">OperatingSystemConfig&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>OperatingSystemConfigStatus is the status for a OperatingSystemConfig resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>DefaultStatus&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultStatus">
DefaultStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultStatus&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultStatus is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>cloudConfig&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.CloudConfig">
CloudConfig
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>CloudConfig is a structure for containing the generated output for the given operating system
config spec. It contains a reference to a secret as the result may contain confidential data.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>command&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Command is the command whose execution renews/reloads the cloud config on an existing VM, e.g.
“/usr/bin/reload-cloud-config -from-file=&lt;path>”. The &lt;path> is optionally provided by Gardener
in the .spec.reloadConfigFilePath field.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>units&lt;/code>&lt;/br>
&lt;em>
[]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Units is a list of systemd unit names that are part of the generated Cloud Config and shall be
restarted when a new version has been downloaded.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>files&lt;/code>&lt;/br>
&lt;em>
[]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Files is a list of file paths that are part of the generated Cloud Config and shall be
written to the host’s file system.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.Purpose">Purpose
(&lt;code>string&lt;/code> alias)&lt;/p>&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.ControlPlaneSpec">ControlPlaneSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>Purpose is a string alias.&lt;/p>
&lt;/p>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.Spec">Spec
&lt;/h3>
&lt;p>
&lt;p>Spec is the spec section of an Object.&lt;/p>
&lt;/p>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.Status">Status
&lt;/h3>
&lt;p>
&lt;p>Status is the status of an Object.&lt;/p>
&lt;/p>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.Unit">Unit
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.OperatingSystemConfigSpec">OperatingSystemConfigSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>Unit is a unit for the operating system configuration (usually, a systemd unit).&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Name is the name of a unit.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>command&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Command is the unit’s command.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>enable&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Enable describes whether the unit is enabled or not.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>content&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Content is the unit’s content.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>dropIns&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DropIn">
[]DropIn
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>DropIns is a list of drop-ins for this unit.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.Volume">Volume
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.WorkerPool">WorkerPool&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>Volume contains information about the root disks that should be used for worker pools.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Name of the volume to make it referencable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>type&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Type is the type of the volume.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>size&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Size is the of the root volume.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>encrypted&lt;/code>&lt;/br>
&lt;em>
bool
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Encrypted determines if the volume should be encrypted.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.WorkerPool">WorkerPool
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.WorkerSpec">WorkerSpec&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>WorkerPool is the definition of a specific worker pool.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>machineType&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>MachineType contains information about the machine type that should be used for this worker pool.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>maximum&lt;/code>&lt;/br>
&lt;em>
int32
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Maximum is the maximum size of the worker pool.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>maxSurge&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/util/intstr#IntOrString">
k8s.io/apimachinery/pkg/util/intstr.IntOrString
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>MaxSurge is maximum number of VMs that are created during an update.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>maxUnavailable&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/util/intstr#IntOrString">
k8s.io/apimachinery/pkg/util/intstr.IntOrString
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>MaxUnavailable is the maximum number of VMs that can be unavailable during an update.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>annotations&lt;/code>&lt;/br>
&lt;em>
map[string]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Annotations is a map of key/value pairs for annotations for all the &lt;code>Node&lt;/code> objects in this worker pool.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>labels&lt;/code>&lt;/br>
&lt;em>
map[string]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Labels is a map of key/value pairs for labels for all the &lt;code>Node&lt;/code> objects in this worker pool.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>taints&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#taint-v1-core">
[]Kubernetes core/v1.Taint
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Taints is a list of taints for all the &lt;code>Node&lt;/code> objects in this worker pool.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>machineImage&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.MachineImage">
MachineImage
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>MachineImage contains logical information about the name and the version of the machie image that
should be used. The logical information must be mapped to the provider-specific information (e.g.,
AMIs, …) by the provider itself.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>minimum&lt;/code>&lt;/br>
&lt;em>
int32
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Minimum is the minimum size of the worker pool.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>name&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Name is the name of this worker pool.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>providerConfig&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>ProviderConfig is a provider specific configuration for the worker pool.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>userData&lt;/code>&lt;/br>
&lt;em>
[]byte
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>UserData is a base64-encoded string that contains the data that is sent to the provider’s APIs
when a new machine/VM that is part of this worker pool shall be spawned.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>volume&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.Volume">
Volume
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Volume contains information about the root disks that should be used for this worker pool.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>dataVolumes&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DataVolume">
[]DataVolume
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>DataVolumes contains a list of additional worker volumes.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kubeletDataVolumeName&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>KubeletDataVolumeName contains the name of a dataVolume that should be used for storing kubelet state.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>zones&lt;/code>&lt;/br>
&lt;em>
[]string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Zones contains information about availability zones for this worker pool.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>machineControllerManager&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://gardener.cloud/docs/gardener/api-reference/core/#core.gardener.cloud/v1beta1.MachineControllerManagerSettings">
github.com/gardener/gardener/pkg/apis/core/v1beta1.MachineControllerManagerSettings
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>MachineControllerManagerSettings contains configurations for different worker-pools. Eg. MachineDrainTimeout, MachineHealthTimeout.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>kubernetesVersion&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>KubernetesVersion is the kubernetes version in this worker pool&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>nodeTemplate&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.NodeTemplate">
NodeTemplate
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>NodeTemplate contains resource information of the machine which is used by Cluster Autoscaler to generate nodeTemplate during scaling a nodeGroup from zero&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>architecture&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>Architecture is the CPU architecture of the worker pool machines and machine image.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.WorkerSpec">WorkerSpec
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.Worker">Worker&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>WorkerSpec is the spec for a Worker resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>DefaultSpec&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultSpec">
DefaultSpec
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultSpec&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultSpec is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>infrastructureProviderStatus&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://godoc.org/k8s.io/apimachinery/pkg/runtime#RawExtension">
k8s.io/apimachinery/pkg/runtime.RawExtension
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>InfrastructureProviderStatus is a raw extension field that contains the provider status that has
been generated by the controller responsible for the &lt;code>Infrastructure&lt;/code> resource.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>region&lt;/code>&lt;/br>
&lt;em>
string
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Region is the name of the region where the worker pool should be deployed to. This field is immutable.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>secretRef&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#secretreference-v1-core">
Kubernetes core/v1.SecretReference
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>SecretRef is a reference to a secret that contains the cloud provider specific credentials.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>sshPublicKey&lt;/code>&lt;/br>
&lt;em>
[]byte
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>SSHPublicKey is the public SSH key that should be used with these workers.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>pools&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.WorkerPool">
[]WorkerPool
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>Pools is a list of worker pools.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extensions.gardener.cloud/v1alpha1.WorkerStatus">WorkerStatus
&lt;/h3>
&lt;p>
(&lt;em>Appears on:&lt;/em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.Worker">Worker&lt;/a>)
&lt;/p>
&lt;p>
&lt;p>WorkerStatus is the status for a Worker resource.&lt;/p>
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;code>DefaultStatus&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.DefaultStatus">
DefaultStatus
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>
(Members of &lt;code>DefaultStatus&lt;/code> are embedded into this type.)
&lt;/p>
&lt;p>DefaultStatus is a structure containing common fields used by all extension resources.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>machineDeployments&lt;/code>&lt;/br>
&lt;em>
&lt;a href="#extensions.gardener.cloud/v1alpha1.MachineDeployment">
[]MachineDeployment
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;p>MachineDeployments is a list of created machine deployments. It will be used to e.g. configure
the cluster-autoscaler properly.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;code>machineDeploymentsLastUpdateTime&lt;/code>&lt;/br>
&lt;em>
&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#time-v1-meta">
Kubernetes meta/v1.Time
&lt;/a>
&lt;/em>
&lt;/td>
&lt;td>
&lt;em>(Optional)&lt;/em>
&lt;p>MachineDeploymentsLastUpdateTime is the timestamp when the status.MachineDeployments slice was last updated.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr/>
&lt;p>&lt;em>
Generated with &lt;a href="https://github.com/ahmetb/gen-crd-api-reference-docs">gen-crd-api-reference-docs&lt;/a>
&lt;/em>&lt;/p></description></item><item><title>Docs: Feature Gates</title><link>https://gardener.cloud/docs/gardener/deployment/feature_gates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/gardener/deployment/feature_gates/</guid><description>
&lt;h1 id="feature-gates-in-gardener">Feature Gates in Gardener&lt;/h1>
&lt;p>This page contains an overview of the various feature gates an administrator can specify on different Gardener components.&lt;/p>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Feature gates are a set of key=value pairs that describe Gardener features. You can turn these features on or off using the component configuration file for a specific component.&lt;/p>
&lt;p>Each Gardener component lets you enable or disable a set of feature gates that are relevant to that component. For example, this is the configuration of the &lt;a href="https://github.com/gardener/gardener/blob/master/example/20-componentconfig-gardenlet.yaml">gardenlet&lt;/a> component.&lt;/p>
&lt;p>The following tables are a summary of the feature gates that you can set on different Gardener components.&lt;/p>
&lt;ul>
&lt;li>The “Since” column contains the Gardener release when a feature is introduced or its release stage is changed.&lt;/li>
&lt;li>The “Until” column, if not empty, contains the last Gardener release in which you can still use a feature gate.&lt;/li>
&lt;li>If a feature is in the &lt;em>Alpha&lt;/em> or &lt;em>Beta&lt;/em> state, you can find the feature listed in the Alpha/Beta feature gate table.&lt;/li>
&lt;li>If a feature is stable you can find all stages for that feature listed in the Graduated/Deprecated feature gate table.&lt;/li>
&lt;li>The Graduated/Deprecated feature gate table also lists deprecated and withdrawn features.&lt;/li>
&lt;/ul>
&lt;h2 id="feature-gates-for-alpha-or-beta-features">Feature Gates for Alpha or Beta Features&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Feature&lt;/th>
&lt;th>Default&lt;/th>
&lt;th>Stage&lt;/th>
&lt;th>Since&lt;/th>
&lt;th>Until&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>HVPA&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>0.31&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>HVPAForShootedSeed&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>0.32&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DefaultSeccompProfile&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.54&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CoreDNSQueryRewriting&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.55&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IPv6SingleStack&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.63&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MutableShootSpecNetworkingNodes&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.64&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>WorkerlessShoots&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.70&lt;/code>&lt;/td>
&lt;td>&lt;code>1.78&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>WorkerlessShoots&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Beta&lt;/code>&lt;/td>
&lt;td>&lt;code>1.79&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MachineControllerManagerDeployment&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.73&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MachineControllerManagerDeployment&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Beta&lt;/code>&lt;/td>
&lt;td>&lt;code>1.81&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DisableScalingClassesForShoots&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.73&lt;/code>&lt;/td>
&lt;td>&lt;code>1.78&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DisableScalingClassesForShoots&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Beta&lt;/code>&lt;/td>
&lt;td>&lt;code>1.79&lt;/code>&lt;/td>
&lt;td>&lt;code>1.80&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DisableScalingClassesForShoots&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>GA&lt;/code>&lt;/td>
&lt;td>&lt;code>1.81&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ContainerdRegistryHostsDir&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.77&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ShootForceDeletion&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.81&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="feature-gates-for-graduated-or-deprecated-features">Feature Gates for Graduated or Deprecated Features&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Feature&lt;/th>
&lt;th>Default&lt;/th>
&lt;th>Stage&lt;/th>
&lt;th>Since&lt;/th>
&lt;th>Until&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>NodeLocalDNS&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.7&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>NodeLocalDNS&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;code>Removed&lt;/code>&lt;/td>
&lt;td>&lt;code>1.26&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>KonnectivityTunnel&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.6&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>KonnectivityTunnel&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;code>Removed&lt;/code>&lt;/td>
&lt;td>&lt;code>1.27&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MountHostCADirectories&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.11&lt;/code>&lt;/td>
&lt;td>&lt;code>1.25&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MountHostCADirectories&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Beta&lt;/code>&lt;/td>
&lt;td>&lt;code>1.26&lt;/code>&lt;/td>
&lt;td>&lt;code>1.27&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MountHostCADirectories&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>GA&lt;/code>&lt;/td>
&lt;td>&lt;code>1.27&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MountHostCADirectories&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;code>Removed&lt;/code>&lt;/td>
&lt;td>&lt;code>1.30&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DisallowKubeconfigRotationForShootInDeletion&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.28&lt;/code>&lt;/td>
&lt;td>&lt;code>1.31&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DisallowKubeconfigRotationForShootInDeletion&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Beta&lt;/code>&lt;/td>
&lt;td>&lt;code>1.32&lt;/code>&lt;/td>
&lt;td>&lt;code>1.35&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DisallowKubeconfigRotationForShootInDeletion&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>GA&lt;/code>&lt;/td>
&lt;td>&lt;code>1.36&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DisallowKubeconfigRotationForShootInDeletion&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;code>Removed&lt;/code>&lt;/td>
&lt;td>&lt;code>1.38&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Logging&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>0.13&lt;/code>&lt;/td>
&lt;td>&lt;code>1.40&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Logging&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;code>Removed&lt;/code>&lt;/td>
&lt;td>&lt;code>1.41&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AdminKubeconfigRequest&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.24&lt;/code>&lt;/td>
&lt;td>&lt;code>1.38&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AdminKubeconfigRequest&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Beta&lt;/code>&lt;/td>
&lt;td>&lt;code>1.39&lt;/code>&lt;/td>
&lt;td>&lt;code>1.41&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AdminKubeconfigRequest&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>GA&lt;/code>&lt;/td>
&lt;td>&lt;code>1.42&lt;/code>&lt;/td>
&lt;td>&lt;code>1.49&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AdminKubeconfigRequest&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;code>Removed&lt;/code>&lt;/td>
&lt;td>&lt;code>1.50&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>UseDNSRecords&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.27&lt;/code>&lt;/td>
&lt;td>&lt;code>1.38&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>UseDNSRecords&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Beta&lt;/code>&lt;/td>
&lt;td>&lt;code>1.39&lt;/code>&lt;/td>
&lt;td>&lt;code>1.43&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>UseDNSRecords&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>GA&lt;/code>&lt;/td>
&lt;td>&lt;code>1.44&lt;/code>&lt;/td>
&lt;td>&lt;code>1.49&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>UseDNSRecords&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;code>Removed&lt;/code>&lt;/td>
&lt;td>&lt;code>1.50&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CachedRuntimeClients&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.7&lt;/code>&lt;/td>
&lt;td>&lt;code>1.33&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CachedRuntimeClients&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Beta&lt;/code>&lt;/td>
&lt;td>&lt;code>1.34&lt;/code>&lt;/td>
&lt;td>&lt;code>1.44&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CachedRuntimeClients&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>GA&lt;/code>&lt;/td>
&lt;td>&lt;code>1.45&lt;/code>&lt;/td>
&lt;td>&lt;code>1.49&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CachedRuntimeClients&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;code>Removed&lt;/code>&lt;/td>
&lt;td>&lt;code>1.50&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DenyInvalidExtensionResources&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.31&lt;/code>&lt;/td>
&lt;td>&lt;code>1.41&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DenyInvalidExtensionResources&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Beta&lt;/code>&lt;/td>
&lt;td>&lt;code>1.42&lt;/code>&lt;/td>
&lt;td>&lt;code>1.44&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DenyInvalidExtensionResources&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>GA&lt;/code>&lt;/td>
&lt;td>&lt;code>1.45&lt;/code>&lt;/td>
&lt;td>&lt;code>1.49&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DenyInvalidExtensionResources&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;code>Removed&lt;/code>&lt;/td>
&lt;td>&lt;code>1.50&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>RotateSSHKeypairOnMaintenance&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.28&lt;/code>&lt;/td>
&lt;td>&lt;code>1.44&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>RotateSSHKeypairOnMaintenance&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Beta&lt;/code>&lt;/td>
&lt;td>&lt;code>1.45&lt;/code>&lt;/td>
&lt;td>&lt;code>1.47&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>RotateSSHKeypairOnMaintenance (deprecated)&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Beta&lt;/code>&lt;/td>
&lt;td>&lt;code>1.48&lt;/code>&lt;/td>
&lt;td>&lt;code>1.50&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>RotateSSHKeypairOnMaintenance (deprecated)&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;code>Removed&lt;/code>&lt;/td>
&lt;td>&lt;code>1.51&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ShootMaxTokenExpirationOverwrite&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.43&lt;/code>&lt;/td>
&lt;td>&lt;code>1.44&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ShootMaxTokenExpirationOverwrite&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Beta&lt;/code>&lt;/td>
&lt;td>&lt;code>1.45&lt;/code>&lt;/td>
&lt;td>&lt;code>1.47&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ShootMaxTokenExpirationOverwrite&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>GA&lt;/code>&lt;/td>
&lt;td>&lt;code>1.48&lt;/code>&lt;/td>
&lt;td>&lt;code>1.50&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ShootMaxTokenExpirationOverwrite&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;code>Removed&lt;/code>&lt;/td>
&lt;td>&lt;code>1.51&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ShootMaxTokenExpirationValidation&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.43&lt;/code>&lt;/td>
&lt;td>&lt;code>1.45&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ShootMaxTokenExpirationValidation&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Beta&lt;/code>&lt;/td>
&lt;td>&lt;code>1.46&lt;/code>&lt;/td>
&lt;td>&lt;code>1.47&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ShootMaxTokenExpirationValidation&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>GA&lt;/code>&lt;/td>
&lt;td>&lt;code>1.48&lt;/code>&lt;/td>
&lt;td>&lt;code>1.50&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ShootMaxTokenExpirationValidation&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;code>Removed&lt;/code>&lt;/td>
&lt;td>&lt;code>1.51&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>WorkerPoolKubernetesVersion&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.35&lt;/code>&lt;/td>
&lt;td>&lt;code>1.45&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>WorkerPoolKubernetesVersion&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Beta&lt;/code>&lt;/td>
&lt;td>&lt;code>1.46&lt;/code>&lt;/td>
&lt;td>&lt;code>1.49&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>WorkerPoolKubernetesVersion&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>GA&lt;/code>&lt;/td>
&lt;td>&lt;code>1.50&lt;/code>&lt;/td>
&lt;td>&lt;code>1.51&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>WorkerPoolKubernetesVersion&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;code>Removed&lt;/code>&lt;/td>
&lt;td>&lt;code>1.52&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DisableDNSProviderManagement&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.41&lt;/code>&lt;/td>
&lt;td>&lt;code>1.49&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DisableDNSProviderManagement&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Beta&lt;/code>&lt;/td>
&lt;td>&lt;code>1.50&lt;/code>&lt;/td>
&lt;td>&lt;code>1.51&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DisableDNSProviderManagement&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>GA&lt;/code>&lt;/td>
&lt;td>&lt;code>1.52&lt;/code>&lt;/td>
&lt;td>&lt;code>1.59&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DisableDNSProviderManagement&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;code>Removed&lt;/code>&lt;/td>
&lt;td>&lt;code>1.60&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SecretBindingProviderValidation&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.38&lt;/code>&lt;/td>
&lt;td>&lt;code>1.50&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SecretBindingProviderValidation&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Beta&lt;/code>&lt;/td>
&lt;td>&lt;code>1.51&lt;/code>&lt;/td>
&lt;td>&lt;code>1.52&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SecretBindingProviderValidation&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>GA&lt;/code>&lt;/td>
&lt;td>&lt;code>1.53&lt;/code>&lt;/td>
&lt;td>&lt;code>1.54&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SecretBindingProviderValidation&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;code>Removed&lt;/code>&lt;/td>
&lt;td>&lt;code>1.55&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SeedKubeScheduler&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.15&lt;/code>&lt;/td>
&lt;td>&lt;code>1.54&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SeedKubeScheduler&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Deprecated&lt;/code>&lt;/td>
&lt;td>&lt;code>1.55&lt;/code>&lt;/td>
&lt;td>&lt;code>1.60&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SeedKubeScheduler&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;code>Removed&lt;/code>&lt;/td>
&lt;td>&lt;code>1.61&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ShootCARotation&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.42&lt;/code>&lt;/td>
&lt;td>&lt;code>1.50&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ShootCARotation&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Beta&lt;/code>&lt;/td>
&lt;td>&lt;code>1.51&lt;/code>&lt;/td>
&lt;td>&lt;code>1.56&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ShootCARotation&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>GA&lt;/code>&lt;/td>
&lt;td>&lt;code>1.57&lt;/code>&lt;/td>
&lt;td>&lt;code>1.59&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ShootCARotation&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;code>Removed&lt;/code>&lt;/td>
&lt;td>&lt;code>1.60&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ShootSARotation&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.48&lt;/code>&lt;/td>
&lt;td>&lt;code>1.50&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ShootSARotation&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Beta&lt;/code>&lt;/td>
&lt;td>&lt;code>1.51&lt;/code>&lt;/td>
&lt;td>&lt;code>1.56&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ShootSARotation&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>GA&lt;/code>&lt;/td>
&lt;td>&lt;code>1.57&lt;/code>&lt;/td>
&lt;td>&lt;code>1.59&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ShootSARotation&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;code>Removed&lt;/code>&lt;/td>
&lt;td>&lt;code>1.60&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ReversedVPN&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.22&lt;/code>&lt;/td>
&lt;td>&lt;code>1.41&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ReversedVPN&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Beta&lt;/code>&lt;/td>
&lt;td>&lt;code>1.42&lt;/code>&lt;/td>
&lt;td>&lt;code>1.62&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ReversedVPN&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>GA&lt;/code>&lt;/td>
&lt;td>&lt;code>1.63&lt;/code>&lt;/td>
&lt;td>&lt;code>1.69&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ReversedVPN&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;code>Removed&lt;/code>&lt;/td>
&lt;td>&lt;code>1.70&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ForceRestore&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;code>Removed&lt;/code>&lt;/td>
&lt;td>&lt;code>1.66&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SeedChange&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.12&lt;/code>&lt;/td>
&lt;td>&lt;code>1.52&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SeedChange&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Beta&lt;/code>&lt;/td>
&lt;td>&lt;code>1.53&lt;/code>&lt;/td>
&lt;td>&lt;code>1.68&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SeedChange&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>GA&lt;/code>&lt;/td>
&lt;td>&lt;code>1.69&lt;/code>&lt;/td>
&lt;td>&lt;code>1.72&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SeedChange&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Removed&lt;/code>&lt;/td>
&lt;td>&lt;code>1.73&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CopyEtcdBackupsDuringControlPlaneMigration&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.37&lt;/code>&lt;/td>
&lt;td>&lt;code>1.52&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CopyEtcdBackupsDuringControlPlaneMigration&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Beta&lt;/code>&lt;/td>
&lt;td>&lt;code>1.53&lt;/code>&lt;/td>
&lt;td>&lt;code>1.68&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CopyEtcdBackupsDuringControlPlaneMigration&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>GA&lt;/code>&lt;/td>
&lt;td>&lt;code>1.69&lt;/code>&lt;/td>
&lt;td>&lt;code>1.72&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CopyEtcdBackupsDuringControlPlaneMigration&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Removed&lt;/code>&lt;/td>
&lt;td>&lt;code>1.73&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ManagedIstio&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.5&lt;/code>&lt;/td>
&lt;td>&lt;code>1.18&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ManagedIstio&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Beta&lt;/code>&lt;/td>
&lt;td>&lt;code>1.19&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ManagedIstio&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Deprecated&lt;/code>&lt;/td>
&lt;td>&lt;code>1.48&lt;/code>&lt;/td>
&lt;td>&lt;code>1.69&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ManagedIstio&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;code>Removed&lt;/code>&lt;/td>
&lt;td>&lt;code>1.70&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>APIServerSNI&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.7&lt;/code>&lt;/td>
&lt;td>&lt;code>1.18&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>APIServerSNI&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Beta&lt;/code>&lt;/td>
&lt;td>&lt;code>1.19&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>APIServerSNI&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Deprecated&lt;/code>&lt;/td>
&lt;td>&lt;code>1.48&lt;/code>&lt;/td>
&lt;td>&lt;code>1.72&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>APIServerSNI&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Removed&lt;/code>&lt;/td>
&lt;td>&lt;code>1.73&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>HAControlPlanes&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.49&lt;/code>&lt;/td>
&lt;td>&lt;code>1.70&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>HAControlPlanes&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Beta&lt;/code>&lt;/td>
&lt;td>&lt;code>1.71&lt;/code>&lt;/td>
&lt;td>&lt;code>1.72&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>HAControlPlanes&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>GA&lt;/code>&lt;/td>
&lt;td>&lt;code>1.73&lt;/code>&lt;/td>
&lt;td>&lt;code>1.73&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>HAControlPlanes&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Removed&lt;/code>&lt;/td>
&lt;td>&lt;code>1.74&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>FullNetworkPoliciesInRuntimeCluster&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>&lt;code>1.66&lt;/code>&lt;/td>
&lt;td>&lt;code>1.70&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>FullNetworkPoliciesInRuntimeCluster&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Beta&lt;/code>&lt;/td>
&lt;td>&lt;code>1.71&lt;/code>&lt;/td>
&lt;td>&lt;code>1.72&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>FullNetworkPoliciesInRuntimeCluster&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>GA&lt;/code>&lt;/td>
&lt;td>&lt;code>1.73&lt;/code>&lt;/td>
&lt;td>&lt;code>1.73&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>FullNetworkPoliciesInRuntimeCluster&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>&lt;code>Removed&lt;/code>&lt;/td>
&lt;td>&lt;code>1.74&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="using-a-feature">Using a Feature&lt;/h2>
&lt;p>A feature can be in &lt;em>Alpha&lt;/em>, &lt;em>Beta&lt;/em> or &lt;em>GA&lt;/em> stage.
An &lt;em>Alpha&lt;/em> feature means:&lt;/p>
&lt;ul>
&lt;li>Disabled by default.&lt;/li>
&lt;li>Might be buggy. Enabling the feature may expose bugs.&lt;/li>
&lt;li>Support for feature may be dropped at any time without notice.&lt;/li>
&lt;li>The API may change in incompatible ways in a later software release without notice.&lt;/li>
&lt;li>Recommended for use only in short-lived testing clusters, due to increased
risk of bugs and lack of long-term support.&lt;/li>
&lt;/ul>
&lt;p>A &lt;em>Beta&lt;/em> feature means:&lt;/p>
&lt;ul>
&lt;li>Enabled by default.&lt;/li>
&lt;li>The feature is well tested. Enabling the feature is considered safe.&lt;/li>
&lt;li>Support for the overall feature will not be dropped, though details may change.&lt;/li>
&lt;li>The schema and/or semantics of objects may change in incompatible ways in a
subsequent beta or stable release. When this happens, we will provide instructions
for migrating to the next version. This may require deleting, editing, and
re-creating API objects. The editing process may require some thought.
This may require downtime for applications that rely on the feature.&lt;/li>
&lt;li>Recommended for only non-critical uses because of potential for
incompatible changes in subsequent releases.&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Please do try &lt;em>Beta&lt;/em> features and give feedback on them!
After they exit beta, it may not be practical for us to make more changes.&lt;/p>
&lt;/blockquote>
&lt;p>A &lt;em>General Availability&lt;/em> (GA) feature is also referred to as a &lt;em>stable&lt;/em> feature. It means:&lt;/p>
&lt;ul>
&lt;li>The feature is always enabled; you cannot disable it.&lt;/li>
&lt;li>The corresponding feature gate is no longer needed.&lt;/li>
&lt;li>Stable versions of features will appear in released software for many subsequent versions.&lt;/li>
&lt;/ul>
&lt;h2 id="list-of-feature-gates">List of Feature Gates&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Feature&lt;/th>
&lt;th>Relevant Components&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>HVPA&lt;/td>
&lt;td>&lt;code>gardenlet&lt;/code>, &lt;code>gardener-operator&lt;/code>&lt;/td>
&lt;td>Enables simultaneous horizontal and vertical scaling in garden or seed clusters.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>HVPAForShootedSeed&lt;/td>
&lt;td>&lt;code>gardenlet&lt;/code>&lt;/td>
&lt;td>Enables simultaneous horizontal and vertical scaling in managed seed (aka &amp;ldquo;shooted seed&amp;rdquo;) clusters.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SecretBindingProviderValidation&lt;/td>
&lt;td>&lt;code>gardener-apiserver&lt;/code>&lt;/td>
&lt;td>Enables validations on Gardener API server that:&lt;br>- requires the provider type of a SecretBinding to be set (on SecretBinding creation)&lt;br>- requires the SecretBinding provider type to match the Shoot provider type (on Shoot creation)&lt;br>- enforces immutability on the provider type of a SecretBinding&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DefaultSeccompProfile&lt;/td>
&lt;td>&lt;code>gardenlet&lt;/code>, &lt;code>gardener-operator&lt;/code>&lt;/td>
&lt;td>Enables the defaulting of the seccomp profile for Gardener managed workload in the garden or seed to &lt;code>RuntimeDefault&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CoreDNSQueryRewriting&lt;/td>
&lt;td>&lt;code>gardenlet&lt;/code>&lt;/td>
&lt;td>Enables automatic DNS query rewriting in shoot cluster&amp;rsquo;s CoreDNS to shortcut name resolution of fully qualified in-cluster and out-of-cluster names, which follow a user-defined pattern. Details can be found in &lt;a href="https://gardener.cloud/docs/gardener/dns-search-path-optimization/">DNS Search Path Optimization&lt;/a>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IPv6SingleStack&lt;/td>
&lt;td>&lt;code>gardener-apiserver&lt;/code>, &lt;code>gardenlet&lt;/code>&lt;/td>
&lt;td>Allows creating seed and shoot clusters with &lt;a href="https://gardener.cloud/docs/gardener/ipv6/">IPv6 single-stack networking&lt;/a> enabled in their spec (&lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/21-ipv6-singlestack-local.md">GEP-21&lt;/a>). If enabled in gardenlet, the default behavior is unchanged, but setting &lt;code>ipFamilies=[IPv6]&lt;/code> in the &lt;code>seedConfig&lt;/code> is allowed. Only if the &lt;code>ipFamilies&lt;/code> setting is changed, gardenlet behaves differently.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MutableShootSpecNetworkingNodes&lt;/td>
&lt;td>&lt;code>gardener-apiserver&lt;/code>&lt;/td>
&lt;td>Allows updating the field &lt;code>spec.networking.nodes&lt;/code>. The validity of the values has to be checked in the provider extensions. Only enable this feature gate when your system runs provider extensions which have implemented the validation.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>WorkerlessShoots&lt;/td>
&lt;td>&lt;code>gardener-apiserver&lt;/code>&lt;/td>
&lt;td>WorkerlessShoots allows creation of Shoot clusters with no worker pools.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MachineControllerManagerDeployment&lt;/td>
&lt;td>&lt;code>gardenlet&lt;/code>&lt;/td>
&lt;td>Enables Gardener to take over the deployment of the machine-controller-manager. If enabled, all registered provider extensions must support injecting the provider-specific MCM sidecar container into the deployment via the &lt;code>controlplane&lt;/code> webhook.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DisableScalingClassesForShoots&lt;/td>
&lt;td>&lt;code>gardenlet&lt;/code>&lt;/td>
&lt;td>Disables assigning a ScalingClass to Shoots based on their maximum Node count. All Shoot kube-apiservers will get the same initial resource requests for CPU and memory instead of making this depend on the ScalingClass.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ContainerdRegistryHostsDir&lt;/td>
&lt;td>&lt;code>gardenlet&lt;/code>&lt;/td>
&lt;td>Enables registry configuration in containerd based on the hosts directory pattern. The hosts directory pattern is the new way of configuring registries/mirrors in containerd. Ref &lt;a href="https://github.com/containerd/containerd/blob/main/docs/hosts.md">https://github.com/containerd/containerd/blob/main/docs/hosts.md&lt;/a>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ShootForceDeletion&lt;/td>
&lt;td>&lt;code>gardener-apiserver&lt;/code>&lt;/td>
&lt;td>Allows forceful deletion of Shoots by annotating them with the &lt;code>confirmation.gardener.cloud/force-deletion&lt;/code> annotation.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item></channel></rss>