<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gardener – Calico CNI</title><link>https://gardener.cloud/docs/extensions/network-extensions/gardener-extension-networking-calico/</link><description>Recent content in Calico CNI on Gardener</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://gardener.cloud/docs/extensions/network-extensions/gardener-extension-networking-calico/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Usage As End User</title><link>https://gardener.cloud/docs/extensions/network-extensions/gardener-extension-networking-calico/docs/usage-as-end-user/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/network-extensions/gardener-extension-networking-calico/docs/usage-as-end-user/</guid><description>
&lt;h1 id="using-the-networking-calico-extension-with-gardener-as-end-user">Using the Networking Calico extension with Gardener as end-user&lt;/h1>
&lt;p>The &lt;a href="https://github.com/gardener/gardener/blob/master/example/90-shoot.yaml">&lt;code>core.gardener.cloud/v1beta1.Shoot&lt;/code> resource&lt;/a> declares a &lt;code>networking&lt;/code> field that is meant to contain network-specific configuration.&lt;/p>
&lt;p>In this document we are describing how this configuration looks like for Calico and provide an example &lt;code>Shoot&lt;/code> manifest with minimal configuration that you can use to create a cluster.&lt;/p>
&lt;h2 id="calico-typha">Calico Typha&lt;/h2>
&lt;p>Calico Typha is an optional component of Project Calico designed to offload the Kubernetes API server. The Typha daemon sits between the datastore (such as the Kubernetes API server which is the one used by Gardener managed Kubernetes) and many instances of Felix. Typha’s main purpose is to increase scale by reducing each node’s impact on the datastore. You can opt-out Typha via &lt;code>.spec.networking.providerConfig.typha.enabled=false&lt;/code> of your Shoot manifest. By default the Typha is enabled.&lt;/p>
&lt;h2 id="ebpf-dataplane">EBPF Dataplane&lt;/h2>
&lt;p>Calico can be run in ebpf dataplane mode. This has several benefits, calico scales to higher troughput, uses less cpu per GBit and has native support for kubernetes services (without needing kube-proxy).
To switch to a pure ebpf dataplane it is recommended to run without an overlay network. The following configuration can be used to run without an overlay and without kube-proxy.&lt;/p>
&lt;p>An example ebpf dataplane &lt;code>NetworkingConfig&lt;/code> manifest:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">apiVersion: calico.networking.extensions.gardener.cloud/v1alpha1
kind: NetworkConfig
ipv4:
mode: Never
ebpfDataplane:
enabled: &lt;span style="color:#00f">true&lt;/span>
backend: bird
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To disable kube-proxy set the enabled field to false in the shoot manifest.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">apiVersion: core.gardener.cloud/v1alpha1
kind: Shoot
metadata:
name: ebpf-shoot
namespace: garden-dev
spec:
kubernetes:
kubeProxy:
enabled: &lt;span style="color:#00f">false&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="example-networkingconfig-manifest">Example &lt;code>NetworkingConfig&lt;/code> manifest&lt;/h2>
&lt;p>An example &lt;code>NetworkingConfig&lt;/code> for the Calico extension looks as follows:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">apiVersion: calico.networking.extensions.gardener.cloud/v1alpha1
kind: NetworkConfig
ipam:
type: host-local
cidr: usePodCIDR
ipv4:
mode: Always
vethMTU: 1440
backend: bird
typha:
enabled: &lt;span style="color:#00f">true&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="example-shoot-manifest">Example &lt;code>Shoot&lt;/code> manifest&lt;/h2>
&lt;p>Please find below an example &lt;code>Shoot&lt;/code> manifest with calico networking configratations:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">apiVersion: core.gardener.cloud/v1alpha1
kind: Shoot
metadata:
name: johndoe-azure
namespace: garden-dev
spec:
cloudProfileName: azure
region: westeurope
secretBindingName: core-azure
provider:
type: azure
infrastructureConfig:
apiVersion: azure.provider.extensions.gardener.cloud/v1alpha1
kind: InfrastructureConfig
networks:
vnet:
cidr: 10.250.0.0/16
workers: 10.250.0.0/19
zoned: &lt;span style="color:#00f">true&lt;/span>
controlPlaneConfig:
apiVersion: azure.provider.extensions.gardener.cloud/v1alpha1
kind: ControlPlaneConfig
workers:
- name: worker-xoluy
machine:
type: Standard_D4_v3
minimum: 2
maximum: 2
volume:
size: 50Gi
type: Standard_LRS
zones:
- &lt;span style="color:#a31515">&amp;#34;1&amp;#34;&lt;/span>
- &lt;span style="color:#a31515">&amp;#34;2&amp;#34;&lt;/span>
networking:
type: calico
nodes: 10.250.0.0/16
providerConfig:
apiVersion: calico.networking.extensions.gardener.cloud/v1alpha1
kind: NetworkConfig
ipam:
type: host-local
vethMTU: 1440
backend: bird
typha:
enabled: &lt;span style="color:#00f">false&lt;/span>
kubernetes:
version: 1.16.1
maintenance:
autoUpdate:
kubernetesVersion: &lt;span style="color:#00f">true&lt;/span>
machineImageVersion: &lt;span style="color:#00f">true&lt;/span>
addons:
kubernetes-dashboard:
enabled: &lt;span style="color:#00f">true&lt;/span>
nginx-ingress:
enabled: &lt;span style="color:#00f">true&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>