<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Administer Client (Shoot) Clusters on Gardener</title><link>https://gardener.cloud/docs/guides/administer-shoots/</link><description>Recent content in Administer Client (Shoot) Clusters on Gardener</description><generator>Hugo</generator><language>en-US</language><lastBuildDate>Tue, 23 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://gardener.cloud/docs/guides/administer-shoots/index.xml" rel="self" type="application/rss+xml"/><item><title>Scalability of Gardener Managed Kubernetes Clusters</title><link>https://gardener.cloud/docs/guides/administer-shoots/scalability/</link><pubDate>Tue, 23 May 2023 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/guides/administer-shoots/scalability/</guid><description>&lt;p>Have you ever wondered how much more your Kubernetes cluster can scale before it breaks down?&lt;/p>
&lt;p>Of course, the answer is heavily dependent on your workloads. But be assured, any cluster will break eventually. Therefore, the best mitigation is to plan for sharding early and run multiple clusters instead of trying to optimize everything hoping to survive with a single cluster.
Still, it is helpful to know when the time has come to scale out. This document aims at giving you the basic knowledge to keep a Gardener-managed Kubernetes cluster up and running while it scales according to your needs.&lt;/p></description></item><item><title>Authenticating with an Identity Provider</title><link>https://gardener.cloud/docs/guides/administer-shoots/oidc-login/</link><pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/guides/administer-shoots/oidc-login/</guid><description>&lt;h2 id="prerequisites">Prerequisites&lt;a class="td-heading-self-link" href="#prerequisites" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;p>Please read the following background material on &lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/authentication/#openid-connect-tokens">OIDC tokens&lt;/a> and &lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/authentication/#using-authentication-configuration">Structured Authentication&lt;/a>.&lt;/p>
&lt;h2 id="overview">Overview&lt;a class="td-heading-self-link" href="#overview" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;p>Kubernetes on its own doesn’t provide any user management. In other words, users aren’t managed through Kubernetes resources. Whenever you refer to a human user it’s sufficient to use a unique ID, for example, an email address. Nevertheless, Gardener project owners can use an identity provider to authenticate user access for shoot clusters in the following way:&lt;/p></description></item><item><title>Backup and Restore of Kubernetes Objects</title><link>https://gardener.cloud/docs/guides/administer-shoots/backup-restore/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/guides/administer-shoots/backup-restore/</guid><description>&lt;p>&lt;img src="https://gardener.cloud/__resources/teaser_6f9405.png" alt="Don&amp;rsquo;t worry &amp;hellip; have a backup">&lt;/p>
&lt;h2 id="tldr">TL;DR&lt;a class="td-heading-self-link" href="#tldr" aria-label="Heading self-link">&lt;/a>&lt;/h2>


 &lt;blockquote class="alert alert-note">
 &lt;div class="alert-title">
 &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24">&lt;title>information-outline&lt;/title>&lt;path d="M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M11,17H13V11H11V17Z" />&lt;/svg>
 &lt;p>
 
 Note
 
 &lt;/p>
 &lt;/div>
 &lt;p>Details of the description might change in the near future since Heptio was taken over by VMWare which might result in different GitHub repositories or other changes. Please don&amp;rsquo;t hesitate to inform us in case you encounter any issues.&lt;/p></description></item><item><title>Create / Delete a Shoot Cluster</title><link>https://gardener.cloud/docs/guides/administer-shoots/create-delete-shoot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/guides/administer-shoots/create-delete-shoot/</guid><description>&lt;h2 id="create-a-shoot-cluster">Create a Shoot Cluster&lt;a class="td-heading-self-link" href="#create-a-shoot-cluster" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;p>As you have already prepared an &lt;a href="https://github.com/gardener/gardener/blob/master/example/90-shoot.yaml">example Shoot manifest&lt;/a> in the steps described in the development documentation, please open another Terminal pane/window with the &lt;code>KUBECONFIG&lt;/code> environment variable pointing to the Garden development cluster and send the manifest to the Kubernetes API server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl apply -f your-shoot-aws.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You should see that Gardener has immediately picked up your manifest and has started to deploy the Shoot cluster.&lt;/p>
&lt;p>In order to investigate what is happening in the Seed cluster, please download its proper Kubeconfig yourself (see next paragraph). The namespace of the Shoot cluster in the Seed cluster will look like that: &lt;code>shoot-johndoe-johndoe-1&lt;/code>, whereas the first &lt;code>johndoe&lt;/code> is your namespace in the Garden cluster (also called &amp;ldquo;project&amp;rdquo;) and the &lt;code>johndoe-1&lt;/code> suffix is the actual name of the Shoot cluster.&lt;/p></description></item><item><title>Create a Shoot Cluster Into an Existing AWS VPC</title><link>https://gardener.cloud/docs/guides/administer-shoots/create-shoot-into-existing-aws-vpc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/guides/administer-shoots/create-shoot-into-existing-aws-vpc/</guid><description>&lt;h2 id="overview">Overview&lt;a class="td-heading-self-link" href="#overview" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;p>Gardener can create a new VPC, or use an existing one for your shoot cluster. Depending on your needs, you may want to create shoot(s) into an already created VPC.
The tutorial describes how to create a shoot cluster into an existing AWS VPC. The steps are identical for Alicloud, Azure, and GCP. Please note that the existing VPC must be in the same region like the shoot cluster that you want to deploy into the VPC.&lt;/p></description></item><item><title>Fix Problematic Conversion Webhooks</title><link>https://gardener.cloud/docs/guides/administer-shoots/conversion-webhook/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/guides/administer-shoots/conversion-webhook/</guid><description>&lt;h2 id="reasoning">Reasoning&lt;a class="td-heading-self-link" href="#reasoning" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;p>&lt;strong>Custom Resource Definition (CRD)&lt;/strong> is what you use to define a &lt;code>Custom Resource&lt;/code>. This is a powerful way to extend Kubernetes capabilities beyond the default installation, adding any kind of API objects useful for your application.&lt;/p>
&lt;p>The CustomResourceDefinition API provides a workflow for introducing and upgrading to new versions of a CustomResourceDefinition. In a scenario where a CRD adds support for a new version and switches its &lt;code>spec.versions.storage&lt;/code> field to it (i.e., from &lt;code>v1beta1&lt;/code> to &lt;code>v1)&lt;/code>, existing objects are not migrated in etcd. For more information, see &lt;a href="https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definition-versioning/#previous-storage-versions">Versions in CustomResourceDefinitions&lt;/a>.&lt;/p></description></item><item><title>GPU Enabled Cluster</title><link>https://gardener.cloud/docs/guides/administer-shoots/gpu/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/guides/administer-shoots/gpu/</guid><description>&lt;h2 id="disclaimer">Disclaimer&lt;a class="td-heading-self-link" href="#disclaimer" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;p>Be aware, that the following sections might be opinionated. Kubernetes, and the GPU support in particular, are rapidly evolving, which means that this guide is likely to be outdated sometime soon. For this reason, &lt;strong>contributions are highly appreciated&lt;/strong> to update this guide.&lt;/p>
&lt;h2 id="create-a-cluster">Create a Cluster&lt;a class="td-heading-self-link" href="#create-a-cluster" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;p>First thing first, let’s create a Kubernetes (K8s) cluster with GPU accelerated nodes. In this example we will use an AWS &lt;strong>p2.xlarge&lt;/strong> EC2 instance because it&amp;rsquo;s the cheapest available option at the moment. Use such cheap instances for learning to limit your resource costs. &lt;strong>This costs around 1€/hour per GPU&lt;/strong>&lt;/p></description></item><item><title>Shoot Cluster Maintenance</title><link>https://gardener.cloud/docs/guides/administer-shoots/maintain-shoot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/guides/administer-shoots/maintain-shoot/</guid><description>&lt;h2 id="overview">Overview&lt;a class="td-heading-self-link" href="#overview" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;p>Day two operations for shoot clusters are related to:&lt;/p>
&lt;ul>
&lt;li>The Kubernetes version of the control plane and the worker nodes&lt;/li>
&lt;li>The operating system version of the worker nodes&lt;/li>
&lt;/ul>



 &lt;blockquote class="alert alert-note">
 &lt;div class="alert-title">
 &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24">&lt;title>information-outline&lt;/title>&lt;path d="M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M11,17H13V11H11V17Z" />&lt;/svg>
 &lt;p>
 
 Note
 
 &lt;/p>
 &lt;/div>
 &lt;p>When referring to an update of the &amp;ldquo;operating system version&amp;rdquo; in this document, the update of the machine image of the shoot cluster&amp;rsquo;s worker nodes is meant. For example, Amazon Machine Images (AMI) for AWS.&lt;/p></description></item><item><title>Tailscale</title><link>https://gardener.cloud/docs/guides/administer-shoots/tailscale/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/guides/administer-shoots/tailscale/</guid><description>&lt;h1 id="access-the-kubernetes-apiserver-from-your-tailnet">Access the Kubernetes apiserver from your tailnet&lt;a class="td-heading-self-link" href="#access-the-kubernetes-apiserver-from-your-tailnet" aria-label="Heading self-link">&lt;/a>&lt;/h1>&lt;h2 id="overview">Overview&lt;a class="td-heading-self-link" href="#overview" aria-label="Heading self-link">&lt;/a>&lt;/h2>&lt;p>If you would like to strengthen the security of your Kubernetes cluster even further, this guide post explains how this can be achieved.&lt;/p>
&lt;p>The most common way to secure a Kubernetes cluster which was created with Gardener is to apply the ACLs described in the &lt;a href="https://github.com/stackitcloud/gardener-extension-acl">Gardener ACL Extension&lt;/a> repository or to use &lt;a href="https://gardener.cloud/docs/gardener/exposureclasses/">ExposureClass&lt;/a>, which exposes the Kubernetes apiserver in a corporate network not exposed to the public internet.&lt;/p></description></item></channel></rss>