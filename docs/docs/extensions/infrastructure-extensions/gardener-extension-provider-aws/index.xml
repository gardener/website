<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Provider AWS on Gardener</title><link>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-aws/</link><description>Recent content in Provider AWS on Gardener</description><generator>Hugo</generator><language>en-US</language><atom:link href="https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-aws/index.xml" rel="self" type="application/rss+xml"/><item><title>Tutorials</title><link>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-aws/tutorials/kubernetes-cluster-on-aws-with-gardener/kubernetes-cluster-on-aws-with-gardener/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-aws/tutorials/kubernetes-cluster-on-aws-with-gardener/kubernetes-cluster-on-aws-with-gardener/</guid><description>&lt;h3 id="overview">Overview&lt;/h3>
&lt;p>Gardener allows you to create a Kubernetes cluster on different infrastructure providers. This tutorial will guide you through the process of creating a cluster on AWS.&lt;/p>
&lt;h3 id="prerequisites">Prerequisites&lt;/h3>
&lt;ul>
&lt;li>You have created an &lt;a href="https://aws.amazon.com/">AWS account&lt;/a>.&lt;/li>
&lt;li>You have access to the Gardener dashboard and have permissions to create projects.&lt;/li>
&lt;/ul>
&lt;h3 id="steps">Steps&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Go to the Gardener dashboard and create a &lt;em>Project&lt;/em>.&lt;/p>
 &lt;img src="https://gardener.cloud/__resources/new-gardener-project_ad03bc.png">
&lt;/li>
&lt;li>
&lt;p>Choose &lt;em>Secrets&lt;/em>, then the plus icon &lt;img src="https://gardener.cloud/__resources/plus-icon_3b1f20.png"> and select &lt;em>AWS&lt;/em>.&lt;/p>
 &lt;img src="https://gardener.cloud/__resources/create-secret-aws_79dc1a.png">
&lt;/li>
&lt;li>
&lt;p>To copy the policy for AWS from the Gardener dashboard, click on the help icon &lt;img src="https://gardener.cloud/__resources/help-icon_01486c.png"> for AWS secrets, and choose copy &lt;img src="https://gardener.cloud/__resources/copy-icon_0f5ab8.png">.&lt;/p></description></item><item><title>Deployment</title><link>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-aws/deployment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-aws/deployment/</guid><description>&lt;h1 id="deployment-of-the-aws-provider-extension">Deployment of the AWS provider extension&lt;/h1>
&lt;p>&lt;strong>Disclaimer:&lt;/strong> This document is NOT a step by step installation guide for the AWS provider extension and only contains some configuration specifics regarding the installation of different components via the helm charts residing in the AWS provider extension &lt;a href="https://github.com/gardener/gardener-extension-provider-aws">repository&lt;/a>.&lt;/p>
&lt;h2 id="gardener-extension-admission-aws">gardener-extension-admission-aws&lt;/h2>
&lt;h3 id="authentication-against-the-garden-cluster">Authentication against the Garden cluster&lt;/h3>
&lt;p>There are several authentication possibilities depending on whether or not &lt;a href="https://github.com/gardener/garden-setup#concept-the-virtual-cluster">the concept of &lt;em>Virtual Garden&lt;/em>&lt;/a> is used.&lt;/p>
&lt;h4 id="virtual-garden-is-not-used-ie-the-runtime-garden-cluster-is-also-the-target-garden-cluster">&lt;em>Virtual Garden&lt;/em> is not used, i.e., the &lt;code>runtime&lt;/code> Garden cluster is also the &lt;code>target&lt;/code> Garden cluster.&lt;/h4>
&lt;p>&lt;strong>Automounted Service Account Token&lt;/strong>
The easiest way to deploy the &lt;code>gardener-extension-admission-aws&lt;/code> component will be to not provide &lt;code>kubeconfig&lt;/code> at all. This way in-cluster configuration and an automounted service account token will be used. The drawback of this approach is that the automounted token will not be automatically rotated.&lt;/p></description></item><item><title>Dual Stack Ingress</title><link>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-aws/dual-stack-ingress/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-aws/dual-stack-ingress/</guid><description>&lt;h1 id="using-ipv4ipv6-dual-stack-ingress-in-an-ipv4-single-stack-cluster">Using IPv4/IPv6 (dual-stack) Ingress in an IPv4 single-stack cluster&lt;/h1>
&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;p>IPv6 adoption is continuously growing, already overtaking IPv4 in certain regions, e.g. India, or scenarios, e.g. mobile.
Even though most IPv6 installations deploy means to reach IPv4, it might still be beneficial to expose services
natively via IPv4 and IPv6 instead of just relying on IPv4.&lt;/p>
&lt;h2 id="disadvantages-of-full-ipv4ipv6-dual-stack-deployments">Disadvantages of full IPv4/IPv6 (dual-stack) Deployments&lt;/h2>
&lt;p>Enabling full IPv4/IPv6 (dual-stack) support in a kubernetes cluster is a major endeavor. It requires a lot of changes
and restarts of all pods so that all pods get addresses for both IP families. A side-effect of dual-stack networking
is that failures may be hidden as network traffic may take the other protocol to reach the target. For this reason and
also due to reduced operational complexity, service teams might lean towards staying in a single-stack environment as
much as possible. Luckily, this is possible with Gardener and IPv4/IPv6 (dual-stack) ingress on AWS.&lt;/p></description></item><item><title>Local Setup</title><link>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-aws/local-setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-aws/local-setup/</guid><description>&lt;h3 id="admission-aws">admission-aws&lt;/h3>
&lt;p>&lt;code>admission-aws&lt;/code> is an admission webhook server which is responsible for the validation of the cloud provider (AWS in this case) specific fields and resources. The Gardener API server is cloud provider agnostic and it wouldn&amp;rsquo;t be able to perform similar validation.&lt;/p>
&lt;p>Follow the steps below to run the admission webhook server locally.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Start the Gardener API server.&lt;/p>
&lt;p>For details, check the Gardener &lt;a href="https://gardener.cloud/docs/gardener/local_setup/">local setup&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Start the webhook server&lt;/p>
&lt;p>Make sure that the &lt;code>KUBECONFIG&lt;/code> environment variable is pointing to the local garden cluster.&lt;/p></description></item><item><title>Operations</title><link>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-aws/operations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-aws/operations/</guid><description>&lt;h1 id="using-the-aws-provider-extension-with-gardener-as-operator">Using the AWS provider extension with Gardener as operator&lt;/h1>
&lt;p>The &lt;a href="https://github.com/gardener/gardener/blob/master/example/30-cloudprofile.yaml">&lt;code>core.gardener.cloud/v1beta1.CloudProfile&lt;/code> resource&lt;/a> declares a &lt;code>providerConfig&lt;/code> field that is meant to contain provider-specific configuration.
Similarly, the &lt;a href="https://github.com/gardener/gardener/blob/master/example/50-seed.yaml">&lt;code>core.gardener.cloud/v1beta1.Seed&lt;/code> resource&lt;/a> is structured.
Additionally, it allows to configure settings for the backups of the main etcds&amp;rsquo; data of shoot clusters control planes running in this seed cluster.&lt;/p>
&lt;p>This document explains what is necessary to configure for this provider extension.&lt;/p>
&lt;h2 id="cloudprofile-resource">&lt;code>CloudProfile&lt;/code> resource&lt;/h2>
&lt;p>In this section we are describing how the configuration for &lt;code>CloudProfile&lt;/code>s looks like for AWS and provide an example &lt;code>CloudProfile&lt;/code> manifest with minimal configuration that you can use to allow creating AWS shoot clusters.&lt;/p></description></item><item><title>Usage</title><link>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-aws/usage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-aws/usage/</guid><description>&lt;h1 id="using-the-aws-provider-extension-with-gardener-as-end-user">Using the AWS provider extension with Gardener as end-user&lt;/h1>
&lt;p>The &lt;a href="https://github.com/gardener/gardener/blob/master/example/90-shoot.yaml">&lt;code>core.gardener.cloud/v1beta1.Shoot&lt;/code> resource&lt;/a> declares a few fields that are meant to contain provider-specific configuration.&lt;/p>
&lt;p>In this document we are describing how this configuration looks like for AWS and provide an example &lt;code>Shoot&lt;/code> manifest with minimal configuration that you can use to create an AWS cluster (modulo the landscape-specific information like cloud profile names, secret binding names, etc.).&lt;/p>
&lt;h2 id="provider-secret-data">Provider Secret Data&lt;/h2>
&lt;p>Every shoot cluster references a &lt;code>SecretBinding&lt;/code> or a &lt;code>CredentialsBinding&lt;/code> which itself references a &lt;code>Secret&lt;/code>, and this &lt;code>Secret&lt;/code> contains the provider credentials of your AWS account.
This &lt;code>Secret&lt;/code> must look as follows:&lt;/p></description></item></channel></rss>