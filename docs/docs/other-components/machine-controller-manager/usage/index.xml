<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gardener – Usage</title><link>https://gardener.cloud/docs/other-components/machine-controller-manager/usage/</link><description>Recent content in Usage on Gardener</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://gardener.cloud/docs/other-components/machine-controller-manager/usage/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Machine</title><link>https://gardener.cloud/docs/other-components/machine-controller-manager/usage/machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/machine-controller-manager/usage/machine/</guid><description>
&lt;h1 id="creatingdeleting-machines-vm">Creating/Deleting machines (VM)&lt;/h1>
&lt;!-- TOC -->
&lt;ul>
&lt;li>&lt;a href="#creatingdeleting-machines-vm">Creating/Deleting machines (VM)&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#setting-up-your-usage-environment">Setting up your usage environment&lt;/a>&lt;/li>
&lt;li>&lt;a href="#important">Important :&lt;/a>&lt;/li>
&lt;li>&lt;a href="#creating-machine">Creating machine&lt;/a>&lt;/li>
&lt;li>&lt;a href="#inspect-status-of-machine">Inspect status of machine&lt;/a>&lt;/li>
&lt;li>&lt;a href="#delete-machine">Delete machine&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;!-- /TOC -->
&lt;h2 id="setting-up-your-usage-environment">Setting up your usage environment&lt;/h2>
&lt;ul>
&lt;li>Follow the &lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/usage/prerequisite/">steps described here&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="important-">Important :&lt;/h2>
&lt;blockquote>
&lt;p>Make sure that the &lt;code>kubernetes/machine_objects/machine.yaml&lt;/code> points to the same class name as the &lt;code>kubernetes/machine_classes/aws-machine-class.yaml&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Similarly &lt;code>kubernetes/machine_objects/aws-machine-class.yaml&lt;/code> secret name and namespace should be same as that mentioned in &lt;code>kubernetes/secrets/aws-secret.yaml&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;h2 id="creating-machine">Creating machine&lt;/h2>
&lt;ul>
&lt;li>Modify &lt;code>kubernetes/machine_objects/machine.yaml&lt;/code> as per your requirement and create the VM as shown below:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl apply -f kubernetes/machine_objects/machine.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You should notice that the Machine Controller Manager has immediately picked up your manifest and started to create a new machine by talking to the cloud provider.&lt;/p>
&lt;ul>
&lt;li>Check Machine Controller Manager machines in the cluster&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl get machine
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NAME STATUS AGE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test-machine Running 5m
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>A new machine is created with the name provided in the &lt;code>kubernetes/machine_objects/machine.yaml&lt;/code> file.&lt;/p>
&lt;ul>
&lt;li>After a few minutes (~3 minutes for AWS), you should notice a new node joining the cluster. You can verify this by running:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl get nodes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NAME STATUS AGE VERSION
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip-10-250-14-52.eu-east-1.compute.internal. Ready 1m v1.8.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This shows that a new node has successfully joined the cluster.&lt;/p>
&lt;h2 id="inspect-status-of-machine">Inspect status of machine&lt;/h2>
&lt;p>To inspect the status of any created machine, run the command given below.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl get machine test-machine -o yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: machine.sapcloud.io/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Machine
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> annotations:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubectl.kubernetes.io/last-applied-configuration: |&lt;span style="color:#a31515">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> &lt;/span> {&lt;span style="color:#a31515">&amp;#34;apiVersion&amp;#34;&lt;/span>:&lt;span style="color:#a31515">&amp;#34;machine.sapcloud.io/v1alpha1&amp;#34;&lt;/span>,&lt;span style="color:#a31515">&amp;#34;kind&amp;#34;&lt;/span>:&lt;span style="color:#a31515">&amp;#34;Machine&amp;#34;&lt;/span>,&lt;span style="color:#a31515">&amp;#34;metadata&amp;#34;&lt;/span>:{&lt;span style="color:#a31515">&amp;#34;annotations&amp;#34;&lt;/span>:{},&lt;span style="color:#a31515">&amp;#34;labels&amp;#34;&lt;/span>:{&lt;span style="color:#a31515">&amp;#34;test-label&amp;#34;&lt;/span>:&lt;span style="color:#a31515">&amp;#34;test-label&amp;#34;&lt;/span>},&lt;span style="color:#a31515">&amp;#34;name&amp;#34;&lt;/span>:&lt;span style="color:#a31515">&amp;#34;test-machine&amp;#34;&lt;/span>,&lt;span style="color:#a31515">&amp;#34;namespace&amp;#34;&lt;/span>:&lt;span style="color:#a31515">&amp;#34;&amp;#34;&lt;/span>},&lt;span style="color:#a31515">&amp;#34;spec&amp;#34;&lt;/span>:{&lt;span style="color:#a31515">&amp;#34;class&amp;#34;&lt;/span>:{&lt;span style="color:#a31515">&amp;#34;kind&amp;#34;&lt;/span>:&lt;span style="color:#a31515">&amp;#34;AWSMachineClass&amp;#34;&lt;/span>,&lt;span style="color:#a31515">&amp;#34;name&amp;#34;&lt;/span>:&lt;span style="color:#a31515">&amp;#34;test-aws&amp;#34;&lt;/span>}}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> clusterName: &lt;span style="color:#a31515">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> creationTimestamp: 2017-12-27T06:58:21Z
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> finalizers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - machine.sapcloud.io/operator
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generation: 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> initializers: &lt;span style="color:#00f">null&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> labels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> node: ip-10-250-14-52.eu-east-1.compute.internal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> test-label: test-label
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: test-machine
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: &lt;span style="color:#a31515">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resourceVersion: &lt;span style="color:#a31515">&amp;#34;12616948&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> selfLink: /apis/machine.sapcloud.io/v1alpha1/test-machine
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> uid: 535e596c-ead3-11e7-a6c0-828f843e4186
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> class:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: AWSMachineClass
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: test-aws
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> providerID: aws:///eu-east-1/i-00bef3f2618ffef23
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>status:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conditions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - lastHeartbeatTime: 2017-12-27T07:00:46Z
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lastTransitionTime: 2017-12-27T06:59:16Z
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> message: kubelet has sufficient disk space available
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> reason: KubeletHasSufficientDisk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status: &lt;span style="color:#a31515">&amp;#34;False&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: OutOfDisk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - lastHeartbeatTime: 2017-12-27T07:00:46Z
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lastTransitionTime: 2017-12-27T06:59:16Z
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> message: kubelet has sufficient memory available
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> reason: KubeletHasSufficientMemory
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status: &lt;span style="color:#a31515">&amp;#34;False&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: MemoryPressure
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - lastHeartbeatTime: 2017-12-27T07:00:46Z
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lastTransitionTime: 2017-12-27T06:59:16Z
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> message: kubelet has no disk pressure
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> reason: KubeletHasNoDiskPressure
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status: &lt;span style="color:#a31515">&amp;#34;False&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: DiskPressure
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - lastHeartbeatTime: 2017-12-27T07:00:46Z
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lastTransitionTime: 2017-12-27T07:00:06Z
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> message: kubelet is posting ready status
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> reason: KubeletReady
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status: &lt;span style="color:#a31515">&amp;#34;True&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: Ready
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> currentStatus:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lastUpdateTime: 2017-12-27T07:00:06Z
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> phase: Running
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lastOperation:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> description: Machine is now ready
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lastUpdateTime: 2017-12-27T07:00:06Z
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> state: Successful
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: Create
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> node: ip-10-250-14-52.eu-west-1.compute.internal
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="delete-machine">Delete machine&lt;/h2>
&lt;p>To delete the VM using the &lt;code>kubernetes/machine_objects/machine.yaml&lt;/code> as shown below&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl delete -f kubernetes/machine_objects/machine.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now the Machine Controller Manager picks up the manifest immediately and starts to delete the existing VM by talking to the cloud provider. The node should be detached from the cluster in a few minutes (~1min for AWS).&lt;/p></description></item><item><title>Docs: Machine Deployment</title><link>https://gardener.cloud/docs/other-components/machine-controller-manager/usage/machine_deployment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/machine-controller-manager/usage/machine_deployment/</guid><description>
&lt;h1 id="maintaining-machine-replicas-using-machines-deployments">Maintaining machine replicas using machines-deployments&lt;/h1>
&lt;!-- TOC -->
&lt;ul>
&lt;li>&lt;a href="#maintaining-machine-replicas-using-machines-deployments">Maintaining machine replicas using machines-deployments&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#setting-up-your-usage-environment">Setting up your usage environment&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#important-warning">Important ⚠️&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#creating-machine-deployment">Creating machine-deployment&lt;/a>&lt;/li>
&lt;li>&lt;a href="#inspect-status-of-machine-deployment">Inspect status of machine-deployment&lt;/a>&lt;/li>
&lt;li>&lt;a href="#health-monitoring">Health monitoring&lt;/a>&lt;/li>
&lt;li>&lt;a href="#update-your-machines">Update your machines&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#inspect-existing-cluster-configuration">Inspect existing cluster configuration&lt;/a>&lt;/li>
&lt;li>&lt;a href="#perform-a-rolling-update">Perform a rolling update&lt;/a>&lt;/li>
&lt;li>&lt;a href="#re-check-cluster-configuration">Re-check cluster configuration&lt;/a>&lt;/li>
&lt;li>&lt;a href="#more-variants-of-updates">More variants of updates&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#undo-an-update">Undo an update&lt;/a>&lt;/li>
&lt;li>&lt;a href="#pause-an-update">Pause an update&lt;/a>&lt;/li>
&lt;li>&lt;a href="#delete-machine-deployment">Delete machine-deployment&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;!-- /TOC -->
&lt;h2 id="setting-up-your-usage-environment">Setting up your usage environment&lt;/h2>
&lt;p>Follow the &lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/usage/prerequisite/">steps described here&lt;/a>&lt;/p>
&lt;h3 id="important-">Important ⚠️&lt;/h3>
&lt;blockquote>
&lt;p>Make sure that the &lt;code>kubernetes/machine_objects/machine-deployment.yaml&lt;/code> points to the same class name as the &lt;code>kubernetes/machine_classes/aws-machine-class.yaml&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Similarly &lt;code>kubernetes/machine_classes/aws-machine-class.yaml&lt;/code> secret name and namespace should be same as that mentioned in &lt;code>kubernetes/secrets/aws-secret.yaml&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;h2 id="creating-machine-deployment">Creating machine-deployment&lt;/h2>
&lt;ul>
&lt;li>Modify &lt;code>kubernetes/machine_objects/machine-deployment.yaml&lt;/code> as per your requirement. Modify the number of replicas to the desired number of machines. Then, create an machine-deployment.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl apply -f kubernetes/machine_objects/machine-deployment.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now the Machine Controller Manager picks up the manifest immediately and starts to create a new machines based on the number of replicas you have provided in the manifest.&lt;/p>
&lt;ul>
&lt;li>Check Machine Controller Manager machine-deployments in the cluster&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl get machinedeployment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NAME READY DESIRED UP-TO-DATE AVAILABLE AGE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test-machine-deployment 3 3 3 0 10m
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You will notice a new machine-deployment with your given name&lt;/p>
&lt;ul>
&lt;li>Check Machine Controller Manager machine-sets in the cluster&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl get machineset
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NAME DESIRED CURRENT READY AGE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test-machine-deployment-5bc6dd7c8f 3 3 0 10m
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You will notice a new machine-set backing your machine-deployment&lt;/p>
&lt;ul>
&lt;li>Check Machine Controller Manager machines in the cluster&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl get machine
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NAME STATUS AGE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test-machine-deployment-5bc6dd7c8f-5d24b Pending 5m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test-machine-deployment-5bc6dd7c8f-6mpn4 Pending 5m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test-machine-deployment-5bc6dd7c8f-dpt2q Pending 5m
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now you will notice N (number of replicas specified in the manifest) new machines whose name are prefixed with the machine-deployment object name that you created.&lt;/p>
&lt;ul>
&lt;li>After a few minutes (~3 minutes for AWS), you would see that new nodes have joined the cluster. You can see this using&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl get nodes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NAME STATUS AGE VERSION
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip-10-250-20-19.eu-west-1.compute.internal Ready 1m v1.8.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip-10-250-27-123.eu-west-1.compute.internal Ready 1m v1.8.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip-10-250-31-80.eu-west-1.compute.internal Ready 1m v1.8.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This shows how new nodes have joined your cluster&lt;/p>
&lt;h2 id="inspect-status-of-machine-deployment">Inspect status of machine-deployment&lt;/h2>
&lt;p>To inspect the status of any created machine-deployment run the command below,&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl get machinedeployment test-machine-deployment -o yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You should get the following output.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: machine.sapcloud.io/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: MachineDeployment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> annotations:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> deployment.kubernetes.io/revision: &lt;span style="color:#a31515">&amp;#34;1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubectl.kubernetes.io/last-applied-configuration: |&lt;span style="color:#a31515">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> &lt;/span> {&lt;span style="color:#a31515">&amp;#34;apiVersion&amp;#34;&lt;/span>:&lt;span style="color:#a31515">&amp;#34;machine.sapcloud.io/v1alpha1&amp;#34;&lt;/span>,&lt;span style="color:#a31515">&amp;#34;kind&amp;#34;&lt;/span>:&lt;span style="color:#a31515">&amp;#34;MachineDeployment&amp;#34;&lt;/span>,&lt;span style="color:#a31515">&amp;#34;metadata&amp;#34;&lt;/span>:{&lt;span style="color:#a31515">&amp;#34;annotations&amp;#34;&lt;/span>:{},&lt;span style="color:#a31515">&amp;#34;name&amp;#34;&lt;/span>:&lt;span style="color:#a31515">&amp;#34;test-machine-deployment&amp;#34;&lt;/span>,&lt;span style="color:#a31515">&amp;#34;namespace&amp;#34;&lt;/span>:&lt;span style="color:#a31515">&amp;#34;&amp;#34;&lt;/span>},&lt;span style="color:#a31515">&amp;#34;spec&amp;#34;&lt;/span>:{&lt;span style="color:#a31515">&amp;#34;minReadySeconds&amp;#34;&lt;/span>:200,&lt;span style="color:#a31515">&amp;#34;replicas&amp;#34;&lt;/span>:3,&lt;span style="color:#a31515">&amp;#34;selector&amp;#34;&lt;/span>:{&lt;span style="color:#a31515">&amp;#34;matchLabels&amp;#34;&lt;/span>:{&lt;span style="color:#a31515">&amp;#34;test-label&amp;#34;&lt;/span>:&lt;span style="color:#a31515">&amp;#34;test-label&amp;#34;&lt;/span>}},&lt;span style="color:#a31515">&amp;#34;strategy&amp;#34;&lt;/span>:{&lt;span style="color:#a31515">&amp;#34;rollingUpdate&amp;#34;&lt;/span>:{&lt;span style="color:#a31515">&amp;#34;maxSurge&amp;#34;&lt;/span>:1,&lt;span style="color:#a31515">&amp;#34;maxUnavailable&amp;#34;&lt;/span>:1},&lt;span style="color:#a31515">&amp;#34;type&amp;#34;&lt;/span>:&lt;span style="color:#a31515">&amp;#34;RollingUpdate&amp;#34;&lt;/span>},&lt;span style="color:#a31515">&amp;#34;template&amp;#34;&lt;/span>:{&lt;span style="color:#a31515">&amp;#34;metadata&amp;#34;&lt;/span>:{&lt;span style="color:#a31515">&amp;#34;labels&amp;#34;&lt;/span>:{&lt;span style="color:#a31515">&amp;#34;test-label&amp;#34;&lt;/span>:&lt;span style="color:#a31515">&amp;#34;test-label&amp;#34;&lt;/span>}},&lt;span style="color:#a31515">&amp;#34;spec&amp;#34;&lt;/span>:{&lt;span style="color:#a31515">&amp;#34;class&amp;#34;&lt;/span>:{&lt;span style="color:#a31515">&amp;#34;kind&amp;#34;&lt;/span>:&lt;span style="color:#a31515">&amp;#34;AWSMachineClass&amp;#34;&lt;/span>,&lt;span style="color:#a31515">&amp;#34;name&amp;#34;&lt;/span>:&lt;span style="color:#a31515">&amp;#34;test-aws&amp;#34;&lt;/span>}}}}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> clusterName: &lt;span style="color:#a31515">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> creationTimestamp: 2017-12-27T08:55:56Z
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generation: 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> initializers: &lt;span style="color:#00f">null&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: test-machine-deployment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: &lt;span style="color:#a31515">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resourceVersion: &lt;span style="color:#a31515">&amp;#34;12634168&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> selfLink: /apis/machine.sapcloud.io/v1alpha1/test-machine-deployment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> uid: c0b488f7-eae3-11e7-a6c0-828f843e4186
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> minReadySeconds: 200
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> replicas: 3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> selector:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> matchLabels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> test-label: test-label
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> strategy:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rollingUpdate:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> maxSurge: 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> maxUnavailable: 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: RollingUpdate
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> template:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> creationTimestamp: &lt;span style="color:#00f">null&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> labels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> test-label: test-label
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> class:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: AWSMachineClass
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: test-aws
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>status:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> availableReplicas: 3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conditions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - lastTransitionTime: 2017-12-27T08:57:22Z
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lastUpdateTime: 2017-12-27T08:57:22Z
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> message: Deployment has minimum availability.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> reason: MinimumReplicasAvailable
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status: &lt;span style="color:#a31515">&amp;#34;True&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: Available
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> readyReplicas: 3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> replicas: 3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> updatedReplicas: 3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="health-monitoring">Health monitoring&lt;/h2>
&lt;p>Health monitor is also applied similar to how it&amp;rsquo;s described for &lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/usage/machine_set/">machine-sets&lt;/a>&lt;/p>
&lt;h2 id="update-your-machines">Update your machines&lt;/h2>
&lt;p>Let us consider the scenario where you wish to update all nodes of your cluster from t2.xlarge machines to m5.xlarge machines. Assume that your current &lt;em>test-aws&lt;/em> has its &lt;strong>spec.machineType: t2.xlarge&lt;/strong> and your deployment &lt;em>test-machine-deployment&lt;/em> points to this AWSMachineClass.&lt;/p>
&lt;h4 id="inspect-existing-cluster-configuration">Inspect existing cluster configuration&lt;/h4>
&lt;ul>
&lt;li>Check Nodes present in the cluster&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl get nodes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NAME STATUS AGE VERSION
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip-10-250-20-19.eu-west-1.compute.internal Ready 1m v1.8.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip-10-250-27-123.eu-west-1.compute.internal Ready 1m v1.8.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip-10-250-31-80.eu-west-1.compute.internal Ready 1m v1.8.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Check Machine Controller Manager machine-sets in the cluster. You will notice one machine-set backing your machine-deployment&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl get machineset
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NAME DESIRED CURRENT READY AGE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test-machine-deployment-5bc6dd7c8f 3 3 3 10m
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Login to your cloud provider (AWS). In the VM management console, you will find N VMs created of type t2.xlarge.&lt;/li>
&lt;/ul>
&lt;h4 id="perform-a-rolling-update">Perform a rolling update&lt;/h4>
&lt;p>To update this machine-deployment VMs to &lt;code>m5.xlarge&lt;/code>, we would do the following:&lt;/p>
&lt;ul>
&lt;li>Copy your existing aws-machine-class.yaml&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cp kubernetes/machine_classes/aws-machine-class.yaml kubernetes/machine_classes/aws-machine-class-new.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Modify aws-machine-class-new.yaml, and update its &lt;em>metadata.name: test-aws2&lt;/em> and &lt;em>spec.machineType: m5.xlarge&lt;/em>&lt;/li>
&lt;li>Now create this modified MachineClass&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl apply -f kubernetes/machine_classes/aws-machine-class-new.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Edit your existing machine-deployment&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl edit machinedeployment test-machine-deployment
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Update from &lt;em>spec.template.spec.class.name: test-aws&lt;/em> to &lt;em>spec.template.spec.class.name: test-aws2&lt;/em>&lt;/li>
&lt;/ul>
&lt;h4 id="re-check-cluster-configuration">Re-check cluster configuration&lt;/h4>
&lt;p>After a few minutes (~3mins)&lt;/p>
&lt;ul>
&lt;li>Check nodes present in cluster now. They are different nodes.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl get nodes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NAME STATUS AGE VERSION
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip-10-250-11-171.eu-west-1.compute.internal Ready 4m v1.8.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip-10-250-17-213.eu-west-1.compute.internal Ready 5m v1.8.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip-10-250-31-81.eu-west-1.compute.internal Ready 5m v1.8.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Check Machine Controller Manager machine-sets in the cluster. You will notice two machine-sets backing your machine-deployment&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl get machineset
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NAME DESIRED CURRENT READY AGE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test-machine-deployment-5bc6dd7c8f 0 0 0 1h
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test-machine-deployment-86ff45cc5 3 3 3 20m
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Login to your cloud provider (AWS). In the VM management console, you will find N VMs created of type t2.xlarge in terminated state, and N new VMs of type m5.xlarge in running state.&lt;/li>
&lt;/ul>
&lt;p>This shows how a rolling update of a cluster from nodes with t2.xlarge to m5.xlarge went through.&lt;/p>
&lt;h4 id="more-variants-of-updates">More variants of updates&lt;/h4>
&lt;ul>
&lt;li>The above demonstration was a simple use case. This could be more complex like - updating the system disk image versions/ kubelet versions/ security patches etc.&lt;/li>
&lt;li>You can also play around with the maxSurge and maxUnavailable fields in machine-deployment.yaml&lt;/li>
&lt;li>You can also change the update strategy from rollingupdate to recreate&lt;/li>
&lt;/ul>
&lt;h2 id="undo-an-update">Undo an update&lt;/h2>
&lt;ul>
&lt;li>Edit the existing machine-deployment&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl edit machinedeployment test-machine-deployment
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Edit the deployment to have this new field of &lt;em>spec.rollbackTo.revision: 0&lt;/em> as shown as comments in &lt;code>kubernetes/machine_objects/machine-deployment.yaml&lt;/code>&lt;/li>
&lt;li>This will undo your update to the previous version.&lt;/li>
&lt;/ul>
&lt;h2 id="pause-an-update">Pause an update&lt;/h2>
&lt;ul>
&lt;li>You can also pause the update while update is going on by editing the existing machine-deployment&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl edit machinedeployment test-machine-deployment
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;p>Edit the deployment to have this new field of &lt;em>spec.paused: true&lt;/em> as shown as comments in &lt;code>kubernetes/machine_objects/machine-deployment.yaml&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>This will pause the rollingUpdate if it&amp;rsquo;s in process&lt;/p>
&lt;/li>
&lt;li>
&lt;p>To resume the update, edit the deployment as mentioned above and remove the field &lt;em>spec.paused: true&lt;/em> updated earlier&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="delete-machine-deployment">Delete machine-deployment&lt;/h2>
&lt;ul>
&lt;li>To delete the VM using the &lt;code>kubernetes/machine_objects/machine-deployment.yaml&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl delete -f kubernetes/machine_objects/machine-deployment.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The Machine Controller Manager picks up the manifest and starts to delete the existing VMs by talking to the cloud provider. The nodes should be detached from the cluster in a few minutes (~1min for AWS).&lt;/p></description></item><item><title>Docs: Machine Set</title><link>https://gardener.cloud/docs/other-components/machine-controller-manager/usage/machine_set/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/machine-controller-manager/usage/machine_set/</guid><description>
&lt;h1 id="maintaining-machine-replicas-using-machines-sets">Maintaining machine replicas using machines-sets&lt;/h1>
&lt;!-- TOC -->
&lt;ul>
&lt;li>&lt;a href="#maintaining-machine-replicas-using-machines-sets">Maintaining machine replicas using machines-sets&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#setting-up-your-usage-environment">Setting up your usage environment&lt;/a>&lt;/li>
&lt;li>&lt;a href="#important-warning">Important ⚠️&lt;/a>&lt;/li>
&lt;li>&lt;a href="#creating-machine-set">Creating machine-set&lt;/a>&lt;/li>
&lt;li>&lt;a href="#inspect-status-of-machine-set">Inspect status of machine-set&lt;/a>&lt;/li>
&lt;li>&lt;a href="#health-monitoring">Health monitoring&lt;/a>&lt;/li>
&lt;li>&lt;a href="#delete-machine-set">Delete machine-set&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;!-- /TOC -->
&lt;h2 id="setting-up-your-usage-environment">Setting up your usage environment&lt;/h2>
&lt;ul>
&lt;li>Follow the &lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/usage/prerequisite/">steps described here&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="important-">Important ⚠️&lt;/h2>
&lt;blockquote>
&lt;p>Make sure that the &lt;code>kubernetes/machines_objects/machine-set.yaml&lt;/code> points to the same class name as the &lt;code>kubernetes/machine_classes/aws-machine-class.yaml&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Similarly &lt;code>kubernetes/machine_classes/aws-machine-class.yaml&lt;/code> secret name and namespace should be same as that mentioned in &lt;code>kubernetes/secrets/aws-secret.yaml&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;h2 id="creating-machine-set">Creating machine-set&lt;/h2>
&lt;ul>
&lt;li>Modify &lt;code>kubernetes/machine_objects/machine-set.yaml&lt;/code> as per your requirement. You can modify the number of replicas to the desired number of machines. Then, create an machine-set:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl apply -f kubernetes/machine_objects/machine-set.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You should notice that the Machine Controller Manager has immediately picked up your manifest and started to create a new machines based on the number of replicas you have provided in the manifest.&lt;/p>
&lt;ul>
&lt;li>Check Machine Controller Manager machine-sets in the cluster&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl get machineset
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NAME DESIRED CURRENT READY AGE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test-machine-set 3 3 0 1m
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You will see a new machine-set with your given name&lt;/p>
&lt;ul>
&lt;li>Check Machine Controller Manager machines in the cluster:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl get machine
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NAME STATUS AGE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test-machine-set-b57zs Pending 5m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test-machine-set-c4bg8 Pending 5m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test-machine-set-kvskg Pending 5m
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now you will see N (number of replicas specified in the manifest) new machines whose names are prefixed with the machine-set object name that you created.&lt;/p>
&lt;ul>
&lt;li>After a few minutes (~3 minutes for AWS), you should notice new nodes joining the cluster. You can verify this by running:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl get nodes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NAME STATUS AGE VERSION
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip-10-250-0-234.eu-west-1.compute.internal Ready 3m v1.8.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip-10-250-15-98.eu-west-1.compute.internal Ready 3m v1.8.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip-10-250-6-21.eu-west-1.compute.internal Ready 2m v1.8.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This shows how new nodes have joined your cluster&lt;/p>
&lt;h2 id="inspect-status-of-machine-set">Inspect status of machine-set&lt;/h2>
&lt;ul>
&lt;li>To inspect the status of any created machine-set run the following command:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl get machineset test-machine-set -o yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: machine.sapcloud.io/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: MachineSet
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> annotations:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubectl.kubernetes.io/last-applied-configuration: |&lt;span style="color:#a31515">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> &lt;/span> {&lt;span style="color:#a31515">&amp;#34;apiVersion&amp;#34;&lt;/span>:&lt;span style="color:#a31515">&amp;#34;machine.sapcloud.io/v1alpha1&amp;#34;&lt;/span>,&lt;span style="color:#a31515">&amp;#34;kind&amp;#34;&lt;/span>:&lt;span style="color:#a31515">&amp;#34;MachineSet&amp;#34;&lt;/span>,&lt;span style="color:#a31515">&amp;#34;metadata&amp;#34;&lt;/span>:{&lt;span style="color:#a31515">&amp;#34;annotations&amp;#34;&lt;/span>:{},&lt;span style="color:#a31515">&amp;#34;name&amp;#34;&lt;/span>:&lt;span style="color:#a31515">&amp;#34;test-machine-set&amp;#34;&lt;/span>,&lt;span style="color:#a31515">&amp;#34;namespace&amp;#34;&lt;/span>:&lt;span style="color:#a31515">&amp;#34;&amp;#34;&lt;/span>,&lt;span style="color:#a31515">&amp;#34;test-label&amp;#34;&lt;/span>:&lt;span style="color:#a31515">&amp;#34;test-label&amp;#34;&lt;/span>},&lt;span style="color:#a31515">&amp;#34;spec&amp;#34;&lt;/span>:{&lt;span style="color:#a31515">&amp;#34;minReadySeconds&amp;#34;&lt;/span>:200,&lt;span style="color:#a31515">&amp;#34;replicas&amp;#34;&lt;/span>:3,&lt;span style="color:#a31515">&amp;#34;selector&amp;#34;&lt;/span>:{&lt;span style="color:#a31515">&amp;#34;matchLabels&amp;#34;&lt;/span>:{&lt;span style="color:#a31515">&amp;#34;test-label&amp;#34;&lt;/span>:&lt;span style="color:#a31515">&amp;#34;test-label&amp;#34;&lt;/span>}},&lt;span style="color:#a31515">&amp;#34;template&amp;#34;&lt;/span>:{&lt;span style="color:#a31515">&amp;#34;metadata&amp;#34;&lt;/span>:{&lt;span style="color:#a31515">&amp;#34;labels&amp;#34;&lt;/span>:{&lt;span style="color:#a31515">&amp;#34;test-label&amp;#34;&lt;/span>:&lt;span style="color:#a31515">&amp;#34;test-label&amp;#34;&lt;/span>}},&lt;span style="color:#a31515">&amp;#34;spec&amp;#34;&lt;/span>:{&lt;span style="color:#a31515">&amp;#34;class&amp;#34;&lt;/span>:{&lt;span style="color:#a31515">&amp;#34;kind&amp;#34;&lt;/span>:&lt;span style="color:#a31515">&amp;#34;AWSMachineClass&amp;#34;&lt;/span>,&lt;span style="color:#a31515">&amp;#34;name&amp;#34;&lt;/span>:&lt;span style="color:#a31515">&amp;#34;test-aws&amp;#34;&lt;/span>}}}}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> clusterName: &lt;span style="color:#a31515">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> creationTimestamp: 2017-12-27T08:37:42Z
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> finalizers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - machine.sapcloud.io/operator
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generation: 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> initializers: &lt;span style="color:#00f">null&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: test-machine-set
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: &lt;span style="color:#a31515">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resourceVersion: &lt;span style="color:#a31515">&amp;#34;12630893&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> selfLink: /apis/machine.sapcloud.io/v1alpha1/test-machine-set
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> uid: 3469faaa-eae1-11e7-a6c0-828f843e4186
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> machineClass: {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> minReadySeconds: 200
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> replicas: 3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> selector:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> matchLabels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> test-label: test-label
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> template:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> creationTimestamp: &lt;span style="color:#00f">null&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> labels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> test-label: test-label
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> class:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: AWSMachineClass
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: test-aws
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>status:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> availableReplicas: 3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fullyLabeledReplicas: 3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> machineSetCondition: &lt;span style="color:#00f">null&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lastOperation:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lastUpdateTime: &lt;span style="color:#00f">null&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> observedGeneration: 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> readyReplicas: 3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> replicas: 3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="health-monitoring">Health monitoring&lt;/h2>
&lt;ul>
&lt;li>If you try to delete/terminate any of the machines backing the machine-set by either talking to the Machine Controller Manager or from the cloud provider, the Machine Controller Manager recreates a matching healthy machine to replace the deleted machine.&lt;/li>
&lt;li>Similarly, if any of your machines are unreachable or in an unhealthy state (kubelet not ready / disk pressure) for longer than the configured timeout (~ 5mins), the Machine Controller Manager recreates the nodes to replace the unhealthy nodes.&lt;/li>
&lt;/ul>
&lt;h2 id="delete-machine-set">Delete machine-set&lt;/h2>
&lt;ul>
&lt;li>To delete the VM using the &lt;code>kubernetes/machine_objects/machine-set.yaml&lt;/code>:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl delete -f kubernetes/machine-set.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now the Machine Controller Manager has immediately picked up your manifest and started to delete the existing VMs by talking to the cloud provider. Your nodes should be detached from the cluster in a few minutes (~1min for AWS).&lt;/p></description></item><item><title>Docs: Prerequisite</title><link>https://gardener.cloud/docs/other-components/machine-controller-manager/usage/prerequisite/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/other-components/machine-controller-manager/usage/prerequisite/</guid><description>
&lt;h1 id="setting-up-the-usage-environment">Setting up the usage environment&lt;/h1>
&lt;!-- TOC -->
&lt;ul>
&lt;li>&lt;a href="#setting-up-the-usage-environment">Setting up the usage environment&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#important-warning">Important ⚠️&lt;/a>&lt;/li>
&lt;li>&lt;a href="#set-kubeconfig">Set KUBECONFIG&lt;/a>&lt;/li>
&lt;li>&lt;a href="#replace-provider-credentials-and-desired-vm-configurations">Replace provider credentials and desired VM configurations&lt;/a>&lt;/li>
&lt;li>&lt;a href="#deploy-required-crds-and-objects">Deploy required CRDs and Objects&lt;/a>&lt;/li>
&lt;li>&lt;a href="#check-current-cluster-state">Check current cluster state&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;!-- /TOC -->
&lt;h2 id="important-">Important ⚠️&lt;/h2>
&lt;blockquote>
&lt;p>All paths are relative to the root location of this project repository.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Run the Machine Controller Manager either as described in &lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/development/local_setup/">Setting up a local development environment&lt;/a> or &lt;a href="https://gardener.cloud/docs/other-components/machine-controller-manager/deployment/kubernetes/">Deploying the Machine Controller Manager into a Kubernetes cluster&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Make sure that the following steps are run before managing machines/ machine-sets/ machine-deploys.&lt;/p>
&lt;/blockquote>
&lt;h2 id="set-kubeconfig">Set KUBECONFIG&lt;/h2>
&lt;p>Using the existing &lt;a href="https://kubernetes.io/docs/tasks/access-application-cluster/authenticate-across-clusters-kubeconfig/">Kubeconfig&lt;/a>, open another Terminal panel/window with the &lt;code>KUBECONFIG&lt;/code> environment variable pointing to this Kubeconfig file as shown below,&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ export KUBECONFIG=&amp;lt;PATH_TO_REPO&amp;gt;/dev/kubeconfig.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="replace-provider-credentials-and-desired-vm-configurations">Replace provider credentials and desired VM configurations&lt;/h2>
&lt;p>Open &lt;code>kubernetes/machine_classes/aws-machine-class.yaml&lt;/code> and replace required values there with the desired VM configurations.&lt;/p>
&lt;p>Similarily open &lt;code>kubernetes/secrets/aws-secret.yaml&lt;/code> and replace - &lt;em>userData, providerAccessKeyId, providerSecretAccessKey&lt;/em> with base64 encoded values of cloudconfig file, AWS access key id, and AWS secret access key respectively. Use the following command to get the base64 encoded value of your details&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ echo &lt;span style="color:#a31515">&amp;#34;sample-cloud-config&amp;#34;&lt;/span> | base64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>base64-encoded-cloud-config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Do the same for your access key id and secret access key.&lt;/p>
&lt;h2 id="deploy-required-crds-and-objects">Deploy required CRDs and Objects&lt;/h2>
&lt;p>Create all the required CRDs in the cluster using &lt;code>kubernetes/crds.yaml&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl apply -f kubernetes/crds.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create the class template that will be used as an machine template to create VMs using &lt;code>kubernetes/machine_classes/aws-machine-class.yaml&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl apply -f kubernetes/machine_classes/aws-machine-class.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create the secret used for the cloud credentials and cloudconfig using &lt;code>kubernetes/secrets/aws-secret.yaml&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl apply -f kubernetes/secrets/aws-secret.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="check-current-cluster-state">Check current cluster state&lt;/h2>
&lt;p>Get to know the current cluster state using the following commands,&lt;/p>
&lt;ul>
&lt;li>Checking aws-machine-class in the cluster&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl get awsmachineclass
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NAME MACHINE TYPE AMI AGE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test-aws t2.large ami-123456 5m
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Checking kubernetes secrets in the cluster&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl get secret
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NAME TYPE DATA AGE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test-secret Opaque 3 21h
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Checking kubernetes nodes in the cluster&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl get nodes
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lists the default set of nodes attached to your cluster&lt;/p>
&lt;ul>
&lt;li>Checking Machine Controller Manager machines in the cluster&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl get machine
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>No resources found.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Checking Machine Controller Manager machine-sets in the cluster&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl get machineset
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>No resources found.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Checking Machine Controller Manager machine-deploys in the cluster&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kubectl get machinedeployment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>No resources found.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>