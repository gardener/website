<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Core Components on Gardener</title><link>https://gardener.cloud/v1.17.1/concepts/core-components/</link><description>Recent content in Core Components on Gardener</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://gardener.cloud/v1.17.1/concepts/core-components/index.xml" rel="self" type="application/rss+xml"/><item><title>Gardener Scheduler</title><link>https://gardener.cloud/v1.17.1/concepts/core-components/scheduler/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/v1.17.1/concepts/core-components/scheduler/</guid><description>Gardener Scheduler The Gardener Scheduler is in essence a controller that watches newly created shoots and assigns a seed cluster to them. Conceptually, the task of the Gardener Scheduler is very similar to the task of the Kubernetes Scheduler: finding a seed for a shoot instead of a node for a pod.
Either the scheduling strategy or the shoot cluster purpose hereby determines how the scheduler is operating. The following sections explain the configuration and flow in greater detail.</description></item><item><title>Gardener Seed Admission Controller</title><link>https://gardener.cloud/v1.17.1/concepts/core-components/seed-admission-controller/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/v1.17.1/concepts/core-components/seed-admission-controller/</guid><description>Gardener Seed Admission Controller The Gardener Seed admission controller is deployed by the Gardenlet as part of its seed bootstrapping phase and, consequently, running in every seed cluster. It&amp;rsquo;s main purpose is to serve webhooks (validating or mutating) in order to admit or deny certain requests to the seed&amp;rsquo;s API server.
What is it doing concretely? Validating Webhooks Unconfirmed Deletion Prevention As part of Gardener&amp;rsquo;s extensibility concepts a lot of CustomResourceDefinitions are deployed to the seed clusters that serve as extension points for provider-specific controllers.</description></item><item><title>gardenlet</title><link>https://gardener.cloud/v1.17.1/concepts/core-components/gardenlet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/v1.17.1/concepts/core-components/gardenlet/</guid><description>Gardenlet Gardener is implemented using the operator pattern: It uses custom controllers that act on our own custom resources, and apply Kubernetes principles to manage clusters instead of containers. Following this analogy, you can recognize components of the Gardener architecture as well-known Kubernetes components, for example, shoot clusters can be compared with pods, and seed clusters can be seen as worker nodes.
The following Gardener components play a similar role as the corresponding components in the Kubernetes architecture:</description></item></channel></rss>