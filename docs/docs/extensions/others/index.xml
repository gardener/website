<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gardener â€“ Others</title><link>https://gardener.cloud/docs/extensions/others/</link><description>Recent content in Others on Gardener</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Thu, 20 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://gardener.cloud/docs/extensions/others/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Certificate services</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-cert-service/</link><pubDate>Thu, 20 Jul 2023 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-cert-service/</guid><description>
&lt;h1 id="gardener-extension-for-certificate-serviceshttpsgardenercloud">&lt;a href="https://gardener.cloud">Gardener Extension for certificate services&lt;/a>&lt;/h1>
&lt;p>&lt;a href="https://concourse.ci.gardener.cloud/teams/gardener/pipelines/gardener-extension-shoot-cert-service-master/jobs/master-head-update-job">&lt;img src="https://concourse.ci.gardener.cloud/api/v1/teams/gardener/pipelines/gardener-extension-shoot-cert-service-master/jobs/master-head-update-job/badge" alt="CI Build status">&lt;/a>
&lt;a href="https://goreportcard.com/report/github.com/gardener/gardener-extension-shoot-cert-service">&lt;img src="https://goreportcard.com/badge/github.com/gardener/gardener-extension-shoot-cert-service" alt="Go Report Card">&lt;/a>&lt;/p>
&lt;p>Project Gardener implements the automated management and operation of &lt;a href="https://kubernetes.io/">Kubernetes&lt;/a> clusters as a service. Its main principle is to leverage Kubernetes concepts for all of its tasks.&lt;/p>
&lt;p>Recently, most of the vendor specific logic has been developed &lt;a href="https://github.com/gardener/gardener">in-tree&lt;/a>. However, the project has grown to a size where it is very hard to extend, maintain, and test. With &lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/01-extensibility.md">GEP-1&lt;/a> we have proposed how the architecture can be changed in a way to support external controllers that contain their very own vendor specifics. This way, we can keep Gardener core clean and independent.&lt;/p>
&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;p>Example configuration for this extension controller:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: shoot-cert-service.extensions.config.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Configuration
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>issuerName: gardener
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>restrictIssuer: &lt;span style="color:#00f">true&lt;/span> &lt;span style="color:#008000"># restrict issuer to any sub-domain of shoot.spec.dns.domain (default)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>acme:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> email: john.doe@example.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server: https://acme-v02.api.letsencrypt.org/directory
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># privateKey: | # Optional key for Let&amp;#39;s Encrypt account.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># -----BEGIN BEGIN RSA PRIVATE KEY-----&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># -----END RSA PRIVATE KEY-----&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="extension-resources">Extension-Resources&lt;/h2>
&lt;p>Example extension resource:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Extension
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: &lt;span style="color:#a31515">&amp;#34;extension-certificate-service&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: shoot--project--abc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: shoot-cert-service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>When an extension resource is reconciled, the extension controller will create an instance of &lt;a href="https://github.com/gardener/cert-management">Cert-Management&lt;/a> as well as an &lt;code>Issuer&lt;/code> with the ACME information provided in the &lt;a href="https://github.com/gardener/gardener-extension-shoot-cert-service/blob/master/README.md#Configuration">configuration&lt;/a> above. These resources are placed inside the shoot namespace on the seed. Also, the controller takes care about generating necessary &lt;code>RBAC&lt;/code> resources for the seed as well as for the shoot.&lt;/p>
&lt;p>Please note, this extension controller relies on the &lt;a href="https://github.com/gardener/gardener-resource-manager">Gardener-Resource-Manager&lt;/a> to deploy k8s resources to seed and shoot clusters, i.e. it never deploys them directly.&lt;/p>
&lt;h2 id="how-to-start-using-or-developing-this-extension-controller-locally">How to start using or developing this extension controller locally&lt;/h2>
&lt;p>You can run the controller locally on your machine by executing &lt;code>make start&lt;/code>. Please make sure to have the kubeconfig to the cluster you want to connect to ready in the &lt;code>./dev/kubeconfig&lt;/code> file.
Static code checks and tests can be executed by running &lt;code>make verify&lt;/code>. We are using Go modules for Golang package dependency management and &lt;a href="https://github.com/onsi/ginkgo">Ginkgo&lt;/a>/&lt;a href="https://github.com/onsi/gomega">Gomega&lt;/a> for testing.&lt;/p>
&lt;h2 id="feedback-and-support">Feedback and Support&lt;/h2>
&lt;p>Feedback and contributions are always welcome. Please report bugs or suggestions as &lt;a href="https://github.com/gardener/gardener-extension-shoot-cert-service/issues">GitHub issues&lt;/a> or join our &lt;a href="https://kubernetes.slack.com/messages/gardener">Slack channel #gardener&lt;/a> (please invite yourself to the Kubernetes workspace &lt;a href="http://slack.k8s.io">here&lt;/a>).&lt;/p>
&lt;h2 id="learn-more">Learn more!&lt;/h2>
&lt;p>Please find further resources about out project here:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/">Our landing page gardener.cloud&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/blog/2018/05/17/gardener/">&amp;ldquo;Gardener, the Kubernetes Botanist&amp;rdquo; blog on kubernetes.io&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/blog/2019/12/02/gardener-project-update/">&amp;ldquo;Gardener Project Update&amp;rdquo; blog on kubernetes.io&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://godoc.org/github.com/gardener/gardener/extensions/pkg">Gardener Extensions Golang library&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/01-extensibility.md">GEP-1 (Gardener Enhancement Proposal) on extensibility&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gardener/gardener/tree/master/docs/extensions">Extensibility API documentation&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docs: DNS services</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-dns-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-dns-service/</guid><description>
&lt;h1 id="gardener-extension-for-dns-serviceshttpsgardenercloud">&lt;a href="https://gardener.cloud">Gardener Extension for DNS services&lt;/a>&lt;/h1>
&lt;p>&lt;a href="https://concourse.ci.gardener.cloud/teams/gardener-tests/pipelines/gardener-extension-shoot-dns-service-master/jobs/master-head-update-job">&lt;img src="https://concourse.ci.gardener.cloud/api/v1/teams/gardener-tests/pipelines/gardener-extension-shoot-dns-service-master/jobs/master-head-update-job/badge" alt="CI Build status">&lt;/a>
&lt;a href="https://goreportcard.com/report/github.com/gardener/gardener-extension-shoot-dns-service">&lt;img src="https://goreportcard.com/badge/github.com/gardener/gardener-extension-shoot-dns-service" alt="Go Report Card">&lt;/a>&lt;/p>
&lt;p>Project Gardener implements the automated management and operation of &lt;a href="https://kubernetes.io/">Kubernetes&lt;/a> clusters as a service. Its main principle is to leverage Kubernetes concepts for all of its tasks.&lt;/p>
&lt;p>Recently, most of the vendor specific logic has been developed &lt;a href="https://github.com/gardener/gardener">in-tree&lt;/a>. However, the project has grown to a size where it is very hard to extend, maintain, and test. With &lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/01-extensibility.md">GEP-1&lt;/a> we have proposed how the architecture can be changed in a way to support external controllers that contain their very own vendor specifics. This way, we can keep Gardener core clean and independent.&lt;/p>
&lt;h2 id="extension-resources">Extension-Resources&lt;/h2>
&lt;p>Example extension resource:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Extension
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: &lt;span style="color:#a31515">&amp;#34;extension-dns-service&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: shoot--project--abc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: shoot-dns-service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="how-to-start-using-or-developing-this-extension-controller-locally">How to start using or developing this extension controller locally&lt;/h2>
&lt;p>You can run the controller locally on your machine by executing &lt;code>make start&lt;/code>. Please make sure to have the kubeconfig to the cluster you want to connect to ready in the &lt;code>./dev/kubeconfig&lt;/code> file.
Static code checks and tests can be executed by running &lt;code>make verify&lt;/code>. We are using Go modules for Golang package dependency management and &lt;a href="https://github.com/onsi/ginkgo">Ginkgo&lt;/a>/&lt;a href="https://github.com/onsi/gomega">Gomega&lt;/a> for testing.&lt;/p>
&lt;h2 id="feedback-and-support">Feedback and Support&lt;/h2>
&lt;p>Feedback and contributions are always welcome. Please report bugs or suggestions as &lt;a href="https://github.com/gardener/gardener-extension-shoot-dns-service/issues">GitHub issues&lt;/a> or join our &lt;a href="https://kubernetes.slack.com/messages/gardener">Slack channel #gardener&lt;/a> (please invite yourself to the Kubernetes workspace &lt;a href="http://slack.k8s.io">here&lt;/a>).&lt;/p>
&lt;h2 id="learn-more">Learn more!&lt;/h2>
&lt;p>Please find further resources about out project here:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/">Our landing page gardener.cloud&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/blog/2018/05/17/gardener/">&amp;ldquo;Gardener, the Kubernetes Botanist&amp;rdquo; blog on kubernetes.io&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/blog/2019/12/02/gardener-project-update/">&amp;ldquo;Gardener Project Update&amp;rdquo; blog on kubernetes.io&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://godoc.org/github.com/gardener/gardener/extensions/pkg">Gardener Extensions Golang library&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/01-extensibility.md">GEP-1 (Gardener Enhancement Proposal) on extensibility&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gardener/gardener/tree/master/docs/extensions">Extensibility API documentation&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docs: Egress filtering</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-networking-filter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-networking-filter/</guid><description>
&lt;h1 id="gardener-extension-for-networking-filterhttpsgardenercloud">&lt;a href="https://gardener.cloud">Gardener Extension for Networking Filter&lt;/a>&lt;/h1>
&lt;p>&lt;a href="https://api.reuse.software/info/github.com/gardener/gardener-extension-shoot-networking-filter">&lt;img src="https://api.reuse.software/badge/github.com/gardener/gardener-extension-shoot-networking-filter" alt="REUSE status">&lt;/a>&lt;/p>
&lt;p>Project Gardener implements the automated management and operation of &lt;a href="https://kubernetes.io/">Kubernetes&lt;/a> clusters as a service.
Its main principle is to leverage Kubernetes concepts for all of its tasks.&lt;/p>
&lt;p>Recently, most of the vendor specific logic has been developed &lt;a href="https://github.com/gardener/gardener">in-tree&lt;/a>.
However, the project has grown to a size where it is very hard to extend, maintain, and test.
With &lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/01-extensibility.md">GEP-1&lt;/a> we have proposed how the architecture can be changed in a way to support external controllers that contain their very own vendor specifics.
This way, we can keep Gardener core clean and independent.&lt;/p>
&lt;p>This controller implements Gardener&amp;rsquo;s extension contract for the &lt;code>shoot-networking-filter&lt;/code> extension.&lt;/p>
&lt;p>An example for a &lt;code>ControllerRegistration&lt;/code> resource that can be used to register this controller to Gardener can be found &lt;a href="https://github.com/gardener/gardener-extension-shoot-networking-filter/blob/master/example/controller-registration.yaml">here&lt;/a>.&lt;/p>
&lt;p>Please find more information regarding the extensibility concepts and a detailed proposal &lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/01-extensibility.md">here&lt;/a>.&lt;/p>
&lt;h2 id="extension-resources">Extension Resources&lt;/h2>
&lt;p>Currently there is nothing to specify in the extension spec.&lt;/p>
&lt;p>Example extension resource:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Extension
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: extension-shoot-networking-filter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: shoot--project--abc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>When an extension resource is reconciled, the extension controller will create a daemonset &lt;code>egress-filter-applier&lt;/code> on the shoot containing a &lt;a href="https://github.com/gardener/egress-filter-refresher/blob/master/Dockerfile">Dockerfile&lt;/a> container.&lt;/p>
&lt;p>Please note, this extension controller relies on the &lt;a href="https://github.com/gardener/gardener/blob/master/docs/concepts/resource-manager.md">Gardener-Resource-Manager&lt;/a> to deploy k8s resources to seed and shoot clusters.&lt;/p>
&lt;h2 id="how-to-start-using-or-developing-this-extension-controller-locally">How to start using or developing this extension controller locally&lt;/h2>
&lt;p>You can run the controller locally on your machine by executing &lt;code>make start&lt;/code>.&lt;/p>
&lt;p>We are using Go modules for Golang package dependency management and &lt;a href="https://github.com/onsi/ginkgo">Ginkgo&lt;/a>/&lt;a href="https://github.com/onsi/gomega">Gomega&lt;/a> for testing.&lt;/p>
&lt;h2 id="feedback-and-support">Feedback and Support&lt;/h2>
&lt;p>Feedback and contributions are always welcome. Please report bugs or suggestions as &lt;a href="https://github.com/gardener/gardener-extension-shoot-networking-filter/issues">GitHub issues&lt;/a> or join our &lt;a href="https://kubernetes.slack.com/messages/gardener">Slack channel #gardener&lt;/a> (please invite yourself to the Kubernetes workspace &lt;a href="http://slack.k8s.io">here&lt;/a>).&lt;/p>
&lt;h2 id="learn-more">Learn more!&lt;/h2>
&lt;p>Please find further resources about out project here:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/">Our landing page gardener.cloud&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/blog/2018/05/17/gardener/">&amp;ldquo;Gardener, the Kubernetes Botanist&amp;rdquo; blog on kubernetes.io&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/blog/2019/12/02/gardener-project-update/">&amp;ldquo;Gardener Project Update&amp;rdquo; blog on kubernetes.io&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/01-extensibility.md">GEP-1 (Gardener Enhancement Proposal) on extensibility&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gardener/gardener/tree/master/docs/extensions">Extensibility API documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://godoc.org/github.com/gardener/gardener/extensions/pkg">Gardener Extensions Golang library&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/api-reference/">Gardener API Reference&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docs: Lakom service</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-lakom-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-lakom-service/</guid><description>
&lt;h1 id="gardener-extension-for-lakom-serviceshttpsgardenercloud">&lt;a href="https://gardener.cloud">Gardener Extension for lakom services&lt;/a>&lt;/h1>
&lt;p>&lt;a href="https://api.reuse.software/info/github.com/gardener/gardener-extension-shoot-lakom-service">&lt;img src="https://api.reuse.software/badge/github.com/gardener/gardener-extension-shoot-lakom-service" alt="REUSE status">&lt;/a>&lt;/p>
&lt;p>Project Gardener implements the automated management and operation of &lt;a href="https://kubernetes.io/">Kubernetes&lt;/a> clusters as a service.
Its main principle is to leverage Kubernetes concepts for all of its tasks.&lt;/p>
&lt;p>Recently, most of the vendor specific logic has been developed &lt;a href="https://github.com/gardener/gardener">in-tree&lt;/a>.
However, the project has grown to a size where it is very hard to extend, maintain, and test.
With &lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/01-extensibility.md">GEP-1&lt;/a> we have proposed how the architecture can be changed in a way to support external controllers that contain their very own vendor specifics.
This way, we can keep Gardener core clean and independent.&lt;/p>
&lt;p>This controller implements Gardener&amp;rsquo;s extension contract for the &lt;code>shoot-lakom-service&lt;/code> extension.&lt;/p>
&lt;p>An example for a &lt;code>ControllerRegistration&lt;/code> resource that can be used to register this controller to Gardener can be found &lt;a href="https://github.com/gardener/gardener-extension-shoot-lakom-service/blob/main/example/controller-registration.yaml">here&lt;/a>.&lt;/p>
&lt;p>Please find more information regarding the extensibility concepts and a detailed proposal &lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/01-extensibility.md">here&lt;/a>.&lt;/p>
&lt;h2 id="lakom-admission-controller">Lakom Admission Controller&lt;/h2>
&lt;p>Lakom is kubernetes admission controller which purpose is to implement &lt;a href="https://github.com/sigstore/cosign">cosign&lt;/a> image signature verification against public cosign key. It also takes care to resolve image tags to sha256 digests. It also caches all OCI artifacts to reduce the load toward the OCI registry.&lt;/p>
&lt;h2 id="extension-resources">Extension Resources&lt;/h2>
&lt;p>Example extension resource:&lt;/p>
&lt;blockquote>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Extension
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: extension-shoot-lakom-service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: shoot--project--abc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: shoot-lakom-service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>When an extension resource is reconciled, the extension controller will create an instance of &lt;code>lakom&lt;/code> admission controller. These resources are placed inside the shoot namespace on the seed. Also, the controller takes care about generating necessary &lt;code>RBAC&lt;/code> resources for the seed as well as for the shoot.&lt;/p>
&lt;p>Please note, this extension controller relies on the &lt;a href="https://github.com/gardener/gardener/blob/master/docs/concepts/resource-manager.md">Gardener-Resource-Manager&lt;/a> to deploy k8s resources to seed and shoot clusters.&lt;/p>
&lt;h2 id="how-to-start-using-or-developing-this-extension-controller-locally">How to start using or developing this extension controller locally&lt;/h2>
&lt;p>The &lt;code>Lakom&lt;/code> admission controller can be configured with &lt;code>make dev-setup&lt;/code> and started with &lt;code>make start-lakom&lt;/code>.
You can run the lakom extension controller locally on your machine by executing &lt;code>make start&lt;/code>.&lt;/p>
&lt;p>We are using Go modules for Golang package dependency management and &lt;a href="https://github.com/onsi/ginkgo">Ginkgo&lt;/a>/&lt;a href="https://github.com/onsi/gomega">Gomega&lt;/a> for testing.&lt;/p>
&lt;h2 id="feedback-and-support">Feedback and Support&lt;/h2>
&lt;p>Feedback and contributions are always welcome. Please report bugs or suggestions as &lt;a href="https://github.com/gardener/gardener-extension-shoot-lakom-service/issues">GitHub issues&lt;/a> or join our &lt;a href="https://kubernetes.slack.com/messages/gardener">Slack channel #gardener&lt;/a> (please invite yourself to the Kubernetes workspace &lt;a href="http://slack.k8s.io">here&lt;/a>).&lt;/p>
&lt;h2 id="learn-more">Learn more!&lt;/h2>
&lt;p>Please find further resources about out project here:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/">Our landing page gardener.cloud&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/blog/2018/05/17/gardener/">&amp;ldquo;Gardener, the Kubernetes Botanist&amp;rdquo; blog on kubernetes.io&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/blog/2019/12/02/gardener-project-update/">&amp;ldquo;Gardener Project Update&amp;rdquo; blog on kubernetes.io&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/01-extensibility.md">GEP-1 (Gardener Enhancement Proposal) on extensibility&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gardener/gardener/tree/master/docs/extensions">Extensibility API documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://godoc.org/github.com/gardener/gardener/extensions/pkg">Gardener Extensions Golang library&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/api-reference/">Gardener API Reference&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docs: Networking problemdetector</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-networking-problemdetector/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-networking-problemdetector/</guid><description>
&lt;h1 id="gardener-extension-for-network-problem-detectorhttpsgardenercloud">&lt;a href="https://gardener.cloud">Gardener Extension for Network Problem Detector&lt;/a>&lt;/h1>
&lt;p>&lt;a href="https://reuse.software/">&lt;img src="https://reuse.software/badge/reuse-compliant.svg" alt="reuse compliant">&lt;/a>&lt;/p>
&lt;p>Project Gardener implements the automated management and operation of &lt;a href="https://kubernetes.io/">Kubernetes&lt;/a> clusters as a service.
Its main principle is to leverage Kubernetes concepts for all of its tasks.&lt;/p>
&lt;p>Recently, most of the vendor specific logic has been developed &lt;a href="https://github.com/gardener/gardener">in-tree&lt;/a>.
However, the project has grown to a size where it is very hard to extend, maintain, and test.
With &lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/01-extensibility.md">GEP-1&lt;/a> we have proposed how the architecture can be changed in a way to support external controllers that contain their very own vendor specifics.
This way, we can keep Gardener core clean and independent.&lt;/p>
&lt;p>This controller implements Gardener&amp;rsquo;s extension contract for the &lt;code>shoot-networking-problemdetector&lt;/code> extension.&lt;/p>
&lt;p>An example for a &lt;code>ControllerRegistration&lt;/code> resource that can be used to register this controller to Gardener can be found &lt;a href="https://github.com/gardener/gardener-extension-shoot-networking-problemdetector/blob/main/example/controller-registration.yaml">here&lt;/a>.&lt;/p>
&lt;p>Please find more information regarding the extensibility concepts and a detailed proposal &lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/01-extensibility.md">here&lt;/a>.&lt;/p>
&lt;h2 id="extension-resources">Extension Resources&lt;/h2>
&lt;p>Currently there is nothing to specify in the extension spec.&lt;/p>
&lt;p>Example extension resource:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Extension
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: extension-shoot-networking-problemdetector
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: shoot--project--abc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>When an extension resource is reconciled, the extension controller will create two daemonsets &lt;code>nwpd-agent-pod-net&lt;/code> and &lt;code>nwpd-agent-node-net&lt;/code> deploying
the &amp;ldquo;network problem detector agent&amp;rdquo;.
These daemon sets perform and collect various checks between all nodes of the Kubernetes cluster, to its Kube API server and/or external endpoints.
Checks are performed using TCP connections, PING (ICMP) or mDNS (UDP).
More details about the network problem detector agent can be found in its repository &lt;a href="https://github.com/gardener/network-problem-detector">gardener/network-problem-detector&lt;/a>.&lt;/p>
&lt;p>Please note, this extension controller relies on the &lt;a href="https://github.com/gardener/gardener/blob/master/docs/concepts/resource-manager.md">Gardener-Resource-Manager&lt;/a> to deploy k8s resources to seed and shoot clusters.&lt;/p>
&lt;h2 id="how-to-start-using-or-developing-this-extension-controller-locally">How to start using or developing this extension controller locally&lt;/h2>
&lt;p>You can run the controller locally on your machine by executing &lt;code>make start&lt;/code>.&lt;/p>
&lt;p>We are using Go modules for Golang package dependency management and &lt;a href="https://github.com/onsi/ginkgo">Ginkgo&lt;/a>/&lt;a href="https://github.com/onsi/gomega">Gomega&lt;/a> for testing.&lt;/p>
&lt;h2 id="feedback-and-support">Feedback and Support&lt;/h2>
&lt;p>Feedback and contributions are always welcome. Please report bugs or suggestions as &lt;a href="https://github.com/gardener/gardener-extension-shoot-networking-problemdetector/issues">GitHub issues&lt;/a> or join our &lt;a href="https://kubernetes.slack.com/messages/gardener">Slack channel #gardener&lt;/a> (please invite yourself to the Kubernetes workspace &lt;a href="http://slack.k8s.io">here&lt;/a>).&lt;/p>
&lt;h2 id="learn-more">Learn more!&lt;/h2>
&lt;p>Please find further resources about out project here:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/">Our landing page gardener.cloud&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/blog/2018/05/17/gardener/">&amp;ldquo;Gardener, the Kubernetes Botanist&amp;rdquo; blog on kubernetes.io&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/blog/2019/12/02/gardener-project-update/">&amp;ldquo;Gardener Project Update&amp;rdquo; blog on kubernetes.io&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/01-extensibility.md">GEP-1 (Gardener Enhancement Proposal) on extensibility&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gardener/gardener/tree/master/docs/extensions">Extensibility API documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://godoc.org/github.com/gardener/gardener/extensions/pkg">Gardener Extensions Golang library&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/api-reference/">Gardener API Reference&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docs: Node Audit Logging</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-rsyslog-relp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-rsyslog-relp/</guid><description>
&lt;h1 id="gardener-extension-to-configure-rsyslog-with-relp-modulehttpsgardenercloud">&lt;a href="https://gardener.cloud">Gardener Extension to configure rsyslog with relp module&lt;/a>&lt;/h1>
&lt;p>&lt;a href="https://api.reuse.software/info/github.com/gardener/gardener-extension-shoot-rsyslog-relp">&lt;img src="https://api.reuse.software/badge/github.com/gardener/gardener-extension-shoot-rsyslog-relp" alt="REUSE status">&lt;/a>
&lt;a href="https://goreportcard.com/report/github.com/gardener/gardener-extension-shoot-rsyslog-relp">&lt;img src="https://goreportcard.com/badge/github.com/gardener/gardener-extension-shoot-rsyslog-relp" alt="Go Report Card">&lt;/a>&lt;/p>
&lt;p>Gardener extension controller which configures the rsyslog and auditd services installed on shoot nodes.&lt;/p>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-rsyslog-relp/configuration/">Configuring the Rsyslog Relp Extension&lt;/a> - learn what is the use-case for rsyslog-relp, how to enable it and configure it&lt;/li>
&lt;/ul>
&lt;h2 id="local-setup-and-development">Local setup and development&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-rsyslog-relp/getting-started/">Deploying the Rsyslog Relp Extension Locally&lt;/a> - learn how to set up a local development environment&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-rsyslog-relp/shoot-rsyslog-relp/">Developer Docs for Gardener Shoot Rsyslog Relp Extension&lt;/a> - learn about the inner workings&lt;/li>
&lt;/ul></description></item><item><title>Docs: OpenID Connect services</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-oidc-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-oidc-service/</guid><description>
&lt;h1 id="gardener-extension-for-openid-connect-serviceshttpsgardenercloud">&lt;a href="https://gardener.cloud">Gardener Extension for openid connect services&lt;/a>&lt;/h1>
&lt;p>&lt;a href="https://reuse.software/">&lt;img src="https://reuse.software/badge/reuse-compliant.svg" alt="reuse compliant">&lt;/a>&lt;/p>
&lt;p>Project Gardener implements the automated management and operation of &lt;a href="https://kubernetes.io/">Kubernetes&lt;/a> clusters as a service.
Its main principle is to leverage Kubernetes concepts for all of its tasks.&lt;/p>
&lt;p>Recently, most of the vendor specific logic has been developed &lt;a href="https://github.com/gardener/gardener">in-tree&lt;/a>.
However, the project has grown to a size where it is very hard to extend, maintain, and test.
With &lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/01-extensibility.md">GEP-1&lt;/a> we have proposed how the architecture can be changed in a way to support external controllers that contain their very own vendor specifics.
This way, we can keep Gardener core clean and independent.&lt;/p>
&lt;p>This controller implements Gardener&amp;rsquo;s extension contract for the &lt;code>shoot-oidc-service&lt;/code> extension.&lt;/p>
&lt;p>An example for a &lt;code>ControllerRegistration&lt;/code> resource that can be used to register this controller to Gardener can be found &lt;a href="https://github.com/gardener/gardener-extension-shoot-oidc-service/blob/master/example/controller-registration.yaml">here&lt;/a>.&lt;/p>
&lt;p>Please find more information regarding the extensibility concepts and a detailed proposal &lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/01-extensibility.md">here&lt;/a>.&lt;/p>
&lt;h2 id="compatibility">Compatibility&lt;/h2>
&lt;p>The following lists compatibility requirements of this extension controller with regards to other Gardener components.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>OIDC Extension&lt;/th>
&lt;th>Gardener&lt;/th>
&lt;th>Notes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>== v0.15.0&lt;/code>&lt;/td>
&lt;td>&lt;code>&amp;gt;= 1.60.0 &amp;lt;= v1.64.0&lt;/code>&lt;/td>
&lt;td>A typical side-effect when running Gardener &amp;lt; v1.63.0 is an unexpected scale-down of the OIDC webhook from &lt;code>2 -&amp;gt; 1&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>== v0.16.0&lt;/code>&lt;/td>
&lt;td>&lt;code>&amp;gt;= 1.65.0&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="extension-resources">Extension Resources&lt;/h2>
&lt;p>Example extension resource:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Extension
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: extension-shoot-oidc-service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: shoot--project--abc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: shoot-oidc-service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>When an extension resource is reconciled, the extension controller will create an instance of &lt;a href="https://github.com/gardener/oidc-webhook-authenticator">OIDC Webhook Authenticator&lt;/a>. These resources are placed inside the shoot namespace on the seed. Also, the controller takes care about generating necessary &lt;code>RBAC&lt;/code> resources for the seed as well as for the shoot.&lt;/p>
&lt;p>Please note, this extension controller relies on the &lt;a href="https://github.com/gardener/gardener/blob/master/docs/concepts/resource-manager.md">Gardener-Resource-Manager&lt;/a> to deploy k8s resources to seed and shoot clusters.&lt;/p>
&lt;h2 id="how-to-start-using-or-developing-this-extension-controller-locally">How to start using or developing this extension controller locally&lt;/h2>
&lt;p>You can run the controller locally on your machine by executing &lt;code>make start&lt;/code>.&lt;/p>
&lt;p>We are using Go modules for Golang package dependency management and &lt;a href="https://github.com/onsi/ginkgo">Ginkgo&lt;/a>/&lt;a href="https://github.com/onsi/gomega">Gomega&lt;/a> for testing.&lt;/p>
&lt;h2 id="feedback-and-support">Feedback and Support&lt;/h2>
&lt;p>Feedback and contributions are always welcome. Please report bugs or suggestions as &lt;a href="https://github.com/gardener/gardener-extension-shoot-oidc-service/issues">GitHub issues&lt;/a> or join our &lt;a href="https://kubernetes.slack.com/messages/gardener">Slack channel #gardener&lt;/a> (please invite yourself to the Kubernetes workspace &lt;a href="http://slack.k8s.io">here&lt;/a>).&lt;/p>
&lt;h2 id="learn-more">Learn more!&lt;/h2>
&lt;p>Please find further resources about out project here:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/">Our landing page gardener.cloud&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/blog/2018/05/17/gardener/">&amp;ldquo;Gardener, the Kubernetes Botanist&amp;rdquo; blog on kubernetes.io&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/blog/2019/12/02/gardener-project-update/">&amp;ldquo;Gardener Project Update&amp;rdquo; blog on kubernetes.io&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gardener/gardener/blob/master/docs/proposals/01-extensibility.md">GEP-1 (Gardener Enhancement Proposal) on extensibility&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gardener/gardener/tree/master/docs/extensions">Extensibility API documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://godoc.org/github.com/gardener/gardener/extensions/pkg">Gardener Extensions Golang library&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/api-reference/">Gardener API Reference&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docs: Registry cache</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-registry-cache/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/others/gardener-extension-registry-cache/</guid><description>
&lt;h1 id="gardener-extension-for-registry-cachehttpsgardenercloud">&lt;a href="https://gardener.cloud">Gardener Extension for Registry Cache&lt;/a>&lt;/h1>
&lt;p>&lt;a href="https://api.reuse.software/info/github.com/gardener/gardener-extension-registry-cache">&lt;img src="https://api.reuse.software/badge/github.com/gardener/gardener-extension-registry-cache" alt="REUSE status">&lt;/a>
&lt;a href="https://concourse.ci.gardener.cloud/teams/gardener-tests/pipelines/gardener-extension-registry-cache-main/jobs/main-head-update-job">&lt;img src="https://concourse.ci.gardener.cloud/api/v1/teams/gardener-tests/pipelines/gardener-extension-registry-cache-main/jobs/main-head-update-job/badge" alt="CI Build status">&lt;/a>
&lt;a href="https://goreportcard.com/report/github.com/gardener/gardener-extension-registry-cache">&lt;img src="https://goreportcard.com/badge/github.com/gardener/gardener-extension-registry-cache" alt="Go Report Card">&lt;/a>&lt;/p>
&lt;p>Gardener extension controller which deploys pull-through caches for container registries.&lt;/p>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/extensions/others/gardener-extension-registry-cache/registry-cache/configuration/">Configuring the Registry Cache Extension&lt;/a> - learn what is the use-case for a pull-through cache, how to enable it and configure it&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/extensions/others/gardener-extension-registry-cache/registry-cache/upstream-credentials/">How to provide credentials for upstream repository?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/extensions/others/gardener-extension-registry-cache/registry-cache/migration-from-v1alpha2-to-v1alpha3/">Migration from &lt;code>v1alpha2&lt;/code> to &lt;code>v1alpha3&lt;/code>&lt;/a> - learn how to migrate from the &lt;code>v1alpha2&lt;/code> API version of the &lt;code>RegistryConfig&lt;/code> to &lt;code>v1alpha3&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/extensions/others/gardener-extension-registry-cache/registry-mirror/configuration/">Configuring the Registry Mirror Extension&lt;/a> - learn what is the use-case for a registry mirror, how to enable and configure it&lt;/li>
&lt;/ul>
&lt;h2 id="local-setup-and-development">Local setup and development&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/docs/extensions/others/gardener-extension-registry-cache/getting-started-locally/">Deploying Registry Cache Extension Locally&lt;/a> - learn how to set up a local development environment&lt;/li>
&lt;li>&lt;a href="https://gardener.cloud/docs/extensions/others/gardener-extension-registry-cache/extension-registry-cache/">Developer Docs for Gardener Extension Registry Cache&lt;/a> - learn about the inner workings&lt;/li>
&lt;/ul></description></item></channel></rss>