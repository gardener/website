<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gardener â€“ Egress filtering</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-networking-filter/</link><description>Recent content in Egress filtering on Gardener</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-networking-filter/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Deployment</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-networking-filter/deployment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-networking-filter/deployment/</guid><description>
&lt;h1 id="gardener-networking-policy-filter-for-shoots">Gardener Networking Policy Filter for Shoots&lt;/h1>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Gardener allows shoot clusters to filter egress traffic on node level. To support this the Gardener must be installed with the &lt;code>shoot-networking-filter&lt;/code> extension.&lt;/p>
&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;p>To generally enable the networking filter for shoot objects the &lt;code>shoot-networking-filter&lt;/code> extension must be registered by providing an appropriate &lt;a href="https://github.com/gardener/gardener-extension-shoot-networking-filter/blob/master/example/controller-registration.yaml">extension registration&lt;/a> in the garden cluster.&lt;/p>
&lt;p>Here it is possible to decide whether the extension should be always available for all shoots or whether the extension must be separately enabled per shoot.&lt;/p>
&lt;p>If the extension should be used for all shoots the &lt;code>globallyEnabled&lt;/code> flag should be set to &lt;code>true&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: ControllerRegistration
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resources:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - kind: Extension
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: shoot-networking-filter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> globallyEnabled: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="controllerregistration">ControllerRegistration&lt;/h3>
&lt;p>An example of a &lt;code>ControllerRegistration&lt;/code> for the &lt;code>shoot-networking-filter&lt;/code> can be found here: &lt;a href="https://github.com/gardener/gardener-extension-shoot-networking-filter/blob/master/example/controller-registration.yaml">https://github.com/gardener/gardener-extension-shoot-networking-filter/blob/master/example/controller-registration.yaml&lt;/a>&lt;/p>
&lt;p>The &lt;code>ControllerRegistration&lt;/code> contains a Helm chart which eventually deploys the &lt;code>shoot-networking-filter&lt;/code> to seed clusters. It offers some configuration options, mainly to set up a static filter list or provide the configuration for downloading the filter list from a service endpoint.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: ControllerDeployment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> values:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> egressFilter:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> blackholingEnabled: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> filterListProviderType: static
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> staticFilterList:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - network: 1.2.3.4/31
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> policy: BLOCK_ACCESS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - network: 5.6.7.8/32
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> policy: BLOCK_ACCESS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - network: ::2/128
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> policy: BLOCK_ACCESS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000">#filterListProviderType: download&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000">#downloaderConfig:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># endpoint: https://my.filter.list.server/lists/policy&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># oauth2Endpoint: https://my.auth.server/oauth2/token&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># refreshPeriod: 1h&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000">## if the downloader needs an OAuth2 access token, client credentials can be provided with oauth2Secret&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000">#oauth2Secret:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># clientID: 1-2-3-4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># clientSecret: secret!!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000">## either clientSecret of client certificate is required&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># client.crt.pem: |&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># -----BEGIN CERTIFICATE-----&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># -----END CERTIFICATE-----&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># client.key.pem: |&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># -----BEGIN PRIVATE KEY-----&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># -----END PRIVATE KEY-----&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="enablement-for-a-shoot">Enablement for a Shoot&lt;/h3>
&lt;p>If the shoot networking filter is not globally enabled by default (depends on the extension registration on the garden cluster), it can be enabled per shoot. To enable the service for a shoot, the shoot manifest must explicitly add the &lt;code>shoot-networking-filter&lt;/code> extension.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Shoot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> extensions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - type: shoot-networking-filter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If the shoot networking filter is globally enabled by default, it can be disabled per shoot. To disable the service for a shoot, the shoot manifest must explicitly state it.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Shoot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> extensions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - type: shoot-networking-filter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> disabled: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Shoot Networking Filter</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-networking-filter/shoot-networking-filter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-networking-filter/shoot-networking-filter/</guid><description>
&lt;h1 id="register-shoot-networking-filter-extension-in-shoot-clusters">Register Shoot Networking Filter Extension in Shoot Clusters&lt;/h1>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Within a shoot cluster, it is possible to enable the networking filter. It is necessary that the Gardener installation your shoot cluster runs in is equipped with a &lt;code>shoot-networking-filter&lt;/code> extension. Please ask your Gardener operator if the extension is available in your environment.&lt;/p>
&lt;h2 id="shoot-feature-gate">Shoot Feature Gate&lt;/h2>
&lt;p>In most of the Gardener setups the &lt;code>shoot-networking-filter&lt;/code> extension is not enabled globally and thus must be configured per shoot cluster. Please adapt the shoot specification by the configuration shown below to activate the extension individually.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>kind: Shoot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> extensions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - type: shoot-networking-filter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="opt-out">Opt-out&lt;/h2>
&lt;p>If the shoot networking filter is globally enabled by default, it can be disabled per shoot. To disable the service for a shoot, the shoot manifest must explicitly state it.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Shoot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> extensions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - type: shoot-networking-filter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> disabled: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="ingress-filtering">Ingress Filtering&lt;/h2>
&lt;p>By default, the networking filter only filters egress traffic. However, if you enable blackholing, incoming traffic will also be blocked.
You can enable blackholing on a per-shoot basis.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Shoot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> extensions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - type: shoot-networking-filter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> providerConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> egressFilter:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> blackholingEnabled: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ingress traffic can only be blocked by blackhole routing, if the source IP address is preserved. On Azure, GCP and AliCloud this works by default.
The default on AWS is a classic load balancer that replaces the source IP by it&amp;rsquo;s own IP address. Here, a network load balancer has to be
configured adding the annotation &lt;code>service.beta.kubernetes.io/aws-load-balancer-type: &amp;quot;nlb&amp;quot;&lt;/code> to the service.
On OpenStack, load balancers don&amp;rsquo;t preserve the source address.&lt;/p>
&lt;p>Please note that if you disable &lt;code>blackholing&lt;/code> in an existing shoot, the associated blackhole routes will not be removed automatically.
To remove these routes, you can either replace the affected nodes or delete the routes manually.&lt;/p>
&lt;h2 id="custom-ip">Custom IP&lt;/h2>
&lt;p>It is possible to add custom IP addresses to the network filter. This can be useful for testing purposes.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Shoot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> extensions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - type: shoot-networking-filter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> providerConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> egressFilter:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> staticFilterList:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - network: 1.2.3.4/31
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> policy: BLOCK_ACCESS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - network: 5.6.7.8/32
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> policy: BLOCK_ACCESS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - network: ::2/128
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> policy: BLOCK_ACCESS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>