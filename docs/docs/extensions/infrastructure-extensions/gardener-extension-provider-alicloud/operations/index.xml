<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gardener â€“ Operations</title><link>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-alicloud/operations/</link><description>Recent content in Operations on Gardener</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-alicloud/operations/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Deployment</title><link>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-alicloud/operations/deployment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-alicloud/operations/deployment/</guid><description>
&lt;h1 id="deployment-of-the-alicloud-provider-extension">Deployment of the AliCloud provider extension&lt;/h1>
&lt;p>&lt;strong>Disclaimer:&lt;/strong> This document is NOT a step by step installation guide for the AliCloud provider extension and only contains some configuration specifics regarding the installation of different components via the helm charts residing in the AliCloud provider extension &lt;a href="https://github.com/gardener/gardener-extension-provider-alicloud">repository&lt;/a>.&lt;/p>
&lt;h2 id="gardener-extension-admission-alicloud">gardener-extension-admission-alicloud&lt;/h2>
&lt;h3 id="authentication-against-the-garden-cluster">Authentication against the Garden cluster&lt;/h3>
&lt;p>There are several authentication possibilities depending on whether or not &lt;a href="https://github.com/gardener/garden-setup#concept-the-virtual-cluster">the concept of &lt;em>Virtual Garden&lt;/em>&lt;/a> is used.&lt;/p>
&lt;h4 id="virtual-garden-is-not-used-ie-the-runtime-garden-cluster-is-also-the-target-garden-cluster">&lt;em>Virtual Garden&lt;/em> is not used, i.e., the &lt;code>runtime&lt;/code> Garden cluster is also the &lt;code>target&lt;/code> Garden cluster.&lt;/h4>
&lt;p>&lt;strong>Automounted Service Account Token&lt;/strong>
The easiest way to deploy the &lt;code>gardener-extension-admission-alicloud&lt;/code> component will be to not provide &lt;code>kubeconfig&lt;/code> at all. This way in-cluster configuration and an automounted service account token will be used. The drawback of this approach is that the automounted token will not be automatically rotated.&lt;/p>
&lt;p>&lt;strong>Service Account Token Volume Projection&lt;/strong>
Another solution will be to use &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#service-account-token-volume-projection">Service Account Token Volume Projection&lt;/a> combined with a &lt;code>kubeconfig&lt;/code> referencing a token file (see example below).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>clusters:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- cluster:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> certificate-authority-data: &amp;lt;CA-DATA&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server: https://default.kubernetes.svc.cluster.local
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>contexts:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- context:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cluster: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>current-context: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>users:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- name: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tokenFile: /var/run/secrets/projected/serviceaccount/token
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will allow for automatic rotation of the service account token by the &lt;code>kubelet&lt;/code>. The configuration can be achieved by setting both &lt;code>.Values.global.serviceAccountTokenVolumeProjection.enabled: true&lt;/code> and &lt;code>.Values.global.kubeconfig&lt;/code> in the respective chart&amp;rsquo;s &lt;code>values.yaml&lt;/code> file.&lt;/p>
&lt;h4 id="virtual-garden-is-used-ie-the-runtime-garden-cluster-is-different-from-the-target-garden-cluster">&lt;em>Virtual Garden&lt;/em> is used, i.e., the &lt;code>runtime&lt;/code> Garden cluster is different from the &lt;code>target&lt;/code> Garden cluster.&lt;/h4>
&lt;p>&lt;strong>Service Account&lt;/strong>
The easiest way to setup the authentication will be to create a service account and the respective roles will be bound to this service account in the &lt;code>target&lt;/code> cluster. Then use the generated service account token and craft a &lt;code>kubeconfig&lt;/code> which will be used by the workload in the &lt;code>runtime&lt;/code> cluster. This approach does not provide a solution for the rotation of the service account token. However, this setup can be achieved by setting &lt;code>.Values.global.virtualGarden.enabled: true&lt;/code> and following these steps:&lt;/p>
&lt;ol>
&lt;li>Deploy the &lt;code>application&lt;/code> part of the charts in the &lt;code>target&lt;/code> cluster.&lt;/li>
&lt;li>Get the service account token and craft the &lt;code>kubeconfig&lt;/code>.&lt;/li>
&lt;li>Set the crafted &lt;code>kubeconfig&lt;/code> and deploy the &lt;code>runtime&lt;/code> part of the charts in the &lt;code>runtime&lt;/code> cluster.&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Client Certificate&lt;/strong>
Another solution will be to bind the roles in the &lt;code>target&lt;/code> cluster to a &lt;code>User&lt;/code> subject instead of a service account and use a client certificate for authentication. This approach does not provide a solution for the client certificate rotation. However, this setup can be achieved by setting both &lt;code>.Values.global.virtualGarden.enabled: true&lt;/code> and &lt;code>.Values.global.virtualGarden.user.name&lt;/code>, then following these steps:&lt;/p>
&lt;ol>
&lt;li>Generate a client certificate for the &lt;code>target&lt;/code> cluster for the respective user.&lt;/li>
&lt;li>Deploy the &lt;code>application&lt;/code> part of the charts in the &lt;code>target&lt;/code> cluster.&lt;/li>
&lt;li>Craft a &lt;code>kubeconfig&lt;/code> using the already generated client certificate.&lt;/li>
&lt;li>Set the crafted &lt;code>kubeconfig&lt;/code> and deploy the &lt;code>runtime&lt;/code> part of the charts in the &lt;code>runtime&lt;/code> cluster.&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Projected Service Account Token&lt;/strong>
This approach requires an already deployed and configured &lt;a href="https://github.com/gardener/oidc-webhook-authenticator">oidc-webhook-authenticator&lt;/a> for the &lt;code>target&lt;/code> cluster. Also the &lt;code>runtime&lt;/code> cluster should be registered as a trusted identity provider in the &lt;code>target&lt;/code> cluster. Then projected service accounts tokens from the &lt;code>runtime&lt;/code> cluster can be used to authenticate against the &lt;code>target&lt;/code> cluster. The needed steps are as follows:&lt;/p>
&lt;ol>
&lt;li>Deploy &lt;a href="https://github.com/gardener/oidc-webhook-authenticator">OWA&lt;/a> and establish the needed trust.&lt;/li>
&lt;li>Set &lt;code>.Values.global.virtualGarden.enabled: true&lt;/code> and &lt;code>.Values.global.virtualGarden.user.name&lt;/code>. &lt;strong>Note:&lt;/strong> username value will depend on the trust configuration, e.g., &lt;code>&amp;lt;prefix&amp;gt;:system:serviceaccount:&amp;lt;namespace&amp;gt;:&amp;lt;serviceaccount&amp;gt;&lt;/code>&lt;/li>
&lt;li>Set &lt;code>.Values.global.serviceAccountTokenVolumeProjection.enabled: true&lt;/code> and &lt;code>.Values.global.serviceAccountTokenVolumeProjection.audience&lt;/code>. &lt;strong>Note:&lt;/strong> audience value will depend on the trust configuration, e.g., &lt;code>&amp;lt;cliend-id-from-trust-config&amp;gt;&lt;/code>.&lt;/li>
&lt;li>Craft a kubeconfig (see example below).&lt;/li>
&lt;li>Deploy the &lt;code>application&lt;/code> part of the charts in the &lt;code>target&lt;/code> cluster.&lt;/li>
&lt;li>Deploy the &lt;code>runtime&lt;/code> part of the charts in the &lt;code>runtime&lt;/code> cluster.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>clusters:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- cluster:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> certificate-authority-data: &amp;lt;CA-DATA&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server: https://virtual-garden.api
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: virtual-garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>contexts:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- context:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cluster: virtual-garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user: virtual-garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: virtual-garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>current-context: virtual-garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>users:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- name: virtual-garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tokenFile: /var/run/secrets/projected/serviceaccount/token
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Operations</title><link>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-alicloud/operations/operations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/infrastructure-extensions/gardener-extension-provider-alicloud/operations/operations/</guid><description>
&lt;h1 id="using-the-alicloud-provider-extension-with-gardener-as-operator">Using the Alicloud provider extension with Gardener as operator&lt;/h1>
&lt;p>The &lt;a href="https://github.com/gardener/gardener/blob/master/example/30-cloudprofile.yaml">&lt;code>core.gardener.cloud/v1beta1.CloudProfile&lt;/code> resource&lt;/a> declares a &lt;code>providerConfig&lt;/code> field that is meant to contain provider-specific configuration.
The &lt;a href="https://github.com/gardener/gardener/blob/master/example/50-seed.yaml">&lt;code>core.gardener.cloud/v1beta1.Seed&lt;/code> resource&lt;/a> is structured similarly.
Additionally, it allows configuring settings for the backups of the main etcds&amp;rsquo; data of shoot clusters control planes running in this seed cluster.&lt;/p>
&lt;p>This document explains the necessary configuration for this provider extension. In addition, this document also describes how to enable the use of customized machine images for Alicloud.&lt;/p>
&lt;h2 id="cloudprofile-resource">&lt;code>CloudProfile&lt;/code> resource&lt;/h2>
&lt;p>This section describes, how the configuration for &lt;code>CloudProfile&lt;/code> looks like for Alicloud by providing an example &lt;code>CloudProfile&lt;/code> manifest with minimal configuration that can be used to allow the creation of Alicloud shoot clusters.&lt;/p>
&lt;h3 id="cloudprofileconfig">&lt;code>CloudProfileConfig&lt;/code>&lt;/h3>
&lt;p>The cloud profile configuration contains information about the real machine image IDs in the Alicloud environment (AMIs).
You have to map every version that you specify in &lt;code>.spec.machineImages[].versions&lt;/code> here such that the Alicloud extension knows the AMI for every version you want to offer.&lt;/p>
&lt;p>An example &lt;code>CloudProfileConfig&lt;/code> for the Alicloud extension looks as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: alicloud.provider.extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: CloudProfileConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>machineImages:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- name: coreos
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> versions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - version: 2023.4.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> regions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: eu-central-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id: coreos_2023_4_0_64_30G_alibase_20190319.vhd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="example-cloudprofile-manifest">Example &lt;code>CloudProfile&lt;/code> manifest&lt;/h3>
&lt;p>Please find below an example &lt;code>CloudProfile&lt;/code> manifest:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: CloudProfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: alicloud
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: alicloud
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubernetes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> versions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - version: 1.24.3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - version: 1.23.8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> expirationDate: &lt;span style="color:#a31515">&amp;#34;2022-10-31T23:59:59Z&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> machineImages:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: coreos
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> versions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - version: 2023.4.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> machineTypes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: ecs.sn2ne.large
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cpu: &lt;span style="color:#a31515">&amp;#34;2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> gpu: &lt;span style="color:#a31515">&amp;#34;0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> memory: 8Gi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> volumeTypes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: cloud_efficiency
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> class: standard
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: cloud_ssd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> class: premium
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> regions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: eu-central-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zones:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: eu-central-1a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: eu-central-1b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> providerConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiVersion: alicloud.provider.extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: CloudProfileConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> machineImages:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: coreos
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> versions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - version: 2023.4.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> regions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: eu-central-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id: coreos_2023_4_0_64_30G_alibase_20190319.vhd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="enable-customized-machine-images-for-the-alicloud-extension">Enable customized machine images for the Alicloud extension&lt;/h2>
&lt;p>Customized machine images can be created for an Alicloud account and shared with other Alicloud accounts.
The same customized machine image has different image ID in different regions on Alicloud.
If you need to enable &lt;code>encrypted system disk&lt;/code>, you must provide customized machine images.
Administrators/Operators need to explicitly declare them per imageID per region as below:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>machineImages:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- name: customized_coreos
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> regions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - imageID: &amp;lt;image_id_in_eu_central_1&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> region: eu-central-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - imageID: &amp;lt;image_id_in_cn_shanghai&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> region: cn-shanghai
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> version: 2191.4.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>End-users have to have the permission to use the customized image from its creator Alicloud account. To enable end-users to use customized images, the images are shared from Alicloud account of Seed operator with end-users&amp;rsquo; Alicloud accounts. Administrators/Operators need to explicitly provide Seed operator&amp;rsquo;s Alicloud account access credentials (base64 encoded) as below:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>machineImageOwnerSecret:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: machine-image-owner
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> accessKeyID: &amp;lt;base64_encoded_access_key_id&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> accessKeySecret: &amp;lt;base64_encoded_access_key_secret&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>As a result, a Secret named &lt;code>machine-image-owner&lt;/code> by default will be created in namespace of Alicloud provider extension.&lt;/p>
&lt;p>Operators should also maintain custom image IDs which are to be shared with end-users as below:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>toBeSharedImageIDs:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &amp;lt;image_id_1&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &amp;lt;image_id_2&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &amp;lt;image_id_3&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="example-controllerdeployment-manifest-for-enabling-customized-machine-images">Example &lt;code>ControllerDeployment&lt;/code> manifest for enabling customized machine images&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: ControllerDeployment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: extension-provider-alicloud
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: helm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> providerConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chart: |&lt;span style="color:#a31515">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> &lt;/span> H4sIFAAAAAAA/yk...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> values:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> config:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> machineImageOwnerSecret:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> accessKeyID: &amp;lt;base64_encoded_access_key_id&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> accessKeySecret: &amp;lt;base64_encoded_access_key_secret&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> toBeSharedImageIDs:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &amp;lt;image_id_1&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &amp;lt;image_id_2&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> machineImages:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: customized_coreos
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> regions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - imageID: &amp;lt;image_id_in_eu_central_1&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> region: eu-central-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - imageID: &amp;lt;image_id_in_cn_shanghai&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> region: cn-shanghai
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> version: 2191.4.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> csi:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> enableADController: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resources:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> limits:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cpu: 500m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> memory: 1Gi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> requests:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> memory: 128Mi
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="seed-resource">&lt;code>Seed&lt;/code> resource&lt;/h2>
&lt;p>This provider extension does not support any provider configuration for the &lt;code>Seed&lt;/code>&amp;rsquo;s &lt;code>.spec.provider.providerConfig&lt;/code> field.
However, it supports to managing of backup infrastructure, i.e., you can specify a configuration for the &lt;code>.spec.backup&lt;/code> field.&lt;/p>
&lt;h3 id="backup-configuration">Backup configuration&lt;/h3>
&lt;p>A Seed of type &lt;code>alicloud&lt;/code> can be configured to perform backups for the main etcds&amp;rsquo; of the shoot clusters control planes using Alicloud &lt;a href="https://www.alibabacloud.com/help/doc-detail/31817.htm">Object Storage Service&lt;/a>.&lt;/p>
&lt;p>The location/region where the backups will be stored defaults to the region of the Seed (&lt;code>spec.provider.region&lt;/code>).&lt;/p>
&lt;p>Please find below an example &lt;code>Seed&lt;/code> manifest (partly) that configures backups using Alicloud Object Storage Service.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: core.gardener.cloud/v1beta1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Seed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: my-seed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> provider:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: alicloud
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> region: cn-shanghai
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> backup:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> provider: alicloud
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> secretRef:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: backup-credentials
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: garden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>An example of the referenced secret containing the credentials for the Alicloud Object Storage Service can be found in the &lt;a href="https://github.com/gardener/gardener-extension-provider-alicloud/blob/master/example/30-etcd-backup-secret.yaml">example folder&lt;/a>.&lt;/p>
&lt;h4 id="permissions-for-alicloud-object-storage-service">Permissions for Alicloud Object Storage Service&lt;/h4>
&lt;p>Please make sure the RAM user associated with the provided AccessKey pair has the following permission.&lt;/p>
&lt;ul>
&lt;li>AliyunOSSFullAccess&lt;/li>
&lt;/ul></description></item></channel></rss>