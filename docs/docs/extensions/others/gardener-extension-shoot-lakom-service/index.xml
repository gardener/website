<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gardener â€“ Lakom service</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-lakom-service/</link><description>Recent content in Lakom service on Gardener</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-lakom-service/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Deployment</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-lakom-service/deployment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-lakom-service/deployment/</guid><description>
&lt;h1 id="gardener-lakom-service-for-shoots">Gardener Lakom Service for Shoots&lt;/h1>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Gardener allows Shoot clusters to use &lt;code>Lakom&lt;/code> admission controller for cosign image signing verification. To support this the Gardener must be installed with the &lt;code>shoot-lakom-service&lt;/code> extension.&lt;/p>
&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;p>To generally enable the Lakom service for shoot objects the &lt;code>shoot-lakom-service&lt;/code> extension must be registered by providing an appropriate &lt;a href="https://github.com/gardener/gardener-extension-shoot-lakom-service/blob/main/example/controller-registration.yaml">extension registration&lt;/a> in the garden cluster.&lt;/p>
&lt;p>Here it is possible to decide whether the extension should be always available for all shoots or whether the extension must be separately enabled per shoot.&lt;/p>
&lt;p>If the extension should be used for all shoots the &lt;code>globallyEnabled&lt;/code> flag should be set to &lt;code>true&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resources:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - kind: Extension
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: shoot-lakom-service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> globallyEnabled: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="shoot-feature-gate">Shoot Feature Gate&lt;/h3>
&lt;p>If the shoot Lakom service is not globally enabled by default (depends on the extension registration on the garden cluster), it can be enabled per shoot. To enable the service for a shoot, the shoot manifest must explicitly add the &lt;code>shoot-lakom-service&lt;/code> extension.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> extensions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - type: shoot-lakom-service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If the shoot Lakom service is globally enabled by default, it can be disabled per shoot. To disable the service for a shoot, the shoot manifest must explicitly state it.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> extensions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - type: shoot-lakom-service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> disabled: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Lakom</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-lakom-service/lakom/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-lakom-service/lakom/</guid><description>
&lt;h1 id="introduction">Introduction&lt;/h1>
&lt;p>Lakom is kubernetes admission controller which purpose is to implement
&lt;a href="https://github.com/sigstore/cosign">cosign&lt;/a> image signature verification with
public cosign key. It also takes care to resolve image tags to sha256 digests. A
built-in cache mechanism can be enabled to reduce the load toward the OCI
registry.&lt;/p>
&lt;h2 id="flags">Flags&lt;/h2>
&lt;p>Lakom admission controller is configurable via command line flags. The trusted
cosign public keys and the associated algorithms associated with them are set
viq configuration file provided with the flag &lt;code>--lakom-config-path&lt;/code>.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Flag Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default Value&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>--bind-address&lt;/code>&lt;/td>
&lt;td>Address to bind to&lt;/td>
&lt;td>&amp;ldquo;0.0.0.0&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>--cache-refresh-interval&lt;/code>&lt;/td>
&lt;td>Refresh interval for the cached objects&lt;/td>
&lt;td>30s&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>--cache-ttl&lt;/code>&lt;/td>
&lt;td>TTL for the cached objects. Set to 0, if cache has to be disabled&lt;/td>
&lt;td>10m0s&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>--contention-profiling&lt;/code>&lt;/td>
&lt;td>Enable lock contention profiling, if profiling is enabled&lt;/td>
&lt;td>false&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>--health-bind-address&lt;/code>&lt;/td>
&lt;td>Bind address for the health server&lt;/td>
&lt;td>&amp;ldquo;:8081&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-h&lt;/code>, &lt;code>--help&lt;/code>&lt;/td>
&lt;td>help for lakom&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>--insecure-allow-insecure-registries&lt;/code>&lt;/td>
&lt;td>If set, communication via HTTP with registries will be allowed.&lt;/td>
&lt;td>false&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>--insecure-allow-untrusted-images&lt;/code>&lt;/td>
&lt;td>If set, the webhook will just return warning for the images without trusted signatures.&lt;/td>
&lt;td>false&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>--kubeconfig&lt;/code>&lt;/td>
&lt;td>Paths to a kubeconfig. Only required if out-of-cluster.&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>--lakom-config-path&lt;/code>&lt;/td>
&lt;td>Path to file with lakom configuration containing cosign public keys used to verify the image signatures&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>--metrics-bind-address&lt;/code>&lt;/td>
&lt;td>Bind address for the metrics server&lt;/td>
&lt;td>&amp;ldquo;:8080&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>--port&lt;/code>&lt;/td>
&lt;td>Webhook server port&lt;/td>
&lt;td>9443&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>--profiling&lt;/code>&lt;/td>
&lt;td>Enable profiling via web interface host:port/debug/pprof/&lt;/td>
&lt;td>false&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>--tls-cert-dir&lt;/code>&lt;/td>
&lt;td>Directory with server TLS certificate and key (must contain a tls.crt and tls.key file&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>--use-only-image-pull-secrets&lt;/code>&lt;/td>
&lt;td>If set, only the credentials from the image pull secrets of the pod are used to access the OCI registry. Otherwise, the node identity and docker config are also used.&lt;/td>
&lt;td>false&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>--version&lt;/code>&lt;/td>
&lt;td>prints version information and quits; &amp;ndash;version=vX.Y.Z&amp;hellip; sets the reported version&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="lakom-cosign-public-keys-configuration-file">Lakom Cosign Public Keys Configuration File&lt;/h2>
&lt;p>Lakom cosign public keys configuration file should be YAML or JSON formatted. It
can set multiple trusted keys, as each key must be given a name. The supported
types of public keys are &lt;code>RSA&lt;/code>, &lt;code>ECDSA&lt;/code> and &lt;code>Ed25519&lt;/code>. The &lt;code>RSA&lt;/code> keys can be
additionally configured with a signature verification algorithm specifying the
scheme and hash function used during signature verification. As of now &lt;code>ECDSA&lt;/code>
and &lt;code>Ed25519&lt;/code> keys cannot be configured with specific algorithm.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>publicKeys:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- name: example-public-key
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> algorithm: RSASSA-PSS-SHA256
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key: |-&lt;span style="color:#a31515">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> -----BEGIN PUBLIC KEY-----
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAPeQXbIWMMXYV+9+j9b4jXTflnpfwn4E
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> GMrmqYVhm0sclXb2FPP5aV/NFH6SZdHDZcT8LCNsNgxzxV4N+UE/JIsCAwEAAQ==
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515"> -----END PUBLIC KEY-----&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="supported-rsa-signature-verification-algorithms">Supported RSA Signature Verification Algorithms&lt;/h3>
&lt;ul>
&lt;li>&lt;code>RSASSA-PKCS1-v1_5-SHA256&lt;/code>: uses &lt;code>RSASSA-PKCS1-v1_5&lt;/code> scheme with &lt;code>SHA256&lt;/code> hash func&lt;/li>
&lt;li>&lt;code>RSASSA-PKCS1-v1_5-SHA384&lt;/code>: uses &lt;code>RSASSA-PKCS1-v1_5&lt;/code> scheme with &lt;code>SHA384&lt;/code> hash func&lt;/li>
&lt;li>&lt;code>RSASSA-PKCS1-v1_5-SHA512&lt;/code>: uses &lt;code>RSASSA-PKCS1-v1_5&lt;/code> scheme with &lt;code>SHA512&lt;/code> hash func&lt;/li>
&lt;li>&lt;code>RSASSA-PSS-SHA256&lt;/code>: uses &lt;code>RSASSA-PSS&lt;/code> scheme with &lt;code>SHA256&lt;/code> hash func&lt;/li>
&lt;li>&lt;code>RSASSA-PSS-SHA384&lt;/code>: uses &lt;code>RSASSA-PSS&lt;/code> scheme with &lt;code>SHA384&lt;/code> hash func&lt;/li>
&lt;li>&lt;code>RSASSA-PSS-SHA512&lt;/code>: uses &lt;code>RSASSA-PSS&lt;/code> scheme with &lt;code>SHA512&lt;/code> hash func&lt;/li>
&lt;/ul></description></item><item><title>Docs: Shoot Extension</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-lakom-service/shoot-extension/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-lakom-service/shoot-extension/</guid><description>
&lt;h1 id="introduction">Introduction&lt;/h1>
&lt;p>This extension implements &lt;a href="https://github.com/sigstore/cosign">cosign&lt;/a> image verification. It is strictly limited only to the kubernetes system components deployed by Gardener and other Gardener Extensions in the &lt;code>kube-system&lt;/code> namespace of a shoot cluster.&lt;/p>
&lt;h2 id="shoot-feature-gate">Shoot Feature Gate&lt;/h2>
&lt;p>In most of the Gardener setups the &lt;code>shoot-lakom-service&lt;/code> extension is enabled globally and thus can be configured per shoot cluster. Please adapt the shoot specification by the configuration shown below to disable the extension individually.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>kind: Shoot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> extensions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - type: shoot-lakom-service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> disabled: &lt;span style="color:#00f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> providerConfig:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apiVersion: lakom.extensions.gardener.cloud/v1alpha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind: LakomConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scope: KubeSystem
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>scope&lt;/code> field instruct lakom which pods to validate. The possible values are:&lt;/p>
&lt;ul>
&lt;li>&lt;code>KubeSystem&lt;/code>
Lakom will validate all pods in the &lt;code>kube-system&lt;/code> namespace.&lt;/li>
&lt;li>&lt;code>KubeSystemManagedByGardener&lt;/code>
Lakom will validate all pods in the &lt;code>kube-system&lt;/code> namespace that are annotated with &amp;ldquo;managed-by/gardener&amp;rdquo;&lt;/li>
&lt;li>&lt;code>Cluster&lt;/code>
Lakom will validate all pods in all namespaces.&lt;/li>
&lt;/ul></description></item></channel></rss>