<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gardener â€“ Architecture</title><link>https://gardener.cloud/docs/concepts/architecture/</link><description>Recent content in Architecture on Gardener</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://gardener.cloud/docs/concepts/architecture/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Dashboard</title><link>https://gardener.cloud/components/dashboard/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/components/dashboard/</guid><description>
&lt;h1 id="gardener-dashboard">Gardener Dashboard&lt;/h1>
&lt;p>&lt;img src="https://github.com/gardener/dashboard/raw/master/logo/logo_gardener_dashboard.png" alt="">&lt;/p>
&lt;p>&lt;a href="https://concourse.ci.gardener.cloud/teams/gardener/pipelines/dashboard-master/jobs/master-head-update-job">&lt;img src="https://concourse.ci.gardener.cloud/api/v1/teams/gardener/pipelines/dashboard-master/jobs/master-head-update-job/badge" alt="CI Build status">&lt;/a>
&lt;a href="https://kubernetes.slack.com/messages/gardener">&lt;img src="https://img.shields.io/badge/slack-gardener-brightgreen.svg?logo=slack" alt="Slack channel #gardener">&lt;/a>&lt;/p>
&lt;h2 id="demo">Demo&lt;/h2>
&lt;p>&lt;img src="https://gardener.cloud/__resources/dashboard-demo_f287c1.gif" alt="Gardener Demo" />&lt;/p>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;p>&lt;a href="https://github.com/gardener/dashboard/blob/master/docs/README.md">Gardener Dashboard Documentation&lt;/a>&lt;/p>
&lt;h2 id="people">People&lt;/h2>
&lt;p>The following SAP developers contributed to this project until this
initial contribution was published as open source.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>contributor&lt;/th>
&lt;th style="text-align:right">commits (%)&lt;/th>
&lt;th style="text-align:right">+lines&lt;/th>
&lt;th style="text-align:right">-lines&lt;/th>
&lt;th>first commit&lt;/th>
&lt;th>last commit&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Holger Koser&lt;/td>
&lt;td style="text-align:right">313 (42%)&lt;/td>
&lt;td style="text-align:right">57878&lt;/td>
&lt;td style="text-align:right">18562&lt;/td>
&lt;td>2017-07-13&lt;/td>
&lt;td>2018-01-23&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Andreas Herz&lt;/td>
&lt;td style="text-align:right">307 (41%)&lt;/td>
&lt;td style="text-align:right">13666&lt;/td>
&lt;td style="text-align:right">11099&lt;/td>
&lt;td>2017-07-14&lt;/td>
&lt;td>2017-10-27&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Peter Sutter&lt;/td>
&lt;td style="text-align:right">99 (13%)&lt;/td>
&lt;td style="text-align:right">4838&lt;/td>
&lt;td style="text-align:right">3967&lt;/td>
&lt;td>2017-11-07&lt;/td>
&lt;td>2018-01-23&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Gross, Lukas&lt;/td>
&lt;td style="text-align:right">31 (4%)&lt;/td>
&lt;td style="text-align:right">400&lt;/td>
&lt;td style="text-align:right">267&lt;/td>
&lt;td>2018-01-10&lt;/td>
&lt;td>2018-01-23&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>It is derived from the historical, internal &lt;em>gardener-ui&lt;/em> repository
at commit eeb623d60c86e6037c0e1dc2bdd9e54663bf41a8.&lt;/p>
&lt;h2 id="license">License&lt;/h2>
&lt;p>&lt;a href="https://github.com/gardener/dashboard/blob/master/LICENSES/Apache-2.0.txt">Apache License 2.0&lt;/a>&lt;/p>
&lt;p>Copyright 2020 The Gardener Authors&lt;/p></description></item><item><title>Docs: gardenctl</title><link>https://gardener.cloud/components/gardenctl/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/components/gardenctl/</guid><description>
&lt;h1 id="gardenctl">Gardenctl&lt;/h1>
&lt;p>&lt;img src="https://github.com/gardener/gardenctl/raw/master/logo/logo_gardener_cli_large.png" alt="">&lt;/p>
&lt;p>&lt;a href="https://goreportcard.com/report/github.com/gardener/gardenctl">&lt;img src="https://goreportcard.com/badge/github.com/gardener/gardenctl" alt="Go Report Card">&lt;/a>
&lt;a href="https://badge.fury.io/gh/gardener%2Fgardenctl">&lt;img src="https://badge.fury.io/gh/gardener%2Fgardenctl.svg" alt="release">&lt;/a>&lt;/p>
&lt;h1 id="what-is-gardenctl">What is gardenctl?&lt;/h1>
&lt;p>&lt;code>gardenctl&lt;/code> is a command-line client for administrative purposes for the &lt;a href="https://github.com/gardener/gardener">Gardener&lt;/a>. It facilitates the administration of one or many garden, seed and shoot clusters, e.g. to check for issues which occured in one of these clusters. Details about the concept behind the Gardener are described in the &lt;a href="https://github.com/gardener/documentation/wiki/Architecture">Gardener wiki&lt;/a>.&lt;/p>
&lt;h1 id="installation">Installation&lt;/h1>
&lt;p>&lt;code>gardenctl&lt;/code> is shipped for mac and linux in a binary format.&lt;/p>
&lt;p>Option 1: Install the latest release with &lt;a href="https://brew.sh/">Homebrew&lt;/a> (macOS and Linux) as follows:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">brew install gardener/tap/gardenctl
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Option 2: Manually download and install from &lt;a href="https://github.com/gardener/gardenctl/releases">gardenctl releases&lt;/a> as follows:&lt;/p>
&lt;ol>
&lt;li>Download the latest release:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">curl -LO https://github.com/gardener/gardenctl/releases/download/&lt;span class="k">$(&lt;/span>curl -s https://raw.githubusercontent.com/gardener/gardenctl/master/LATEST&lt;span class="k">)&lt;/span>/gardenctl-darwin-amd64
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To download a specific version, replace the &lt;code>$(curl -s https://raw.githubusercontent.com/gardener/gardenctl/master/LATEST)&lt;/code> portion of the command with the specific version.&lt;/p>
&lt;p>For example, to download version 0.16.0 on macOS, type:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">curl -LO https://github.com/gardener/gardenctl/releases/download/v0.16.0/gardenctl-darwin-amd64
&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Make the gardenctl binary executable.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">chmod +x ./gardenctl-darwin-amd64
&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Move the binary in to your PATH.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo mv ./gardenctl-darwin-amd64 /usr/local/bin/gardenctl
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="how-to-build-it">How to build it&lt;/h1>
&lt;p>If no binary builds are available for your platform or architecture, you can build it from source, &lt;code>go get&lt;/code> it or build the docker image from Dockerfile. Please keep in mind to use an up to date version of &lt;a href="https://golang.org/doc/devel/release.html">golang&lt;/a>.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>To build &lt;code>gardenctl&lt;/code> from sources you need to have a running Golang environment. Moreover, since &lt;code>gardenctl&lt;/code> allows to execute &lt;code>kubectl&lt;/code> as well as a running &lt;code>kubectl&lt;/code> installation is recommended, but not required. Please check this &lt;a href="https://github.com/gardener/gardener/blob/master/docs/development/local_setup.md">description&lt;/a> for further details.&lt;/p>
&lt;h2 id="build-gardenctl">Build gardenctl&lt;/h2>
&lt;h3 id="from-source">From source&lt;/h3>
&lt;p>First, you need to clone the repository and build &lt;code>gardenctl&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git clone https://github.com/gardener/gardenctl.git
&lt;span class="nb">cd&lt;/span> gardenctl
make build
&lt;/code>&lt;/pre>&lt;/div>&lt;p>After successfully building &lt;code>gardenctl&lt;/code> the executables are in the directory &lt;code>~/go/src/github.com/gardener/gardenctl/bin/&lt;/code>. Next, move the executable for your architecture to &lt;code>/usr/local/bin&lt;/code>. In this case for darwin-amd64.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo mv bin/darwin-amd64/gardenctl-darwin-amd64 /usr/local/bin/gardenctl
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>gardenctl&lt;/code> supports auto completion. This recommended feature is bound to &lt;code>gardenctl&lt;/code> or the alias &lt;code>g&lt;/code>. To configure it you can run:&lt;/p>
&lt;p>if you are using &lt;code>bash&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;source &amp;lt;(gardenctl completion bash)&amp;#34;&lt;/span> &amp;gt;&amp;gt; ~/.bashrc
&lt;span class="nb">source&lt;/span> ~/.bashrc
&lt;/code>&lt;/pre>&lt;/div>&lt;p>if you are using &lt;code>zsh&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;source &amp;lt;(gardenctl completion zsh)&amp;#34;&lt;/span> &amp;gt;&amp;gt; ~/.zshrc
&lt;span class="nb">source&lt;/span> ~/.zshrc
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="via-dockerfile">Via Dockerfile&lt;/h3>
&lt;p>First clone the repository as described in the the build step &amp;ldquo;From source&amp;rdquo;. As next step add the garden &amp;ldquo;config&amp;rdquo; file and &amp;ldquo;clusters&amp;rdquo; folder with the corresponding kubeconfig files for the garden cluster. Then build the container image via &lt;code>docker build -t gardener/gardenctl:v1 .&lt;/code> in the cloned repository and run a shell in the image with &lt;code>docker run -it gardener/gardenctl:v1 /bin/bash&lt;/code>.&lt;/p>
&lt;h1 id="configure-gardenctl">Configure gardenctl&lt;/h1>
&lt;p>&lt;code>gardenctl&lt;/code> requires a configuration file. The default location is in &lt;code>~/.garden/config&lt;/code>, but it can be overwritten with the environment variable &lt;code>GARDENCONFIG&lt;/code>.&lt;/p>
&lt;p>Here an example file:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">email&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">john.doe@example.com&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">githubURL&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://github.location.company.corp&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">gardenClusters&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">kubeConfig&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">~/clusters/dev/kubeconfig.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">dashboardUrl&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://url_to_dashboard&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">accessRestrictions&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">seed.gardener.cloud/eu-access&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">notifyIf&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">warning msg&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">options&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">support.gardener.cloud/eu-access-for-cluster-addons&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">notifyIf&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">warning msg&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">support.gardener.cloud/eu-access-for-cluster-nodes&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">notifyIf&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">warning msg&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">prod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">kubeConfig&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">~/clusters/prod/kubeconfig.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The path to the kubeconfig files of a garden cluster can be relative by using the ~ (tilde) expansion or absolute.&lt;/p>
&lt;p>&lt;code>gardenctl&lt;/code> caches some information, e.g. the garden project names. The location of this cache is per default &lt;code>$GARDENCTL_HOME/cache&lt;/code>. If &lt;code>GARDENCTL_HOME&lt;/code> is not set, &lt;code>~/.garden&lt;/code> is assumed.&lt;/p>
&lt;p>&lt;code>gardenctl&lt;/code> supports multiple sessions. The session ID can be set via &lt;code>$GARDEN_SESSION_ID&lt;/code> and the sessions are stored under &lt;code>$GARDENCTL_HOME/sessions&lt;/code>.&lt;/p>
&lt;p>&lt;code>gardenctl&lt;/code> makes it easy to get additional information of your IaaS provider by using the secrets stored in the corresponding projects in the Gardener. To use this functionality, the CLIs of the IaaS providers need to be available.&lt;/p>
&lt;p>Please check the IaaS provider documentation for more details about their CLIs.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/aliyun/aliyun-cli">aliyun&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://aws.amazon.com/cli/">aws&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/cli/azure/install-azure-cli?view=azure-cli-latest">az&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/sdk/downloads">gcloud&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://pypi.python.org/pypi/python-openstackclient">openstack&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Moreover, &lt;code>gardenctl&lt;/code> offers auto completion. To use it, the command&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">gardenctl completion bash
&lt;/code>&lt;/pre>&lt;/div>&lt;p>print on the standard output a completion script which can be sourced via&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">source&lt;/span> &amp;lt;&lt;span class="o">(&lt;/span>gardenctl completion bash&lt;span class="o">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Please keep in mind that the auto completion is bound to &lt;code>gardenctl&lt;/code> or the alias &lt;code>g&lt;/code>.&lt;/p>
&lt;h1 id="use-gardenctl">Use gardenctl&lt;/h1>
&lt;p>&lt;code>gardenctl&lt;/code> requires the definition of a target, e.g. garden, project, seed or shoot. The following commands, e.g. &lt;code>gardenctl ls shoots&lt;/code> uses the target definition as a context for getting the information.&lt;/p>
&lt;p>Targets represent a hierarchical structure of resources. On top, there is/are the garden/s. E.g. in case you setup a development and a production garden, you would have two entries in your &lt;code>~/.garden/config&lt;/code>. Via &lt;code>gardenctl ls gardens&lt;/code> you get a list of the available gardens.&lt;/p>
&lt;ul>
&lt;li>&lt;code>gardenctl get target&lt;/code>&lt;br>
Displays the current target&lt;/li>
&lt;li>&lt;code>gardenctl target [garden|project|seed|shoot]&lt;/code>&lt;br>
Set the target e.g. to a garden. It is as well possible to set the target directly to a element deeper in the hierarchy, e.g. to a shoot.&lt;/li>
&lt;li>&lt;code>gardenctl drop target&lt;/code>&lt;br>
Drop the deepest target.&lt;/li>
&lt;/ul>
&lt;h2 id="examples-of-basic-usage">Examples of basic usage:&lt;/h2>
&lt;ul>
&lt;li>List all seed cluster&lt;br>
&lt;code>gardenctl ls seeds&lt;/code>&lt;/li>
&lt;li>List all projects with shoot cluster&lt;br>
&lt;code>gardenctl ls projects&lt;/code>&lt;/li>
&lt;li>Target a seed cluster&lt;br>
&lt;code>gardenctl target seed-gce-dev&lt;/code>&lt;/li>
&lt;li>Target a project&lt;br>
&lt;code>gardenctl target garden-vora&lt;/code>&lt;/li>
&lt;li>Open prometheus ui for a targeted shoot-cluster&lt;br>
&lt;code>gardenctl show prometheus&lt;/code>&lt;/li>
&lt;li>Execute an aws command on a targeted aws shoot cluster&lt;br>
&lt;code>gardenctl aws ec2 describe-instances&lt;/code> or&lt;br>
&lt;code>gardenctl aws ec2 describe-instances --no-cache&lt;/code> without locally caching credentials&lt;/li>
&lt;li>Target a shoot directly and get all kube-dns pods in kube-system namespace&lt;br>
&lt;code>gardenctl target myshoot&lt;/code>&lt;br>
&lt;code>gardenctl kubectl get pods -- -n kube-system -l k8s-app=kube-dns&lt;/code>&lt;/li>
&lt;li>List all cluster with an issue&lt;br>
&lt;code>gardenctl ls issues&lt;/code>&lt;/li>
&lt;li>Drop an element from target stack&lt;br>
&lt;code>gardenctl drop&lt;/code>&lt;/li>
&lt;li>Open a shell to a cluster node&lt;br>
&lt;code>gardenctl shell nodename&lt;/code>&lt;/li>
&lt;li>Show logs from elasticsearch&lt;br>
&lt;code>gardenctl logs etcd-main --elasticsearch&lt;/code>&lt;/li>
&lt;li>Show last 100 logs from elasticsearch from the last 2 hours&lt;br>
&lt;code>gardenctl logs etcd-main --elasticsearch --since=2h --tail=100&lt;/code>&lt;/li>
&lt;li>Show logs from seed nodes&lt;br>
&lt;code>gardenctl target -g garden-name -s seed-name&lt;/code>&lt;br>
&lt;code>gardenctl logs tf infra shoot-name&lt;/code>&lt;/li>
&lt;li>Show logs from shoot nodes&lt;br>
&lt;code>gardenctl target -g garden-name -t shoot-name&lt;/code>&lt;br>
&lt;code>gardenctl logs api | scheduler | controller-manager | etcd-main -c etcd |etcd-main -c backup-restore | vpn-seed | vpn-shoot | machine-controller-manager | prometheus |grafana | cluster-autoscaler&lt;/code>&lt;/li>
&lt;li>Show logs from garden nodes&lt;br>
&lt;code>gardenctl target -g garden-name&lt;/code>&lt;br>
&lt;code>gardenctl logs gardener-apiserver | gardener-controller-manager&lt;/code>&lt;/li>
&lt;li>SSH to shoot nodes (please unset any proxy env vars like &lt;code>HTTPS&lt;/code> and &lt;code>HTTP&lt;/code> before this command)&lt;br>
&lt;code>gardenctl k get nodes&lt;/code>&lt;br>
&lt;code>gardenctl ssh node_name&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="advanced-usage-based-on-jsonquery">Advanced usage based on JsonQuery&lt;/h2>
&lt;p>The following examples are based on &lt;a href="https://stedolan.github.io/jq/">jq&lt;/a>. The &lt;a href="https://jqplay.org/jq?q=.%5B%5D&amp;amp;j=%5B%5D">Json Query Playground&lt;/a> offers a convenient environment to test the queries.&lt;/p>
&lt;p>Below a list of examples:&lt;/p>
&lt;ul>
&lt;li>List the project name, shoot name and the state for all projects with issues&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">gardenctl ls issues -o json &lt;span class="p">|&lt;/span> jq &lt;span class="s1">&amp;#39;.issues[] | { project: .project, shoot: .shoot, state: .status.lastOperation.state }&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Print all issues of a single project e.g. &lt;code>garden-myproject&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">gardenctl ls issues -o json &lt;span class="p">|&lt;/span> jq &lt;span class="s1">&amp;#39;.issues[] | if (.project==&amp;#34;garden-myproject&amp;#34;) then . else empty end&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Print all issues with error state &amp;ldquo;Error&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">gardenctl ls issues -o json &lt;span class="p">|&lt;/span> jq &lt;span class="s1">&amp;#39;.issues[] | if (.status.lastOperation.state==&amp;#34;Error&amp;#34;) then . else empty end&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Print all issues with error state not equal &amp;ldquo;Succeded&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">gardenctl ls issues -o json &lt;span class="p">|&lt;/span> jq &lt;span class="s1">&amp;#39;.issues[] | if (.status.lastOperation.state!=&amp;#34;Succeeded&amp;#34;) then . else empty end&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Print &lt;code>createdBy&lt;/code> information (typically email addresses) of all shoots&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">gardenctl k get shoots -- -n garden-core -o json &lt;span class="p">|&lt;/span> jq -r &lt;span class="s2">&amp;#34;.items[].metadata | {email: .annotations.\&amp;#34;garden.sapcloud.io/createdBy\&amp;#34;, name: .name, namespace: .namespace}&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here a few on cluster analysis:&lt;/p>
&lt;ul>
&lt;li>Which states are there and how many clusters are in this state?&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">gardenctl ls issues -o json &lt;span class="p">|&lt;/span> jq &lt;span class="s1">&amp;#39;.issues | group_by( .status.lastOperation.state ) | .[] | {state:.[0].status.lastOperation.state, count:length}&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Get all clusters in state &lt;code>Failed&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">gardenctl ls issues -o json &lt;span class="p">|&lt;/span> jq &lt;span class="s1">&amp;#39;.issues[] | if (.status.lastOperation.state==&amp;#34;Failed&amp;#34;) then . else empty end&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Gardener</title><link>https://gardener.cloud/components/gardener/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/components/gardener/</guid><description>
&lt;h1 id="gardenerhttpsgardenercloud">&lt;a href="https://gardener.cloud">Gardener&lt;/a>&lt;/h1>
&lt;p>&lt;img src="https://github.com/gardener/gardener/raw/master/logo/gardener-large.png" alt="Gardener Logo">&lt;/p>
&lt;p>&lt;a href="https://concourse.ci.gardener.cloud/teams/gardener/pipelines/gardener-master/jobs/master-head-update-job">&lt;img src="https://concourse.ci.gardener.cloud/api/v1/teams/gardener/pipelines/gardener-master/jobs/master-head-update-job/badge" alt="CI Build status">&lt;/a>
&lt;a href="https://kubernetes.slack.com/messages/gardener">&lt;img src="https://img.shields.io/badge/slack-gardener-brightgreen.svg?logo=slack" alt="Slack channel #gardener">&lt;/a>
&lt;a href="https://goreportcard.com/report/github.com/gardener/gardener">&lt;img src="https://goreportcard.com/badge/github.com/gardener/gardener" alt="Go Report Card">&lt;/a>
&lt;a href="https://godoc.org/github.com/gardener/gardener">&lt;img src="https://godoc.org/github.com/gardener/gardener?status.svg" alt="GoDoc">&lt;/a>
&lt;a href="https://bestpractices.coreinfrastructure.org/projects/1822">&lt;img src="https://bestpractices.coreinfrastructure.org/projects/1822/badge" alt="CII Best Practices">&lt;/a>&lt;/p>
&lt;p>Gardener implements the automated management and operation of &lt;a href="https://kubernetes.io/">Kubernetes&lt;/a> clusters as a service and provides a fully validated extensibility framework that can be adjusted to any programmatic cloud or infrastructure provider.&lt;/p>
&lt;p>Gardener is 100% Kubernets-native and exposes its own Cluster API to create homogeneous clusters on all supported infrastructures. This API differs from &lt;a href="https://github.com/kubernetes/community/tree/master/sig-cluster-lifecycle">SIG Cluster Lifecycle&lt;/a>&amp;rsquo;s &lt;a href="https://github.com/kubernetes-sigs/cluster-api#cluster-api">Cluster API&lt;/a> that only harmonizes how to get to clusters, while &lt;a href="https://gardener.cloud/docs/references/core/#core.gardener.cloud/v1beta1.Shoot">Gardener&amp;rsquo;s Cluster API&lt;/a> goes one step further and also harmonizes the make-up of the clusters themselves. That means, Gardener gives you homogeneous clusters with exactly the same bill of material, configuration and behavior on all supported infrastructures, which you can see further down below in the section on our K8s Conformance Test Coverage.&lt;/p>
&lt;p>In 2020, SIG Cluster Lifecycle&amp;rsquo;s Cluster API made a huge step forward with &lt;a href="https://kubernetes.io/blog/2020/04/21/cluster-api-v1alpha3-delivers-new-features-and-an-improved-user-experience/">&lt;code>v1alpha3&lt;/code>&lt;/a> and the newly added support for declarative control plane management. This made it possible to integrate managed services like GKE or Gardener. We would be more than happy, if the community would be interested, to contribute a Gardener control plane provider. For more information on the relation between Gardener API and SIG Cluster Lifecycle&amp;rsquo;s Cluster API, please see &lt;a href="https://github.com/gardener/gardener/blob/master/docs/concepts/cluster-api.md">here&lt;/a>.&lt;/p>
&lt;p>Gardener&amp;rsquo;s main principle is to &lt;strong>leverage Kubernetes concepts for all of its tasks&lt;/strong>.&lt;/p>
&lt;p>In essence, Gardener is an &lt;a href="https://kubernetes.io/docs/tasks/access-kubernetes-api/setup-extension-api-server/">extension API server&lt;/a> that comes along with a bundle of custom controllers. It introduces new API objects in an existing Kubernetes cluster (which is called &lt;strong>garden&lt;/strong> cluster) in order to use them for the management of end-user Kubernetes clusters (which are called &lt;strong>shoot&lt;/strong> clusters). These shoot clusters are described via &lt;a href="https://github.com/gardener/gardener/blob/master/example/90-shoot.yaml">declarative cluster specifications&lt;/a> which are observed by the controllers. They will bring up the clusters, reconcile their state, perform automated updates and make sure they are always up and running.&lt;/p>
&lt;p>To accomplish these tasks reliably and to offer a high quality of service, Gardener controls the main components of a Kubernetes cluster (etcd, API server, controller manager, scheduler). These so-called &lt;em>control plane&lt;/em> components are hosted in Kubernetes clusters themselves (which are called &lt;strong>seed&lt;/strong> clusters). This is the main difference compared to many other OSS cluster provisioning tools: The shoot clusters do not have dedicated master VMs. Instead, the control plane is deployed as a native Kubernetes workload into the seeds (the architecture is commonly referred to as kubeception or inception design). This does not only effectively reduce the total cost of ownership but also allows easier implementations for &amp;ldquo;day-2 operations&amp;rdquo; (like cluster updates or robustness) by relying on all the mature Kubernetes features and capabilities.&lt;/p>
&lt;p>Gardener reuses the identical Kubernetes design to span a scalable multi-cloud and multi-cluster landscape. Such familiarity with known concepts has proven to quickly ease the initial learning curve and accelerate developer productivity:&lt;/p>
&lt;ul>
&lt;li>Kubernetes API Server = Gardener API Server&lt;/li>
&lt;li>Kubernetes Controller Manager = Gardener Controller Manager&lt;/li>
&lt;li>Kubernetes Scheduler = Gardener Scheduler&lt;/li>
&lt;li>Kubelet = Gardenlet&lt;/li>
&lt;li>Node = Seed cluster&lt;/li>
&lt;li>Pod = Shoot cluster&lt;/li>
&lt;/ul>
&lt;p>Please find more information regarding the concepts and a detailed description of the architecture in our &lt;a href="https://github.com/gardener/documentation/wiki/Architecture">Gardener Wiki&lt;/a> and our blog posts on kubernetes.io: &lt;a href="https://kubernetes.io/blog/2018/05/17/gardener">Gardener - the Kubernetes Botanist (17.5.2018)&lt;/a> and &lt;a href="https://kubernetes.io/blog/2019/12/02/gardener-project-update">Gardener Project Update (2.12.2019)&lt;/a>.&lt;/p>
&lt;hr>
&lt;h2 id="k8s-conformance-test-coverage-img-srchttpsrawgithubusercontentcomcncfartworkmasterprojectskubernetescertified-kubernetesversionlesscolorcertified-kubernetes-colorsvg-altcertified-kubernetes-logo-width50-alignright">K8s Conformance Test Coverage &lt;img src="https://raw.githubusercontent.com/cncf/artwork/master/projects/kubernetes/certified-kubernetes/versionless/color/certified-kubernetes-color.svg" alt="certified kubernetes logo" width="50" align="right"/>&lt;/h2>
&lt;p>Gardener takes part in the &lt;a href="https://www.cncf.io/certification/software-conformance/">Certified Kubernetes Conformance Program&lt;/a> to attest its compatibility with the K8s conformance testsuite. Currently Gardener is certified for K8s versions up to v1.20, see &lt;a href="https://docs.google.com/spreadsheets/d/1LxSqBzjOxfGx3cmtZ4EbB_BGCxT_wlxW_xgHVVa23es/edit#gid=0&amp;amp;range=113:114">the conformance spreadsheet&lt;/a>.&lt;/p>
&lt;p>Continuous conformance test results of the latest stable Gardener release are uploaded regularly to the CNCF test grid:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Provider/K8s&lt;/th>
&lt;th>v1.21&lt;/th>
&lt;th>v1.20&lt;/th>
&lt;th>v1.19&lt;/th>
&lt;th>v1.18&lt;/th>
&lt;th>v1.17&lt;/th>
&lt;th>v1.16&lt;/th>
&lt;th>v1.15&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>AWS&lt;/strong>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.21%20AWS">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.21%20AWS/tests_status?style=svg" alt="Gardener v1.21 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.20%20AWS">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.20%20AWS/tests_status?style=svg" alt="Gardener v1.20 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.19%20AWS">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.19%20AWS/tests_status?style=svg" alt="Gardener v1.19 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.18%20AWS">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.18%20AWS/tests_status?style=svg" alt="Gardener v1.18 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.17%20AWS">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.17%20AWS/tests_status?style=svg" alt="Gardener v1.17 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.16%20AWS">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.16%20AWS/tests_status?style=svg" alt="Gardener v1.16 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>[1]&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Azure&lt;/strong>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.21%20Azure">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.21%20Azure/tests_status?style=svg" alt="Gardener v1.21 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.20%20Azure">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.20%20Azure/tests_status?style=svg" alt="Gardener v1.20 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.19%20Azure">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.19%20Azure/tests_status?style=svg" alt="Gardener v1.19 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.18%20Azure">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.18%20Azure/tests_status?style=svg" alt="Gardener v1.18 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.17%20Azure">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.17%20Azure/tests_status?style=svg" alt="Gardener v1.17 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.16%20Azure">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.16%20Azure/tests_status?style=svg" alt="Gardener v1.16 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>[1]&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>GCP&lt;/strong>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.21%20GCE">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.21%20GCE/tests_status?style=svg" alt="Gardener v1.21 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.20%20GCE">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.20%20GCE/tests_status?style=svg" alt="Gardener v1.20 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.19%20GCE">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.19%20GCE/tests_status?style=svg" alt="Gardener v1.19 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.18%20GCE">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.18%20GCE/tests_status?style=svg" alt="Gardener v1.18 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.17%20GCE">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.17%20GCE/tests_status?style=svg" alt="Gardener v1.17 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.16%20GCE">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.16%20GCE/tests_status?style=svg" alt="Gardener v1.16 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>[1]&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>OpenStack&lt;/strong>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.21%20OpenStack">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.21%20OpenStack/tests_status?style=svg" alt="Gardener v1.21 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.20%20OpenStack">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.20%20OpenStack/tests_status?style=svg" alt="Gardener v1.20 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.19%20OpenStack">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.19%20OpenStack/tests_status?style=svg" alt="Gardener v1.19 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.18%20OpenStack">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.18%20OpenStack/tests_status?style=svg" alt="Gardener v1.18 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.17%20OpenStack">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.17%20OpenStack/tests_status?style=svg" alt="Gardener v1.17 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.16%20OpenStack">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.16%20OpenStack/tests_status?style=svg" alt="Gardener v1.16 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>[1]&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Alicloud&lt;/strong>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.21%20Alibaba%20Cloud">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.21%20Alibaba%20Cloud/tests_status?style=svg" alt="Gardener v1.21 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.20%20Alibaba%20Cloud">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.20%20Alibaba%20Cloud/tests_status?style=svg" alt="Gardener v1.20 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.19%20Alibaba%20Cloud">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.19%20Alibaba%20Cloud/tests_status?style=svg" alt="Gardener v1.19 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.18%20Alibaba%20Cloud">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.18%20Alibaba%20Cloud/tests_status?style=svg" alt="Gardener v1.18 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.17%20Alibaba%20Cloud">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.17%20Alibaba%20Cloud/tests_status?style=svg" alt="Gardener v1.17 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://testgrid.k8s.io/conformance-gardener#Gardener,%20v1.16%20Alibaba%20Cloud">&lt;img src="https://testgrid.k8s.io/q/summary/conformance-gardener/Gardener,%20v1.16%20Alibaba%20Cloud/tests_status?style=svg" alt="Gardener v1.16 Conformance Tests">&lt;/a>&lt;/td>
&lt;td>[1]&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Packet&lt;/strong>&lt;/td>
&lt;td>N/A&lt;/td>
&lt;td>N/A&lt;/td>
&lt;td>N/A&lt;/td>
&lt;td>N/A&lt;/td>
&lt;td>N/A&lt;/td>
&lt;td>N/A&lt;/td>
&lt;td>N/A&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>vSphere&lt;/strong>&lt;/td>
&lt;td>N/A&lt;/td>
&lt;td>N/A&lt;/td>
&lt;td>N/A&lt;/td>
&lt;td>N/A&lt;/td>
&lt;td>N/A&lt;/td>
&lt;td>N/A&lt;/td>
&lt;td>N/A&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>[1] Conformance tests are still executed and validated, unfortunately &lt;a href="https://github.com/kubernetes/test-infra/pull/18509#issuecomment-668204180">no longer shown in TestGrid&lt;/a>.&lt;/p>
&lt;p>Besides the conformance tests, over 400 additional e2e tests are executed on a daily basis. Get an overview of the test results at &lt;a href="https://testgrid.k8s.io/gardener-all">testgrid&lt;/a>.&lt;/p>
&lt;h2 id="start-using-or-developing-the-gardener-locally">Start using or developing the Gardener locally&lt;/h2>
&lt;p>See our documentation in the &lt;code>/docs&lt;/code> repository, please &lt;a href="https://github.com/gardener/gardener/blob/master/docs/README.md">find the index here&lt;/a>.&lt;/p>
&lt;h2 id="setting-up-your-own-gardener-landscape-in-the-cloud">Setting up your own Gardener landscape in the Cloud&lt;/h2>
&lt;p>The quickest way to test drive Gardener is to install it virtually onto an existing Kubernetes cluster, just like you would install any other Kubernetes-ready application. You can do this with our &lt;a href="https://github.com/gardener/gardener/tree/master/charts/gardener">Gardener Helm Chart&lt;/a>.&lt;/p>
&lt;p>Alternatively you can use our &lt;a href="https://github.com/gardener/garden-setup">garden setup&lt;/a> project to create a fully configured Gardener landscape which also includes our &lt;a href="https://github.com/gardener/dashboard">Gardener Dashboard&lt;/a>.&lt;/p>
&lt;h2 id="feedback-and-support">Feedback and Support&lt;/h2>
&lt;p>Feedback and contributions are always welcome!&lt;/p>
&lt;p>All channels for getting in touch or learning about our project are listed under the &lt;a href="https://github.com/gardener/documentation/blob/master/CONTRIBUTING.md#community">community&lt;/a> section. We are cordially inviting interested parties to join our &lt;a href="https://github.com/gardener/documentation/blob/master/CONTRIBUTING.md#bi-weekly-meetings">bi-weekly meetings&lt;/a>.&lt;/p>
&lt;p>Please report bugs or suggestions about our Kubernetes clusters as such or the Gardener itself as &lt;a href="https://github.com/gardener/gardener/issues">GitHub issues&lt;/a> or join our &lt;a href="https://kubernetes.slack.com/messages/gardener">Slack channel #gardener&lt;/a> (please invite yourself to the Kubernetes workspace &lt;a href="http://slack.k8s.io">here&lt;/a>).&lt;/p>
&lt;h2 id="learn-more">Learn More!&lt;/h2>
&lt;p>Please find further resources about our project here:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gardener.cloud/">Our landing page gardener.cloud&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/blog/2019/12/02/gardener-project-update/">&amp;ldquo;Gardener Project Update&amp;rdquo; blog on kubernetes.io&lt;/a>.&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/blog/2018/05/17/gardener/">&amp;ldquo;Gardener, the Kubernetes Botanist&amp;rdquo; blog on kubernetes.io&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://news.sap.com/2018/11/hasso-plattner-founders-award-finalist-profile-project-gardener/">SAP news article about &amp;ldquo;Project Gardener&amp;rdquo;&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.sap-tv.com/video/40962/gardener-planting-the-seeds-of-success-in-the-cloud">Introduction movie: &amp;ldquo;Gardener - Planting the Seeds of Success in the Cloud&amp;rdquo;&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=bfw22WPg99A">&amp;ldquo;Thinking Cloud Native&amp;rdquo; talk at EclipseCon 2018&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blogs.sap.com/2018/07/26/showcase-of-gardener-at-oscon/">Blog - &amp;ldquo;Showcase of Gardener at OSCON 2018&amp;rdquo;&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docs: kubify</title><link>https://gardener.cloud/components/kubify/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/components/kubify/</guid><description>
&lt;h1 id="kubify">Kubify&lt;/h1>
&lt;p>&lt;img src="https://gardener.cloud/__resources/kubify@2x_f21939.png" alt="Kubify Logo">&lt;/p>
&lt;p>Kubify is a &lt;a href="https://www.terraform.io/">Terraform&lt;/a> based provisioning project for setting up production ready &lt;a href="https://kubernetes.io/">Kubernetes&lt;/a> clusters on public and private Cloud infrastructures. Kubify currently supports:&lt;/p>
&lt;ul>
&lt;li>OpenStack&lt;/li>
&lt;li>AWS&lt;/li>
&lt;li>Azure&lt;/li>
&lt;/ul>
&lt;p>Key features of Kubify are:&lt;/p>
&lt;ul>
&lt;li>Kubernetes v1.10.12&lt;/li>
&lt;li>Etcd v3.3.10 multi master node setup&lt;/li>
&lt;li>Etcd backup and restore&lt;/li>
&lt;li>Supports rolling updates&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="to-start-using-or-developing-kubify-locally">To start using or developing Kubify locally&lt;/h2>
&lt;p>See our documentation in the &lt;code>/docs&lt;/code> repository or &lt;a href="https://github.com/gardener/kubify/blob/master/docs/README.md">find the main documentation here&lt;/a>.&lt;/p>
&lt;h2 id="feedback-and-support">Feedback and Support&lt;/h2>
&lt;p>Feedback and contributions are always welcome. Please report bugs or suggestions about our Kubernetes clusters as such or the Kubify itself as &lt;a href="https://github.com/gardener/kubify/issues">GitHub issues&lt;/a> or join our &lt;a href="https://kubernetes.slack.com/messages/gardener">Slack channel #gardener&lt;/a> (Invite yourself to the Kubernetes Slack workspace &lt;a href="http://slack.k8s.io">here&lt;/a>).&lt;/p></description></item></channel></rss>