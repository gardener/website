<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Certificate services on Gardener</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-cert-service/</link><description>Recent content in Certificate services on Gardener</description><generator>Hugo</generator><language>en-US</language><lastBuildDate>Thu, 20 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-cert-service/index.xml" rel="self" type="application/rss+xml"/><item><title>Changing alerting settings</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-cert-service/alerting/</link><pubDate>Thu, 20 Jul 2023 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-cert-service/alerting/</guid><description>&lt;h1 id="changing-alerting-settings">Changing alerting settings&lt;/h1>
&lt;p>Certificates are normally renewed automatically 30 days before they expire.
As a second line of defense, there is an alerting in Prometheus activated if the certificate is a few days
before expiration. By default, the alert is triggered 15 days before expiration.&lt;/p>
&lt;p>You can configure the days in the &lt;code>providerConfig&lt;/code> of the extension.
Setting it to 0 disables the alerting.&lt;/p>
&lt;p>In this example, the days are changed to 3 days before expiration.&lt;/p></description></item><item><title>Manage certificates with Gardener for default domain</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-cert-service/request_default_domain_cert/</link><pubDate>Wed, 20 Jul 2022 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-cert-service/request_default_domain_cert/</guid><description>&lt;h1 id="manage-certificates-with-gardener-for-default-domain">Manage certificates with Gardener for default domain&lt;/h1>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Dealing with applications on Kubernetes which offer a secure service endpoints (e.g. HTTPS) also require you to enable a
secured communication via SSL/TLS. With the &lt;a href="https://github.com/gardener/gardener-extension-shoot-cert-service">certificate extension&lt;/a> enabled, Gardener can manage commonly trusted X.509 certificate for your application
endpoint. From initially requesting certificate, it also handeles their renewal in time using the free Let&amp;rsquo;s Encrypt API.&lt;/p>
&lt;p>&lt;strong>There are two senarios with which you can use the certificate extension&lt;/strong>&lt;/p></description></item><item><title>Manage certificates with Gardener for public domain</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-cert-service/request_cert/</link><pubDate>Wed, 20 Jul 2022 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-cert-service/request_cert/</guid><description>&lt;h1 id="manage-certificates-with-gardener-for-public-domain">Manage certificates with Gardener for public domain&lt;/h1>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Dealing with applications on Kubernetes which offer a secure service endpoints (e.g. HTTPS) also require you to enable a
secured communication via SSL/TLS. With the &lt;a href="https://github.com/gardener/gardener-extension-shoot-cert-service">certificate extension&lt;/a> enabled, Gardener can manage commonly trusted X.509 certificate for your application
endpoint. From initially requesting certificate, it also handeles their renewal in time using the free Let&amp;rsquo;s Encrypt API.&lt;/p>
&lt;p>&lt;strong>There are two senarios with which you can use the certificate extension&lt;/strong>&lt;/p></description></item><item><title>Using a custom Issuer</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-cert-service/custom_shoot_issuer/</link><pubDate>Wed, 20 Jul 2022 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-cert-service/custom_shoot_issuer/</guid><description>&lt;h1 id="using-a-custom-issuer">Using a custom Issuer&lt;/h1>
&lt;p>Another possibility to request certificates for custom domains is a dedicated issuer.&lt;/p>
&lt;blockquote>
&lt;p>Note: This is only needed if the default issuer provided by Gardener is restricted to shoot related domains or you are using domain names not visible to public DNS servers. &lt;strong>Which means that your senario most likely doesn&amp;rsquo;t require your to add an issuer&lt;/strong>.&lt;/p>
&lt;/blockquote>
&lt;p>The custom issuers are specified normally in the shoot manifest. If the &lt;code>shootIssuers&lt;/code> feature is enabled, it can alternatively be defined in the shoot cluster.&lt;/p></description></item><item><title>Deployment</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-cert-service/deployment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-cert-service/deployment/</guid><description>&lt;h1 id="gardener-certificate-management">Gardener Certificate Management&lt;/h1>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Gardener comes with an extension that enables shoot owners to request X.509 compliant certificates for shoot domains.&lt;/p>
&lt;h2 id="extension-installation">Extension Installation&lt;/h2>
&lt;p>The &lt;code>Shoot-Cert-Service&lt;/code> extension can be deployed and configured via Gardener&amp;rsquo;s native resource &lt;a href="https://gardener.cloud/docs/gardener/extensions/controllerregistration/">ControllerRegistration&lt;/a>.&lt;/p>
&lt;h3 id="prerequisites">Prerequisites&lt;/h3>
&lt;p>To let the &lt;code>Shoot-Cert-Service&lt;/code> operate properly, you need to have:&lt;/p>
&lt;ul>
&lt;li>a &lt;a href="https://github.com/gardener/external-dns-management">DNS service&lt;/a> in your seed&lt;/li>
&lt;li>contact details and optionally a private key for a pre-existing &lt;a href="https://letsencrypt.org/">Let&amp;rsquo;s Encrypt&lt;/a> account&lt;/li>
&lt;/ul>
&lt;h3 id="controllerregistration">ControllerRegistration&lt;/h3>
&lt;p>An example of a &lt;code>ControllerRegistration&lt;/code> for the &lt;code>Shoot-Cert-Service&lt;/code> can be found at &lt;a href="https://github.com/gardener/gardener-extension-shoot-cert-service/blob/master/example/controller-registration.yaml">controller-registration.yaml&lt;/a>.&lt;/p></description></item><item><title>Gardener yourself a Shoot with Istio, custom Domains, and Certificates</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-cert-service/tutorials/tutorial-custom-domain-with-istio/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-cert-service/tutorials/tutorial-custom-domain-with-istio/</guid><description>&lt;p>As we ramp up more and more friends of Gardener, I thought it worthwhile to explore and write a tutorial about how to simply:&lt;/p>
&lt;ul>
&lt;li>create a Gardener managed Kubernetes Cluster (Shoot) via kubectl&lt;/li>
&lt;li>install Istio as a preferred, production ready Ingress/Service Mesh (instead of the Nginx Ingress addon)&lt;/li>
&lt;li>attach your own custom domain to be managed by Gardener&lt;/li>
&lt;li>combine everything with certificates from Let&amp;rsquo;s Encrypt&lt;/li>
&lt;/ul>
&lt;p>Here are some pre-pointers that you will need to go deeper:&lt;/p></description></item><item><title>Gateway Api Gateways</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-cert-service/tutorials/gateway-api-gateways/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-cert-service/tutorials/gateway-api-gateways/</guid><description>&lt;h1 id="using-annotated-gateway-api-gateway-andor-httproutes-as-source">Using annotated Gateway API Gateway and/or HTTPRoutes as Source&lt;/h1>
&lt;p>This tutorial describes how to use annotated Gateway API resources as source for &lt;code>Certificate&lt;/code>.&lt;/p>
&lt;h2 id="install-istio-on-your-cluster">Install Istio on your cluster&lt;/h2>
&lt;p>Follow the Istio &lt;a href="https://istio.io/latest/docs/tasks/traffic-management/ingress/gateway-api/">Kubernetes Gateway API&lt;/a> to
install the Gateway API and to install Istio.&lt;/p>
&lt;p>These are the typical commands for the Istio installation with the Kubernetes Gateway API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>export KUEBCONFIG=...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl -L https://istio.io/downloadIstio | sh -
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kubectl get crd gateways.gateway.networking.k8s.io &amp;amp;&amp;gt; /dev/null || &lt;span style="color:#a31515">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a31515">&lt;/span> { kubectl kustomize &lt;span style="color:#a31515">&amp;#34;github.com/kubernetes-sigs/gateway-api/config/crd?ref=v1.0.0&amp;#34;&lt;/span> | kubectl apply -f -; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>istioctl install --set profile=minimal -y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kubectl label namespace default istio-injection=enabled
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="verify-that-gateway-source-works">Verify that Gateway Source works&lt;/h2>
&lt;h3 id="install-a-sample-service">Install a sample service&lt;/h3>
&lt;p>With automatic sidecar injection:&lt;/p></description></item><item><title>Istio Gateways</title><link>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-cert-service/tutorials/istio-gateways/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/docs/extensions/others/gardener-extension-shoot-cert-service/tutorials/istio-gateways/</guid><description>&lt;h1 id="using-annotated-istio-gateway-andor-istio-virtual-service-as-source">Using annotated Istio Gateway and/or Istio Virtual Service as Source&lt;/h1>
&lt;p>This tutorial describes how to use annotated Istio Gateway resources as source for &lt;code>Certificate&lt;/code> resources.&lt;/p>
&lt;h2 id="install-istio-on-your-cluster">Install Istio on your cluster&lt;/h2>
&lt;p>Follow the &lt;a href="https://istio.io/latest/docs/setup/getting-started/">Istio Getting Started&lt;/a> to download and install Istio.&lt;/p>
&lt;p>These are the typical commands for the istio demo installation&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>export KUEBCONFIG=...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl -L https://istio.io/downloadIstio | sh -
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>istioctl install --set profile=demo -y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kubectl label namespace default istio-injection=enabled
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>Note: If you are using a KinD cluster, the istio-ingressgateway service may be pending forever.&lt;/em>&lt;/p></description></item></channel></rss>